(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    250766,       4851]
NotebookOptionsPosition[    248025,       4756]
NotebookOutlinePosition[    248382,       4772]
CellTagsIndexPosition[    248339,       4769]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Lagrangian for the trebuchet", "Section",
 CellChangeTimes->{{3.697545621731216*^9, 3.6975456400766897`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Initial Conditions", "Subsubsection",
 CellChangeTimes->{{3.697646100406608*^9, 3.6976461094214277`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pi", "/", "3"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.698539436026534*^9, 3.6985394379197483`*^9}}],

Cell[BoxData["1.0471975511965976`"], "Output",
 CellChangeTimes->{{3.698539438288536*^9, 3.698539445026218*^9}, 
   3.6985395223803787`*^9, 3.698539553296658*^9, 3.698545390860688*^9, 
   3.698584605027525*^9, 3.69858572515726*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Mb", "=", "0.045"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Mass", " ", "of", " ", "the", " ", "bar"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"theta0", " ", "=", " ", "1"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "This", " ", "is", " ", "the", " ", "angle", " ", "with", " ", "respect",
       " ", "of", " ", "the", " ", "horizontal", " ", "of", " ", "the", " ", 
      "short", " ", "arm"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"phi0", " ", "=", " ", "0"}], ";", 
    RowBox[{"(*", 
     RowBox[{
     "angle", " ", "with", " ", "respect", " ", "to", " ", "the", " ", 
      "vertical", " ", "of", " ", "the", " ", "counterarm"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Lt", "=", ".99"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Total", " ", "length", " ", "of", " ", "the", " ", "bar"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Lb", " ", "=", " ", 
     RowBox[{"Lt", "-", "Ls"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"Length", " ", "of", " ", "the", " ", "Bar"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Mp", " ", "=", " ", "0.002"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Mass", " ", "of", " ", "the", " ", "projectile"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Mcw", " ", "=", " ", "0.162"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Mass", " ", "of", " ", "the", " ", "counterweigth"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Mbase", " ", "=", " ", "0.485"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Mass", " ", "of", " ", "the", " ", "base"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Msy", " ", "=", " ", 
     RowBox[{"Mbase", "+", "Mb", "+", "Mcw", "+", "Mp"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"Mass", " ", "of", " ", "the", " ", "whole", " ", "trebuchet"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"g", " ", "=", "9.81"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Lcw", "=", ".12"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Length", " ", "of", " ", "the", " ", "counterweigth"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Ls", "=", ".36"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Length", " ", "of", " ", "the", " ", "small", " ", "arm"}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.697545658925699*^9, 3.697545836480393*^9}, {
   3.697546215844254*^9, 3.697546233954159*^9}, {3.697745688287743*^9, 
   3.697745690511684*^9}, {3.697746136866582*^9, 3.697746142170188*^9}, {
   3.697746294232481*^9, 3.697746417775625*^9}, {3.69774650723974*^9, 
   3.697746541855748*^9}, {3.6977465829115877`*^9, 3.697746625031598*^9}, 
   3.697746727144484*^9, 3.697755542597913*^9, {3.697755707448059*^9, 
   3.697755708526354*^9}, {3.697755747258336*^9, 3.6977557828481073`*^9}, {
   3.697755973643618*^9, 3.697755973737482*^9}, 3.697756290369693*^9, {
   3.697756425990026*^9, 3.697756428298678*^9}, {3.697756496515149*^9, 
   3.697756501962661*^9}, {3.697756578783516*^9, 3.697756579800898*^9}, {
   3.697756859683298*^9, 3.6977568773106937`*^9}, {3.697756921376314*^9, 
   3.697756922138111*^9}, {3.6977569860684547`*^9, 3.697756989632441*^9}, {
   3.697757052742901*^9, 3.697757054290247*^9}, {3.697757145211651*^9, 
   3.697757149744258*^9}, {3.6977576715136967`*^9, 3.6977576743285847`*^9}, {
   3.697805598717301*^9, 3.6978056055328503`*^9}, {3.697808102931435*^9, 
   3.697808127648637*^9}, {3.69792979686386*^9, 3.697929801713233*^9}, {
   3.69792983488872*^9, 3.6979298366935863`*^9}, {3.697930228182549*^9, 
   3.697930240055256*^9}, {3.697932499718755*^9, 3.697932508542769*^9}, {
   3.697932542085517*^9, 3.697932562308257*^9}, {3.697932813427272*^9, 
   3.697932813761156*^9}, {3.697933846943306*^9, 3.697933849373829*^9}, {
   3.697934201055912*^9, 3.697934217843399*^9}, {3.697981928361063*^9, 
   3.697981940402918*^9}, {3.698084639502326*^9, 3.6980846397121153`*^9}, {
   3.69808490159658*^9, 3.6980849746822233`*^9}, {3.698085043481367*^9, 
   3.6980850581762943`*^9}, {3.698085433955467*^9, 3.698085590002293*^9}, {
   3.698105403576098*^9, 3.698105403815153*^9}, {3.698114813468451*^9, 
   3.6981148153325777`*^9}, {3.698114867464776*^9, 3.698114868383659*^9}, {
   3.6981149282446947`*^9, 3.698114930493053*^9}, {3.698115440881888*^9, 
   3.698115441962118*^9}, {3.69811549467834*^9, 3.698115497270577*^9}, {
   3.698355745655286*^9, 3.6983557934099627`*^9}, {3.698355839541904*^9, 
   3.69835584520331*^9}, 3.698355876511063*^9, {3.698356489077444*^9, 
   3.6983564977507753`*^9}, 3.6983565557489347`*^9, {3.698356600439077*^9, 
   3.698356602930602*^9}, {3.698356639673815*^9, 3.698356661741835*^9}, {
   3.698356755005802*^9, 3.698356796672431*^9}, {3.698357360474354*^9, 
   3.698357362929543*^9}, {3.698357786564261*^9, 3.6983577873836946`*^9}, {
   3.69836731816853*^9, 3.698367355734641*^9}, {3.6984409857884083`*^9, 
   3.698440987355685*^9}, {3.6984410245475073`*^9, 3.6984410287441673`*^9}, {
   3.69844107538632*^9, 3.698441077624412*^9}, {3.698494636448031*^9, 
   3.698494701183807*^9}, {3.698494917149222*^9, 3.698494932408387*^9}, {
   3.698495011842575*^9, 3.698495013005094*^9}, {3.6984950559138393`*^9, 
   3.698495063033609*^9}, {3.6984951006198807`*^9, 3.698495103220189*^9}, {
   3.698505865376195*^9, 3.6985058656437473`*^9}, {3.698507706303203*^9, 
   3.698507707147513*^9}, {3.698539231755509*^9, 3.698539231832532*^9}, {
   3.698539440938383*^9, 3.698539442646353*^9}, {3.6985395199944057`*^9, 
   3.698539542171217*^9}, {3.6985449170436087`*^9, 3.698544919039953*^9}, {
   3.69854495769948*^9, 3.698545138256282*^9}, 3.698584600886423*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating the potential term", "Subsubsection",
 CellChangeTimes->{{3.697546417076269*^9, 3.69754644674609*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vo", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "Mp"}], "*", "Lb", "*", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"theta", "[", "t", "]"}], "]"}], "*", "g"}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Ls", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"theta", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"Lcw", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"phi", "[", "t", "]"}], "]"}]}]}], ")"}], "*", "g", "*", 
     "Mcw"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"theta", "[", "t", "]"}], "]"}], "*", "Mb", "*", "g", "*", 
     RowBox[{"(", 
      RowBox[{"Lb", "-", "Ls"}], ")"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697545880913975*^9, 3.697545980203746*^9}, {
   3.697546247033984*^9, 3.697546247999371*^9}, {3.697546284713842*^9, 
   3.697546290008051*^9}, {3.697569899293139*^9, 3.697569903757991*^9}, 
   3.6977461421766872`*^9, {3.6979334842828197`*^9, 3.697933488827201*^9}, {
   3.697933812056156*^9, 3.697933812688983*^9}, {3.69793435695082*^9, 
   3.6979343579534197`*^9}, {3.697934402479947*^9, 3.697934403805525*^9}, {
   3.6979345683148403`*^9, 3.6979345699475193`*^9}, 3.6979346998856297`*^9, {
   3.697978236982037*^9, 3.6979782538054237`*^9}, {3.698115393981003*^9, 
   3.6981153958199453`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"V", " ", "=", " ", "Vo"}], ";"}]], "Input",
 CellChangeTimes->{{3.697545984401395*^9, 3.697546019769682*^9}, 
   3.697546103074532*^9, {3.697546168990693*^9, 3.6975461795131817`*^9}, {
   3.6975462731730433`*^9, 3.697546274064114*^9}, {3.6975463088923273`*^9, 
   3.697546365050602*^9}, 3.697569982523345*^9, 3.69774613687367*^9, 
   3.697747415444366*^9, {3.697934411610239*^9, 3.697934432163102*^9}, {
   3.6979782354200077`*^9, 3.6979782622452*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculating the kinetic term", "Subsubsection",
 CellChangeTimes->{{3.697546427671712*^9, 3.69754644128122*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xp", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", " ", "Lb"}], " ", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"theta", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"x", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yp", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", " ", "Lb"}], "*", 
    RowBox[{"Sin", "[", 
     RowBox[{"theta", "[", "t", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xcw", " ", "=", " ", 
   RowBox[{
    RowBox[{"Ls", " ", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"theta", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"x", "[", "t", "]"}], "+", 
    RowBox[{"Lcw", " ", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"phi", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ycw", " ", "=", " ", 
   RowBox[{
    RowBox[{"Ls", " ", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{"theta", "[", "t", "]"}], " ", "]"}]}], "-", 
    RowBox[{"Lcw", " ", "*", 
     RowBox[{"Cos", "[", 
      RowBox[{"phi", "[", "t", "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ib", " ", "=", 
   RowBox[{
    RowBox[{"1", "/", "3"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Lb", "^", "3"}], "+", 
        RowBox[{"Ls", "^", "3"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"Lb", "+", "Ls"}], ")"}]}], ")"}], "*", "Mb"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xpd", "=", 
   RowBox[{"D", "[", 
    RowBox[{"xp", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ypd", "=", 
   RowBox[{"D", "[", 
    RowBox[{"yp", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xcwd", "=", 
   RowBox[{"D", "[", 
    RowBox[{"xcw", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ycwd", "=", 
   RowBox[{"D", "[", 
    RowBox[{"ycw", ",", "t"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", "Mp", "*", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"xpd", "^", "2"}], "+", 
       RowBox[{"ypd", "^", "2"}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "*", "Mcw", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"xcwd", "^", "2"}], "+", 
       RowBox[{"ycwd", "^", "2"}]}], ")"}]}], "+", 
    RowBox[{"Msy", "*", 
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "^", "2"}]}], "+", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "*", "Ib", "*", 
     RowBox[{
      RowBox[{
       RowBox[{"theta", "'"}], "[", "t", "]"}], "^", "2"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.697546453375738*^9, 3.697546495753006*^9}, {
   3.697546544960446*^9, 3.697546632439077*^9}, {3.6975466630664797`*^9, 
   3.697546772974351*^9}, {3.697546887243176*^9, 3.697546930477066*^9}, {
   3.6975469837639847`*^9, 3.697547069472658*^9}, 3.6975472897096653`*^9, {
   3.6975697092622223`*^9, 3.697569791618346*^9}, {3.697569867784464*^9, 
   3.6975699559251432`*^9}, {3.697570085163467*^9, 3.6975700899297247`*^9}, {
   3.697648111632169*^9, 3.697648143912518*^9}, {3.697648362213146*^9, 
   3.6976483996295557`*^9}, {3.6977453490960608`*^9, 3.697745354007868*^9}, {
   3.697745387096814*^9, 3.69774551491193*^9}, {3.6977461368821707`*^9, 
   3.697746142187138*^9}, 3.6977473586860733`*^9, {3.697933244619802*^9, 
   3.697933257599698*^9}, 3.697934104150324*^9, {3.697934271701447*^9, 
   3.697934273057373*^9}, {3.6979343398788958`*^9, 3.6979343408200417`*^9}, {
   3.698505629093842*^9, 3.698505632434371*^9}, {3.6985058248091383`*^9, 
   3.69850583031593*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Lagrangian ", "Subsubsection",
 CellChangeTimes->{{3.697646071164901*^9, 3.6976460794116793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"L", " ", "=", " ", 
  RowBox[{"T", "-", "V"}]}]], "Input",
 CellChangeTimes->{{3.697547270596649*^9, 3.697547285374391*^9}, 
   3.697570041078649*^9, 3.697747361605962*^9, 3.697747625898122*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1.58922`"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.12`"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"phi", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"0.36`", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"theta", "[", "t", "]"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{"0.07195635`", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"theta", "[", "t", "]"}], "]"}]}], "+", 
  RowBox[{"0.00224775`", " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["theta", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"0.34700000000000003`", " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{"0.081`", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.12`", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"phi", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"0.36`", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["theta", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.12`", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"phi", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["phi", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"0.36`", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["theta", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], ")"}]}],
   "+", 
  RowBox[{"0.001`", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.39690000000000003`", " ", 
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"theta", "[", "t", "]"}], "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["theta", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"0.63`", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"theta", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["theta", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}], "2"]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.6978501561181517`*^9, 3.697851269070874*^9, 3.697921493863284*^9, 
   3.697921529422901*^9, 3.697929335292021*^9, 3.6979298126571302`*^9, 
   3.697930323779869*^9, 3.69793043167861*^9, 3.697932198442794*^9, 
   3.6979325842229652`*^9, 3.697933824032156*^9, 3.697933854589592*^9, {
   3.697934206162616*^9, 3.6979342212740088`*^9}, {3.697934353001333*^9, 
   3.697934362505394*^9}, {3.6979344159206467`*^9, 3.697934435317128*^9}, {
   3.6979345540953293`*^9, 3.697934574518743*^9}, 3.697934727321341*^9, 
   3.6979774994209747`*^9, 3.6979782663149967`*^9, 3.697984020026289*^9, 
   3.69798422543128*^9, 3.6979842893832693`*^9, 3.697984329385867*^9, 
   3.6980223788524446`*^9, 3.698083629871868*^9, 3.6980850613378696`*^9, 
   3.698085338827032*^9, 3.6980854170701847`*^9, {3.698104865980578*^9, 
   3.6981049735183773`*^9}, 3.6981054072574873`*^9, {3.6981055653558617`*^9, 
   3.698105587338657*^9}, 3.698105715174974*^9, 3.698105827443399*^9, 
   3.698105934929833*^9, 3.6981102195354137`*^9, {3.6981109276851482`*^9, 
   3.69811095169331*^9}, 3.6981111649695044`*^9, {3.698114796149311*^9, 
   3.698114822098925*^9}, 3.698114873845378*^9, 3.698114937464979*^9, 
   3.6981154098641577`*^9, 3.698115450037579*^9, 3.6981155043291483`*^9, 
   3.6981722061538486`*^9, 3.698353192663775*^9, 3.69835352016483*^9, 
   3.6983558827519293`*^9, 3.698355929186729*^9, 3.698356063861669*^9, 
   3.698357371210167*^9, 3.698357801565897*^9, 3.698428997083601*^9, 
   3.69842919724725*^9, 3.698439507700378*^9, 3.698440927696549*^9, 
   3.698440992062302*^9, 3.698441038713402*^9, 3.698441081492379*^9, 
   3.69849448937709*^9, 3.698494704770883*^9, 3.698494922437395*^9, 
   3.6984949659957743`*^9, 3.698495017234518*^9, 3.698495111460332*^9, 
   3.6984957976281652`*^9, 3.698505521832683*^9, {3.698505643173438*^9, 
   3.698505648609742*^9}, 3.6985056887549353`*^9, 3.698505834945203*^9, 
   3.698505868544361*^9, 3.6985077100631723`*^9, 3.6985078250036297`*^9, 
   3.6985097694178257`*^9, 3.698539245278928*^9, 3.6985394451183577`*^9, 
   3.698539522450165*^9, 3.6985395533807497`*^9, 3.698540638157628*^9, 
   3.698545390951831*^9, 3.698584605095772*^9, 3.698585725230558*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Euler - Lagrange ", "Subsubsection",
 CellChangeTimes->{{3.697646181959293*^9, 3.6976461962526417`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EL", "[", "q_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"L", ",", 
       RowBox[{"q", "[", "t", "]"}]}], "]"}], "-", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"L", ",", 
         RowBox[{
          RowBox[{"q", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], "]"}]}], 
    "\[Equal]", "0"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6976462086122713`*^9, {3.697648662680746*^9, 3.697648669396893*^9}, {
   3.69764870360357*^9, 3.697648721279969*^9}, {3.697655586679634*^9, 
   3.6976555897376204`*^9}, {3.697655620563043*^9, 3.697655631038012*^9}, {
   3.697745620488476*^9, 3.697745638071816*^9}, {3.6978353469658337`*^9, 
   3.6978353517866898`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solved Lagrangian", "Subsubsection",
 CellChangeTimes->{{3.698545155439554*^9, 3.698545164592505*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EL", "[", "theta", "]"}], ",", 
       RowBox[{"EL", "[", "phi", "]"}], ",", 
       RowBox[{"EL", "[", "x", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"theta", "[", "0", "]"}], "==", "theta0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phi", "[", "0", "]"}], "==", " ", "phi0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"theta", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phi", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "theta", ",", "phi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"tmax", "=", "10"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6976462290679502`*^9, 3.6976462734779863`*^9}, {
   3.697646349321666*^9, 3.697646473759492*^9}, {3.697646557596222*^9, 
   3.697646692883457*^9}, {3.697646898859119*^9, 3.697646913619124*^9}, 
   3.697648180496016*^9, {3.6976556148009567`*^9, 3.697655641799782*^9}, {
   3.69765569713116*^9, 3.697655787568922*^9}, {3.697745610961038*^9, 
   3.6977456657838383`*^9}, {3.697746136954173*^9, 3.697746142226141*^9}, {
   3.697747307925314*^9, 3.697747308020692*^9}, {3.697747488236998*^9, 
   3.697747488622637*^9}, {3.697755808837039*^9, 3.697755809863772*^9}, {
   3.697756104295905*^9, 3.6977561052091417`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4A1Hk7cULKPDd0wYnD
3cQ/cQnXul+tYb/SUFjDa77VP24NfUWbppW/IqE47Akn4D8t6ZRY1yOAv9Wb
k3tZVOU/7hpf5cUBsz+7wbiC/fHqP/6jk/aal78/gEqXStgX8D87Orqbo1y0
P7tJtw/c7vI/z+ExztaRuT/ziT6Xnbj1P3WvUmwUcb8/2iBupGZS+D+fk6Ru
AhCxP1rNgu1ZJPs/Jbikdl0Al7+J0D+8VMb9P5ZQf0B5gqS/WwqypoYtAEDk
FJj+F42pvz63Ng34kwFALr0VO0jsh794j482beICQLhCi6ld4oG/f/LaffdM
BEAMIVNzhSuqPwX2WabgsAVAjs590aVKuj/iJK2RzfwGQD9iaZcBw7c/jN7y
ms9kCED4AcCPI2m+P43DDGfVtAlAeepmUA/VsT9bMxlR8CALQJ/jYhTJlpg/
p0NZHGqGDEAOsRZhprSjv0t/barn0w1AewmlK90sl7+8RXRWej0PQMcsJUnG
OKe/wpunYohHEECG60ujWqpfP+XkrgoD7RBAkzxt5+rpsD9vc69BiKARQDT2
hk/0O7U/pRcaWg9IEkBKhdb/sSazP0EBfgGh/RJAj778akHntz8cu3sZ4q8T
QEixtgCjDbw/oorjEiVWFEDefTI2WwW8P4+fRJtyChVAyo0LR/Y/kj8oyg8F
wrIVQIY+ybnck6a/AMV038BXFkDHrMbV642ovz4F00jKChdALTROgHuXp78o
W5uT1bEXQM15BI0BzZG/ePZcbetmGECx6rqfHceAP3SniCgDEBlAJC7X39tq
tD+vKE5UyrUZQEQ/8tMcpbg/Ue8MD5xpGkDdWdmB6c+7P5/LNatvERtAj8ze
5THsuT9T7VfWTccbQL2KrtsPL64/R98Tctt5HEBoFhCqNBlGP+bmOe9qIB1A
aewy5gi8or/rM1n7BNUdQEEHVvke5Zi/nJbi6KB9HkAFSYULcIScv4zJBUfs
Ih9AvEAlWtF9gj/iQSI0QtYfQH3qX85ZYbI/8mdUAc0+IEBYDau+Xcy2P6ZR
FDB+mSBALcSkXWajvD96IyEXh/IgQFGiV01qVr4/JADj7pBFIUDby+iwco27
P4F/IQ6gnyFAH0meVa7+oD+0CRUesPMhQOt2+YJzR6G/mjaFdcVOIkAfZTIT
BGiqv59LQoUyqCJA+9L4RcRCqL96a7SFoPsiQJ+gabU8f5i/CC6jzRNWI0BZ
lhmTXq9TP2z7RgaIqiNAiska7P8CtD8yFFD6//8jQCb45z0e8Lc/PW/Gfw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$5848#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-0.05157482847534766, 
                    0.12340706367434959`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4A1Hk7cULKPDd0wYnD
3cQ/cQnXul+tYb/SUFjDa77VP24NfUWbppW/IqE47Akn4D8t6ZRY1yOAv9Wb
k3tZVOU/7hpf5cUBsz+7wbiC/fHqP/6jk/aal78/gEqXStgX8D87Orqbo1y0
P7tJtw/c7vI/z+ExztaRuT/ziT6Xnbj1P3WvUmwUcb8/2iBupGZS+D+fk6Ru
AhCxP1rNgu1ZJPs/Jbikdl0Al7+J0D+8VMb9P5ZQf0B5gqS/WwqypoYtAEDk
FJj+F42pvz63Ng34kwFALr0VO0jsh794j482beICQLhCi6ld4oG/f/LaffdM
BEAMIVNzhSuqPwX2WabgsAVAjs590aVKuj/iJK2RzfwGQD9iaZcBw7c/jN7y
ms9kCED4AcCPI2m+P43DDGfVtAlAeepmUA/VsT9bMxlR8CALQJ/jYhTJlpg/
p0NZHGqGDEAOsRZhprSjv0t/barn0w1AewmlK90sl7+8RXRWej0PQMcsJUnG
OKe/wpunYohHEECG60ujWqpfP+XkrgoD7RBAkzxt5+rpsD9vc69BiKARQDT2
hk/0O7U/pRcaWg9IEkBKhdb/sSazP0EBfgGh/RJAj778akHntz8cu3sZ4q8T
QEixtgCjDbw/oorjEiVWFEDefTI2WwW8P4+fRJtyChVAyo0LR/Y/kj8oyg8F
wrIVQIY+ybnck6a/AMV038BXFkDHrMbV642ovz4F00jKChdALTROgHuXp78o
W5uT1bEXQM15BI0BzZG/ePZcbetmGECx6rqfHceAP3SniCgDEBlAJC7X39tq
tD+vKE5UyrUZQEQ/8tMcpbg/Ue8MD5xpGkDdWdmB6c+7P5/LNatvERtAj8ze
5THsuT9T7VfWTccbQL2KrtsPL64/R98Tctt5HEBoFhCqNBlGP+bmOe9qIB1A
aewy5gi8or/rM1n7BNUdQEEHVvke5Zi/nJbi6KB9HkAFSYULcIScv4zJBUfs
Ih9AvEAlWtF9gj/iQSI0QtYfQH3qX85ZYbI/8mdUAc0+IEBYDau+Xcy2P6ZR
FDB+mSBALcSkXWajvD96IyEXh/IgQFGiV01qVr4/JADj7pBFIUDby+iwco27
P4F/IQ6gnyFAH0meVa7+oD+0CRUesPMhQOt2+YJzR6G/mjaFdcVOIkAfZTIT
BGiqv59LQoUyqCJA+9L4RcRCqL96a7SFoPsiQJ+gabU8f5i/CC6jzRNWI0BZ
lhmTXq9TP2z7RgaIqiNAiska7P8CtD8yFFD6//8jQCb45z0e8Lc/PW/Gfw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$5848#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-0.05157482847534766, 
                    0.12340706367434959`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"theta", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4r7//////vPzd0wYnD
3cQ/HX/L1j8I5j/SUFjDa77VP8VI7mdTvrA/IqE47Akn4D+EkOHMyejzv9Wb
k3tZVOU/kN70P7f2/L+7wbiC/fHqP9lBRAMuVAfAgEqXStgX8D+clinBOooL
wLtJtw/c7vI/T23N5ujeCMDziT6Xnbj1P5OR9pR5EgfA2iBupGZS+D8AG63c
K5ABwFrNgu1ZJPs/rpSId8Lw57+J0D+8VMb9PyfciyW9dtO/WwqypoYtAEC2
tlNl9FHUPz63Ng34kwFAVsnFjspqyz94j482beICQAKNK4t7TvG/f/LaffdM
BEDDa7ET5qH3vwX2WabgsAVAwf1DbhVkB8DiJK2RzfwGQL70tzfirQfAjN7y
ms9kCEDJ2iQnA7gKwI3DDGfVtAlAvt2wBEKMBMBbMxlR8CALQLl61HmhsvC/
p0NZHGqGDEDk8Q8UxtSjP0t/barn0w1A5/CmnWefzb+8RXRWej0PQGScpIK3
07G/wpunYohHEEAyKlHMCSj0v+XkrgoD7RBAnj6wRbP5+r9vc69BiKARQLRS
x94AiQbApRcaWg9IEkAFd+JC7XYMwEEBfgGh/RJADCdtrfacD8Acu3sZ4q8T
QHKChy+PJAzAoorjEiVWFEAktwhBvd0DwI+fRJtyChVAcXfdCeky+L8oyg8F
wrIVQHi5DJGgztC/AMV038BXFkB2QuzSqcafPz4F00jKChdAorRp/HVW3D8o
W5uT1bEXQG09Wzvpibw/ePZcbetmGEDCVcvXLrTxv3SniCgDEBlAKzObYDvO
BMCvKE5UyrUZQIjkc4KaMgXAUe8MD5xpGkB+1eiPu8wLwJ/LNatvERtANp5b
yKuDBcBT7VfWTccbQJJBoBV/XPm/R98Tctt5HEAtOqCrQ+jyv+bmOe9qIB1A
6vUMmvua07/rM1n7BNUdQJBjIU34ONY/nJbi6KB9HkA/zCh1+g7kv4zJBUfs
Ih9AObvVbx1a6b/iQSI0QtYfQDgeM80ZVQPA8mdUAc0+IEDxzyJlgUkLwKZR
FDB+mSBALV3NhNzlDcB6IyEXh/IgQPlUymFIAAzAJADj7pBFIUABh57EPqoG
wIF/IQ6gnyFAo0CEAQMR+r+0CRUesPMhQGfanf5zTdS/mjaFdcVOIkDhZyWK
+WfCP59LQoUyqCJAn4JmZrLp2j96a7SFoPsiQIT12vmsKss/CC6jzRNWI0CY
FC89mRnvv2z7RgaIqiNAAI0CZzu/A8AyFFD6//8jQJB6KLhQRQXA8QLTNQ==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$5892#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-3.951642374890872, 
                    0.9999999999995216}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4r7//////vPzd0wYnD
3cQ/HX/L1j8I5j/SUFjDa77VP8VI7mdTvrA/IqE47Akn4D+EkOHMyejzv9Wb
k3tZVOU/kN70P7f2/L+7wbiC/fHqP9lBRAMuVAfAgEqXStgX8D+clinBOooL
wLtJtw/c7vI/T23N5ujeCMDziT6Xnbj1P5OR9pR5EgfA2iBupGZS+D8AG63c
K5ABwFrNgu1ZJPs/rpSId8Lw57+J0D+8VMb9PyfciyW9dtO/WwqypoYtAEC2
tlNl9FHUPz63Ng34kwFAVsnFjspqyz94j482beICQAKNK4t7TvG/f/LaffdM
BEDDa7ET5qH3vwX2WabgsAVAwf1DbhVkB8DiJK2RzfwGQL70tzfirQfAjN7y
ms9kCEDJ2iQnA7gKwI3DDGfVtAlAvt2wBEKMBMBbMxlR8CALQLl61HmhsvC/
p0NZHGqGDEDk8Q8UxtSjP0t/barn0w1A5/CmnWefzb+8RXRWej0PQGScpIK3
07G/wpunYohHEEAyKlHMCSj0v+XkrgoD7RBAnj6wRbP5+r9vc69BiKARQLRS
x94AiQbApRcaWg9IEkAFd+JC7XYMwEEBfgGh/RJADCdtrfacD8Acu3sZ4q8T
QHKChy+PJAzAoorjEiVWFEAktwhBvd0DwI+fRJtyChVAcXfdCeky+L8oyg8F
wrIVQHi5DJGgztC/AMV038BXFkB2QuzSqcafPz4F00jKChdAorRp/HVW3D8o
W5uT1bEXQG09Wzvpibw/ePZcbetmGEDCVcvXLrTxv3SniCgDEBlAKzObYDvO
BMCvKE5UyrUZQIjkc4KaMgXAUe8MD5xpGkB+1eiPu8wLwJ/LNatvERtANp5b
yKuDBcBT7VfWTccbQJJBoBV/XPm/R98Tctt5HEAtOqCrQ+jyv+bmOe9qIB1A
6vUMmvua07/rM1n7BNUdQJBjIU34ONY/nJbi6KB9HkA/zCh1+g7kv4zJBUfs
Ih9AObvVbx1a6b/iQSI0QtYfQDgeM80ZVQPA8mdUAc0+IEDxzyJlgUkLwKZR
FDB+mSBALV3NhNzlDcB6IyEXh/IgQPlUymFIAAzAJADj7pBFIUABh57EPqoG
wIF/IQ6gnyFAo0CEAQMR+r+0CRUesPMhQGfanf5zTdS/mjaFdcVOIkDhZyWK
+WfCP59LQoUyqCJAn4JmZrLp2j96a7SFoPsiQIT12vmsKss/CC6jzRNWI0CY
FC89mRnvv2z7RgaIqiNAAI0CZzu/A8AyFFD6//8jQJB6KLhQRQXA8QLTNQ==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$5892#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-3.951642374890872, 
                    0.9999999999995216}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"phi", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["InterpolatingFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AXo1x1Fp1vTd0wYnD
3cQ/8GaFfSkD5L/SUFjDa77VPyEf9TqpBtu/IqE47Akn4D/CwRtmuxr7P9Wb
k3tZVOU/ONBGlamE97+7wbiC/fHqP2W3qMsIXPm/gEqXStgX8D+WvLXGhyvx
P7tJtw/c7vI/2jn/7uA9CEDziT6Xnbj1P41UOWB6LxNA2iBupGZS+D/X1pEk
yJsaQFrNgu1ZJPs//ueY5YXkGkCJ0D+8VMb9P+RkvvE7rSFAWwqypoYtAEBF
Ir0Wam4fQD63Ng34kwFAZGikJWWjFUB4j482beICQEfsTAgLEARAf/LaffdM
BEB2mLCyiXj+vwX2WabgsAVAHo7LmvTDtL/iJK2RzfwGQJPrGy9FDAZAjN7y
ms9kCEB+ARWj2o4VQI3DDGfVtAlAFjk/4eyRHkBbMxlR8CALQEltlqeiHBRA
p0NZHGqGDEDCi9il4pEaQEt/barn0w1AV2JVsZpmI0C8RXRWej0PQADy5jPH
kipAwpunYohHEEC5eddPgB8uQOXkrgoD7RBA3MJvxhY7JkBvc69BiKARQK8X
QOePRyFApRcaWg9IEkDsPq7efGgeQEEBfgGh/RJAyYsCbzf8FkAcu3sZ4q8T
QIGyoVwV8RZAoorjEiVWFEC2rAmxRG0UQI+fRJtyChVAsQun2WLZG0Aoyg8F
wrIVQBkD0/qQOBxAAMV038BXFkBu/qIifBghQD4F00jKChdA1pIaDIJkHkAo
W5uT1bEXQMpFPJCcvBZAePZcbetmGEAncw5Kp8UYQHSniCgDEBlA0ZtUjBue
G0CvKE5UyrUZQKJNIHpjvQlAUe8MD5xpGkD++psO9tXcv5/LNatvERtACfPh
o78qB8BT7VfWTccbQC8SX9CGyPy/R98Tctt5HEAimz4UxHYFQObmOe9qIB1A
z1WQTPXRBUDrM1n7BNUdQOVwSl5F7Lm/nJbi6KB9HkBbuG9lMcIMwIzJBUfs
Ih9A9jT7YXdiHcDiQSI0QtYfQMrrbpoKfRbA8mdUAc0+IECnPJ0/vxsXwKZR
FDB+mSBAd/P4x77SHcB6IyEXh/IgQFaBn/Qckx3AJADj7pBFIUBaxBSbfaMa
wIF/IQ6gnyFAtp6cb3DyF8C0CRUesPMhQMtWMBE7+BfAmjaFdcVOIkDmtmmX
Pq0RwJ9LQoUyqCJA1KOqgYEdE8B6a7SFoPsiQCsWbBsODRrACC6jzRNWI0Di
Yg+SC58ZwGz7RgaIqiNAyefqOSxaF8AyFFD6//8jQOFsPCmH9yLAtcqzNQ==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$5936#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-9.483453072191368, 
                    15.061525816968116`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/hj4AXo1x1Fp1vTd0wYnD
3cQ/8GaFfSkD5L/SUFjDa77VPyEf9TqpBtu/IqE47Akn4D/CwRtmuxr7P9Wb
k3tZVOU/ONBGlamE97+7wbiC/fHqP2W3qMsIXPm/gEqXStgX8D+WvLXGhyvx
P7tJtw/c7vI/2jn/7uA9CEDziT6Xnbj1P41UOWB6LxNA2iBupGZS+D/X1pEk
yJsaQFrNgu1ZJPs//ueY5YXkGkCJ0D+8VMb9P+RkvvE7rSFAWwqypoYtAEBF
Ir0Wam4fQD63Ng34kwFAZGikJWWjFUB4j482beICQEfsTAgLEARAf/LaffdM
BEB2mLCyiXj+vwX2WabgsAVAHo7LmvTDtL/iJK2RzfwGQJPrGy9FDAZAjN7y
ms9kCEB+ARWj2o4VQI3DDGfVtAlAFjk/4eyRHkBbMxlR8CALQEltlqeiHBRA
p0NZHGqGDEDCi9il4pEaQEt/barn0w1AV2JVsZpmI0C8RXRWej0PQADy5jPH
kipAwpunYohHEEC5eddPgB8uQOXkrgoD7RBA3MJvxhY7JkBvc69BiKARQK8X
QOePRyFApRcaWg9IEkDsPq7efGgeQEEBfgGh/RJAyYsCbzf8FkAcu3sZ4q8T
QIGyoVwV8RZAoorjEiVWFEC2rAmxRG0UQI+fRJtyChVAsQun2WLZG0Aoyg8F
wrIVQBkD0/qQOBxAAMV038BXFkBu/qIifBghQD4F00jKChdA1pIaDIJkHkAo
W5uT1bEXQMpFPJCcvBZAePZcbetmGEAncw5Kp8UYQHSniCgDEBlA0ZtUjBue
G0CvKE5UyrUZQKJNIHpjvQlAUe8MD5xpGkD++psO9tXcv5/LNatvERtACfPh
o78qB8BT7VfWTccbQC8SX9CGyPy/R98Tctt5HEAimz4UxHYFQObmOe9qIB1A
z1WQTPXRBUDrM1n7BNUdQOVwSl5F7Lm/nJbi6KB9HkBbuG9lMcIMwIzJBUfs
Ih9A9jT7YXdiHcDiQSI0QtYfQMrrbpoKfRbA8mdUAc0+IECnPJ0/vxsXwKZR
FDB+mSBAd/P4x77SHcB6IyEXh/IgQFaBn/Qckx3AJADj7pBFIUBaxBSbfaMa
wIF/IQ6gnyFAtp6cb3DyF8C0CRUesPMhQMtWMBE7+BfAmjaFdcVOIkDmtmmX
Pq0RwJ9LQoUyqCJA1KOqgYEdE8B6a7SFoPsiQCsWbBsODRrACC6jzRNWI0Di
Yg+SC58ZwGz7RgaIqiNAyefqOSxaF8AyFFD6//8jQOFsPCmH9yLAtcqzNQ==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$5936#1"]& ]}}, {}, {}}, {
                  DisplayFunction -> Identity, 
                   Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, DisplayFunction -> Identity, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                   All, DisplayFunction -> Identity, AspectRatio -> 1, 
                   Axes -> {False, False}, AxesLabel -> {None, None}, 
                   AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                   Frame -> {{True, True}, {True, True}}, 
                   FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                   Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                   FrameTicks -> {{None, None}, {None, None}}, 
                   GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                   Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                   PlotRange -> {{0., 10.}, {-9.483453072191368, 
                    15.061525816968116`}}, PlotRangeClipping -> True, 
                   PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("InterpolatingFunction[{{0., 10.}}, <>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.697850156471876*^9, 3.697851269421109*^9, 3.6979214942717533`*^9, 
   3.697921529657022*^9, 3.6979293358436537`*^9, 3.697929812897336*^9, 
   3.697930323964065*^9, 3.697930432067896*^9, 3.697932198635651*^9, 
   3.697932584486396*^9, 3.697933824253345*^9, 3.697933854775861*^9, {
   3.697934206439592*^9, 3.697934221508647*^9}, 3.697934362718822*^9, {
   3.697934416157482*^9, 3.6979344355370893`*^9}, {3.697934554286137*^9, 
   3.6979345747294283`*^9}, 3.697934727525593*^9, 3.697977499875936*^9, 
   3.6979782665077953`*^9, 3.697984020212047*^9, 3.697984225644745*^9, 
   3.697984289551609*^9, 3.69798432958527*^9, 3.6980223792991943`*^9, 
   3.698083630407461*^9, 3.69808506165939*^9, 3.698085339058951*^9, 
   3.698085417310958*^9, {3.698104866567669*^9, 3.6981049736716633`*^9}, 
   3.698105407394239*^9, {3.69810556548734*^9, 3.698105587486085*^9}, 
   3.698105715306204*^9, 3.698105827573509*^9, 3.6981059350707703`*^9, 
   3.698110219660511*^9, {3.69811092781052*^9, 3.6981109519957647`*^9}, 
   3.6981111650922613`*^9, {3.698114796333824*^9, 3.698114822323101*^9}, 
   3.6981148740347757`*^9, 3.69811493763231*^9, 3.698115410017558*^9, 
   3.698115450181971*^9, 3.698115504496077*^9, 3.698172206291596*^9, 
   3.698353193085639*^9, 3.698353520490012*^9, 3.698355882954523*^9, 
   3.698355929502901*^9, 3.6983560698236837`*^9, 3.698357371428589*^9, 
   3.6983578017825127`*^9, 3.698428997553198*^9, 3.698429197495696*^9, 
   3.6984395081992083`*^9, 3.698440928065777*^9, 3.6984409924287157`*^9, 
   3.6984410394081173`*^9, 3.69844108171708*^9, 3.6984944897463493`*^9, 
   3.698494704961043*^9, 3.698494922600675*^9, 3.698494966156654*^9, 
   3.698495017397719*^9, 3.6984951116161222`*^9, 3.698495797982826*^9, 
   3.69850564897876*^9, 3.6985056892501707`*^9, 3.698505835261623*^9, 
   3.6985058688371058`*^9, 3.6985077103595324`*^9, 3.698509769849826*^9, 
   3.698539245741716*^9, 3.698539445469036*^9, 3.698539522775084*^9, 
   3.698539553981303*^9, 3.6985453913648243`*^9, 3.698584605474557*^9, 
   3.698585725521408*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plots of the different constraints over time", "Subsubsection",
 CellChangeTimes->{{3.698545168739171*^9, 3.698545185542495*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<movement of the trebucet vs time\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "x"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69774604967971*^9, 3.697746100887545*^9}, {
  3.697748072709528*^9, 3.697748129245718*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81t8XNzKyHx4PSdKysyqJcm7KVkkSJZVUFEJlZ7dkf7P3fh4k47HH
tSOzEBVRIVFmRubv+f31eb1fn3vOueec9z33vvdY3De8xUBHR1fDTEf3/2+C
pwWzguVLNboBScdCQu/xxh5R/Uui1qAW1Oq1vfqp2lZzjZ+oqCu0uLHXOidm
qnGFl+SzDfhCjmdd25cT5WoJtUG7mURfwPwP9XZJuWY1mRnL4K07IfDPpS6y
ie+92hBX4uZ6fziYx+pcNNw/oLY/c7vS6loE6IY3OB8gjKjZnHhku7w7BpIC
TTYf3B9VK+odSf97Kh68DDxbOwm/1Fbv6Q/O3UmCq0IJK18H/qgl0w++WNZI
AY3QpDdPDObUTneEHVjqT4V0tWMtMikLahPRWnV/rdPhve8ZJNCyqBZouWG2
sJYBhc5HBkJzl9Xk5YtW5oKyQLMt3u3OoX9qPWtWr2Z3U4Ci5Ordobaq5vRW
RH6mIBt2+e8shLxVNaH/etv+nMoF9I3F4a75qlqNecCd332voen4Xcwj+U/N
QgoxTt15AxLnu/4sji6pMay5df31yIcrK/8CGm8tqPWOXNz1V6MADlkpnWFY
+a2W2Sx/b4GrEII3j+yf7RlWc8llL5/vL4TZxz4PqPoxNbrh48zzyUWQeu9D
qGXUWI2wS53RnDUVfO2aCgfclmumr8anzioWg92BzV5uU0Zce8p5dmatGNTP
fd1Od5kDh0saqs00lsDYTr2KBw582JL7YOB0UClYsO8MHHm5Aystsnz+Y1wG
il2hYbZaopjly3fxP7vLgY2Ld7hKcz8eqK1+9HuiHMKldzEkdEjg7MzohqmC
Cjgqn54yN3YQewQ+IEy5VYJwx/S+T+0K+Kzj2WuTp6oA8rWL7v07jEVNJF//
4qgGsdO/olIfK+P5E9vWJvqqoZoeGkzNj+PGfcPaE4k1cN01XlPMAOHI7RWR
P+9g0Gh1lt6Wro6pzrqODwRroZqnb2VGRgPHTx7dseBRC482pJpnfmvhJ1cP
1Dp+q4W/vVcOj4zpYrtu3jvzGnXw5rJth92Os/jSKToux+w6sFxqvR/QaIBR
yR/qHFc9RHqGPtseZ4h541sY5vrrQa34sfJihjFe4yqh2B9voNVXlIPliwke
9UkzmE1ugKRTnZZc8ldwyR3PxBnrRrjbfW9xXvg6Tvp8T+N+ZyNM51Z1yjrf
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
       "]]},
     Annotation[#, "Charting`Private`Tag$5979#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["x", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"movement of the trebucet vs time\"", TraditionalForm],
  PlotRange->{{0, 10}, {-0.05296871687828589, 0.12499635531203906`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.69785015701607*^9, 3.6978512700503473`*^9, 3.697921494837124*^9, 
   3.697921531162037*^9, 3.6979293366718597`*^9, 3.69792981343534*^9, 
   3.69793032455407*^9, 3.697930432652151*^9, 3.6979321992675343`*^9, 
   3.697932585691278*^9, 3.697933825353393*^9, 3.6979338555607557`*^9, {
   3.697934208894142*^9, 3.697934222014677*^9}, 3.697934363487823*^9, {
   3.697934417184044*^9, 3.697934436306488*^9}, {3.697934555092992*^9, 
   3.697934575225333*^9}, 3.6979347280566587`*^9, 3.697977500449088*^9, 
   3.6979782669930143`*^9, 3.697984020710857*^9, 3.6979842261459084`*^9, 
   3.697984290090271*^9, 3.697984330087789*^9, 3.698022379769038*^9, 
   3.698083630892743*^9, 3.698085062228104*^9, 3.6980853393174543`*^9, 
   3.69808541793041*^9, {3.698104867029677*^9, 3.698104974051894*^9}, 
   3.6981054077471437`*^9, {3.698105565849619*^9, 3.6981055878436317`*^9}, 
   3.698105715662203*^9, 3.6981058279288263`*^9, 3.698105935429058*^9, 
   3.698110220006997*^9, {3.6981109281551*^9, 3.69811095234433*^9}, 
   3.698111165430297*^9, {3.698114796716085*^9, 3.698114822629114*^9}, 
   3.6981148742241096`*^9, 3.698114938062293*^9, 3.698115410437436*^9, 
   3.698115450284153*^9, 3.698115505000162*^9, 3.698172206694542*^9, 
   3.698353193802615*^9, 3.6983535206069937`*^9, 3.698355883027265*^9, 
   3.6983559295946302`*^9, 3.6983573714901867`*^9, 3.698357801915512*^9, 
   3.698428998009295*^9, 3.69842919798134*^9, 3.698439508699308*^9, 
   3.698440928555114*^9, 3.698440994214119*^9, 3.698441044905588*^9, 
   3.698441082291531*^9, 3.698494490202434*^9, 3.6984947053884287`*^9, 
   3.698494923029182*^9, 3.698494966563077*^9, 3.698495017826071*^9, 
   3.698495112037828*^9, 3.6984957984385977`*^9, 3.698505652380125*^9, 
   3.698505691321706*^9, 3.698505837403949*^9, 3.698505871046625*^9, 
   3.698507712486618*^9, 3.698509774354216*^9, 3.698539248326543*^9, 
   3.6985394479911757`*^9, 3.6985395251784*^9, 3.6985395563248463`*^9, 
   3.698545393394835*^9, 3.6985846075017433`*^9, 3.698585727478613*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"theta", "[", "t", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<theta vs time\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "theta"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.697746120992462*^9, 3.697746136990103*^9}, {
  3.697748137574032*^9, 3.697748188105526*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3k81F8XHobZjBmGpPJDspQkSSLl3mwlpbJEJUlFWhQhVNImFFEpLdYU
ISQp672W7Gv2JWTf930s77zzz3yezzn3LM85537P3Wh93egiN4FA6CQTCP//
D/GwJu248FRTt3eV8xsD+TWSh80k7UBSTNZ5EQ5eLch+KCnpBs5a36g8uTQG
GC9Sk2iND8B+T5k/xXNjIAT7SfBK+gA385mWixNjQGHsgv+q7XPAvc5QZtvA
GPjLCF1ZangBvP8LSRJvHwPSn6mqi+wgMNWqc1S9Zgxc3ed8bU7iLRgevxF5
+/cY+F7bETWt/QE0iOVt7P4xBhavHG6dsA0DPmcLJRyixkA4V6vPnG4EYHkM
VkoGjgGd8kCZ2YZIcCz8kcHE7THQH3wgZ9ouCuQ6vXjfcWEMPLuwbDHF/gQ0
3v+Hhw3GQA370qtxiS9gyrrbz1h4DLgUiiuNfYsFvd/TLGNnRsH6l7WlI9rx
gOufq51I3SiwlofEIdtE0JA1uHaz/yjgZrtXTt9JAo4/Go+X2o6C2g7T/6Z1
v4EPj8eY98AocI3nS5tsSAbuGYEn1g6MgEMvekmT4d+BQeW/zKX0ESDmmmMy
YZcCPBex17TvCMDat8bH2D9A3VAke5PMCCC3dMqNSKSBwbb1vCNaw6ARZzkP
96eBtaXDOaW8wyD2c3De0Ld0oPl0/fGegiFg6Gh4dlA7E5S9OfZhXHsIvKam
v+6zRWDSa+JVlvwgYH0o4p5oyAUnfZyO7UrrAxElYQ5DEsUguakcDZ/pBNPB
P+TbnxUDTccnUtsInUDPtrTrz0IxGLI2jQ6L/AeGiXOm6TUlgFtEWmR3fwdQ
22e4x+dJGZB79uy9xkgbqEpc4pYbqwQGRNoB2X1NgAWolvyKVeDUbst+qncj
0JB9tefJhSow1bv8r+RPA/Cf/jLlXl0FHN45DZyzrQcqgXUXreOqAf1tW/WS
dw24V6JwaMfZGlAv8nkUrCsFMd9+ysYF1YCSJu1gR+9i8CdYiyhTVgN49FSt
0GQhkLY1zxRVrwUUsbzUxz/zQQnxkSJBqA7cEvAqCJjKANODDD53/TogUH2/
NeDmL/Dfn7d9U/fqwMexqCGhnhRwIzwxvG+4Dvj0hduP7IwDIvtaWJUF9UAg
mPmZ+OEOgtI2YweX68GJuLMaw/pvkB3fRGnuzgYQOKvzO6bjI8psIj1ODW8A
/Mec5eVvJKNeHHhOqaEB7P7LLfq3NhUxY8Q0Y/kbQYznkxtyJhnI2kV5LsS9
EZTFN76eMclFz85k1az91gh6tBOtLHPz0Q+dg0mBfY2AwC7rdd1fiChClnaP
TZqAtqqM6/bbZUh5sV931bcJnA0ga6SpV6LT/25KueU0Aa3CqiA2pRolJPq0
XFVsBpONq4M6jFo0yBp8duhcM4jj3b8a8bwOybkc0tz8qhks/uXneb+pAV1o
ih3jLWwGn33lQlTKG1H4Xr6IroVmcNCGHXc4oBm1hl0xylFoASo+/ee6HFrR
OmIZMexsC8iu1FG2c21DL4qf2Zz63QLG9xZHbvT9hyoURtaqzbcAIqtrk2tz
J+ILOFK8ZmsroDhm7u4B3ejg1Ff3qTOtoMyYx7kgugc9OsFQqA5oBT4vvx7Y
udqLcJr934S8VrD20nUXX81+tCxW6f9sthV87F5/qthmALl0PZ84YPEXhP/9
lNHsOYSS9cYjZZ7/BZEXA7UfuA2jsS/HTIi5f8Fdd29/+qURdOmG4M9suTbQ
RyyGJMUxdGr5xZ1dU23gm3pDuh6YQGF8pQ8FdTvAL9rMpgcW00hz320LT8sO
MH5/PFM9exq12m/dNXarA3zSvWiSLDGDRP887S2L7QAboxYH2v7NoMDgw/re
Av/AYpbxw5Zzc0ipZGnj3JZ/oMjUuc0Jz6EKdvziRe1/4E2X2OX94vOIdpY/
XtvlH6DLT9bW1s+jhzIVjNWWf+BzgpxNhOoikjLz6Ls28w8Qvs06JvksIuyt
iFsZnYDK4nMyaF5ES0P+Dun7O4G66J/L5Jts9O4/cGjL6U7wsKFAxT+djdSO
jkkFO3WCez2iuldW2Mg5+Witc3QnWLvZgZbktoSEu1fju3EnODn5skU7aQkl
r0l6bNzMwXH6uzz/LaFjBzhtONUJYipPRtTQl9Goq8DuHfxdYPO5Qx2BO5bR
s1jMDJftAlVyansHDJeRfOuNfgbsAkeO/Yr+c34ZFfFvzLl7sgusSsvwLtov
I1tQ/XbYsQuEkIjR7zmYEDmb3vK0CxTtsNtfaLWMgnnEWkuiusBH0UOBaVrL
SMl2/3JaVhdg9Wo4vxDk2Cu2Ef9S3wXMlYeNS8uXkJXCMxA81gVyehmPKu8v
oXn/b1ZPKN3AN3sy+Z3mEgqYqL/vsrEb3PrvrtI8fQltNlmKvLinG7wwyUrM
HmYjnLox38S4G3Dl3I5TbGEj83UHerSvdoO44oX6mDo2Gr99lbTzcTdoa/GU
l25mI++2QDmp0G7w+Ot733V9bCS5/+dBwZ/dIOJkrqYVm41+fWy1I1R1g12i
C3WCIhz+SNxPx/q7wcmjtU9dVJdQ/yW5+DauHrBlUnd87vQS8iw9XF6+vgcQ
89wL13otIVFFx9HMnT1AL7X4h13KEmc+MpXeX+wBr66IHlMWW0Ydpp3HfT16
QNFFg7tk02Xk+ot80+1NDwir/1JQGLCMvtw1+mFW3MO5X7QiyQIrSKvjVr1e
Zw9YXfu1mGm8gpq1QuZ2sXvAbeXytULBK4hG6VcX3tYLrBeOKe+VW0WXX9zN
rgroBW2rCrpu8gTMPRPZjr70gqPSYUaGxwn4nVkRITG3F4jdi2u47krAJWJC
2n7TvWA7OTfatJCAt0bHFOqb9wE7S4c3EjZceDijpipXoh/MxDzKdAzjxo/E
Fya+qfWDPsGMi82/ubHYfXGhiOP9YOvH1dvCw9z4sJ6d6b2H/aBl29ZhqhoR
f61aadLo6wdUK+eAWxVEbN+zpSslYQDkdAQ1/FniwR2WTZSc4gFwN/zKaQk5
Xmzc6K1Y3j0AbvTtMWIY8WK10j63nvWDQOp4z5JjLC+O03kTNrFrEITIPYsy
aOTF4tl6v5ePDQLzM0ttAWQSJn77JCDyZBA0XgzPSbxCwi7ypqpSkYPASX8H
tIog4f6PPBaKWYNgX1zgZcVmEq54fT5ab2oQuJ37EH3SjIyhgFC5EWMITNsU
8W74QMbffXInLbcMASOvnQ0/u8g4+M5GzVtnh8BPyY1CkzcomDZbdf6h+xBY
jXKZ4E2m4LvXPX2eBw2Be9KZVZdHKXi8f3vi+6QhMDRkAW1lqdjaur02unQI
XG8Jk3Y/RcW1Lf6L33uHQPupsbWbnlLxAVNNScw1DI4dl8mr+kXFCgdDrjTu
HgZJRSn/BdFpODTncGC30TA4uiY4SmknDQtqLKWOXxsGavK2nh1mNDy77TQ3
NWoYpIhMFDI/0LBdNG3zGjQMvrx+fbMwg4ZbJdOPbGweBjlr0HVSMw3nCK17
qy4wAtYpm0easfiwil9Rtu7WEdDVffW8pwIf/kxy7T6uNwLW0s7aWOry4XWe
cjTLcyNAtPPH21kLPvxsoX775Tsj4JP6aqPBTT684uhl6vKGoy8XveasNx92
GN51+0HyCMi3XeO0/QMfPtH+quBd/wjYNXE1kI34cJG5zvBn4ijwdQjYMFLJ
hzX+TAl+Fx8Fv75PnXnSxocTDD7uRuqjYPR7KyFniA9L/jY6U2oyCqJJWj3+
c3z4hSb3w4bro2Cp/p9ANxcd8/76FtPlOwpqAPn1Nxodu+44VzH2aRT8qZ64
1StIx4OxAtNsPArEZH39rq+lYwtpvI7SOgp22Epf3L2BjitDrgPhuVFQscFv
m+x/dKy1VuKiJIuzRw/huI0cnBJQ4auwbQxIlc4e5Ofoy9E8ktQOjoFesodB
iQgdv3u4rV7n/Bi4uKHNTE2AjunLrexjHpw9mDvaRpVMx/dcnm0883YMzIq7
OUSx+fDkmMYBu5QxMHGIuNNmhA9fsBu66lw5BirWhVy1beXDDZ3vXtwfHAM3
dP5KRBbxYRlFmdYC7nGgWeXUKpvMh9sGl0YPC4yDo4pLVrJv+XBwdC1XzX/j
oK3nl9ziXT5M2/hIrl1tHDToifww1+bwvTdwu4fuOPChRfvpy/FhL/PQ3f8Z
jYP33+8IvObjwzpOcSDTchx8E/QYSh+nYe6AXwdOXxkH55KIKsINNIzjfh9d
vDUOau45/WjJpmGPwj9mbx+Ng2vLV3S3xdDw4sqwbUPIOFBe1n7ueI+Gf61f
vO4SOw6UZrYu6V2jYRdVsuuan+Pgor33YQcLGlYxEvZMyRsH84Q7N+sO0/Dk
tY3exlXjgGIQwjLTpOEkH8WAydZxEBV16mOzEg3bf9IIDhwYB4PRzzfoSdPw
UKtpTCX3BGh4rp/ozE/DsfPWSfbMCQD40BKDSMOXhG/84hebAMWnG933LFBx
t4FvkcGuCaDq1PGBt4+KI23fVA3unwABOav4SRsVWz2MavQxnAAeo2uqreqp
uDU9u7/QdgLcS/yya7CAit/Vl47bOE0Ay46POl6Iis0nG+d570+AD8pXHxzj
zGvtlimKzrsJUFii3HM0lorLguW24LIJcHHA7hR4TsW+KSo7zjZNgNL7bi7P
vKn4YNV+9ZWeCRDcyRyvv0/F+WQL/b2rE2Cz9oNaYycqznQJsPu1YxKkMYxW
n5lTsfuLEAczzUmwY9xHzPo4FaslxLrNHpoEoRrXr244RMUpPfk+KhcmQUNR
mbWyBhV/NVn4kvR6EuRQZH/mbKDiqzdIyUc/TgJbO7bgEyEqln8mlD6aOAk2
i4o4S/NR8ee8bSUKxZPgcunr9d0LFByqbD0Yw54Enz43lNvWUbC/QKl8hNUU
EOLjDnB+RMFpu//7YWg/BaLXdL9NdaXgbsvrYOn2FGggFEWXXqVgja9CJmZv
poCznWedqwkF9+tb3OWvmAJvPrtv/k+KgrUfjlS6aUyD9+uEHUzSyNg+FpyS
058Gby3Orm6LJ+N31YHdtSemQVGrqPHaMDIel1Bd2O44DWiT8ma7HpOx2AHv
h3/vTYMp/4fubq5kfMC+mf+p3zTwU5a3Gb5CxqGZHlK9MdMgqjhV6LExGRd3
VcW/TJ0G/xJ7VPEBMp6mbdq9P38aPOGb22C6l4wNThYafGifBiNhmt25smTs
4rmuXn9kGjxP505KFyPjyOgrVnOL06Bh7seDQ0JkXF6RNRhFmQEt4RtdvWhk
PD/DdDYSmQF+49WbHnOT8ab/rFdXN82AxTtHSFZsEjbUSfH5umMGyGsc/E9l
hoTdr5CET4MZsKX5yiupcRL+9MI8lHJkBty3VQw6PkzCVWmxm1NPzYAev5K9
IwMkvNSxlHz+0gyIE5d5t5mD5ShH9wm6zIDWsK0PNAdJ2Gh7RGH2wxmgqdH/
2WGEhD1OTB2/GjgDou6nhtCmSPjLXd3WdWEzIMDGkX2ME09t1BubwvgZYPt4
aJM7iYwJZQPjTukz4BV1XM9LmIy3TmncliqaAW8nnn+jypDxifX+vFV1MyBw
s6zBkioZP9jf8fxu1wyYJum5VRwk46+XlNdvnZgBpBb90XZzMm58/iiqcWUG
XGZmBhJsyJjnZ72iF30WWCstRb+5Tsbb2zan7Vw/C9Yl0JU8nMn4FO9t7X9y
s2A5b3dwyS0y9lIoL/ffNQtiTIMexbuQ8TdjCfO92rMA15e1nnQk41Z3h86B
Y7OAoaT3hMSpNyUy7+oby1mwu5nn4T8rMt5ZvGZO5+osMDe/fknYhIwtx23v
T7rNgsCcL+15OmTsuzadL/zJLKCq/bkosJOMf2jSXx8JmgVBETrr10qQccdF
S0l25Cw4EengOkkhY7pfUmxM0ixoz+mcSefUy7rFBBHLOPLHL2eupZMw7f2/
aw5Ns+BB3WuKUAgJJ5+yF2vvnQUVxHIlPg/OftL8xC2daw44dJIsoQYJRzWm
73TYPQdOZLyqwVG8+HDwgc42nTmAp/dXcd/hxdNmtQGHjebABsXIIDnOPqTb
MDIid20OLJvfDDRn8+DeOsmYtsg5IJHT1N+sxYP9g76eOJw0BxjgAz2NxYNV
TffwpmfNgTTDgHNN/4j4Sa2xdVDjHGj32Xhn/C4Rb67xEjvMmAeaUZLbzL9y
46oXQqVpG+ZBq53D9p23uLGrUbib3JZ5cCpvPm8T5MbF1Wn13DrzYFVRK6Gj
ggtfrhoOSHObB2csjPD+FgJmBbgBuSfz4NqD+EN6bwk4/Shp9NWrebCdsDB+
xYSArZkvP3BHzoNfLx68ptEJmK9SwuBG4jx4XNd0yctjFaX4xy/8zZwHr3vv
OPY3rSALQ/UYg5J5sEmE8S1EbgXFlxvxyvXMg/grK9sFg5eQiV/791eT82Au
dklqvoiNlg5fteYmLIDoN4ovzXnYKIq+IHCDfwGU3MUaewwX0ZGyx+jv+gWQ
Y5jNsP60gGafsuwNNi8AuYy9B06RF1CoQZhY2q4F4NXBCBp2mEejJb/cXh1b
AM3AOMXm1Bx67au7mdtyAai0acby1s8izUN/6q9fWQC3rr5dvGM6i54XD+00
8FoA7RX9X4rPzCClIvFRrkzO+YatahG+U6jxSdyH68ULYIvzb6tP66eQ5wE1
g7/1HHnR886r8ZOoquB4zK+JBVDLkejVTSCH34+sr8stAumM+LMD+8aReLce
aXbnIvjx1P3jv8IxVMpNjb0DF8HFRcm9hqJjSAb6TficXARp+ye43xeOoD+W
R4MEbBaBBzvIfq/cCLp3V1D9jeMiQK30laxnw6gpPcgz6ukiyHVqZ2heGUJe
TWbSW4MXgWrweXmtnkG0c35d0beoRdD45+o2FdtB1CHSekXt2yIIU+1c+2Ni
APntCmWirEVgMHwlz+XxANpjYvVdt2QRGHULqMJNA6jPUcqsrH4ROJ0pvDVV
2o9eBXYvGnUtgs08WWZBnv1of9Ln0KaxRXAoO8TcTKsfjVZc0rJaWgTMytX8
j6x+9H5EvreXwgbJY0k+W6b60EH6iM+1NWxgeEBnb0dPH5qRT9w2vZENXl7j
uzI83Ici9R2q3RXZoPlEW5AMrR8dvbTTmUuDDSq+HuLD+/rRkteMqPcBNvhq
1shT+LAfffn0M5NhwgZXCm893v2nH53Id7MKsmKDU7Ibw8hiA4jYpcEjdo0N
nGYm18WaDaAkrpXoSDc2ENQwrLl9fwCdkcQGW7w49i5AcvLbAUQDD8YSX7CB
kjC4uxwxgH6e0XmpGsYGf8+785l+GEAX7pB2Z8WxQYRyAc8T3wEk+L6oWfsX
G9zLfbQibj+AstN8PUry2cBn5ZPZpYMD6ErjYanj1Wxg5Bpy1HX9ABKdYxQ0
/GWDQjPhQLWefvR7TbWd5SAbvNs/r3TjSz9yVHnJ3zPLBqHuwU0ltv1Iwtj0
2xXiErg6PXmqTbIfuQU0zbuKLYGugi1vlB/3IdnE9x9WNy8BWoLVfeMdfaim
/Az02rUEFHSXpSebetE2vs4nLw2XgMte78vcUr3o3+NBkQTPJRAS8svFJ6gb
+UfFp6v4LYEd9Nm7w9u6kUaevWXG2yWw+72byVR+FwoiTH0qSl4CRi9DN30b
60T6t9kqXd1LoPlWnfKXvf/Qtxt0Y1H9ZcBzvsdENqoFlb0Tcvt6YhlsFLE0
t05vRr3568O0LiyDsQ9Rd5aqm9D6dVuGrt5bBvFStunVvI3oUY7uw5wfy0BJ
NZBZ8aAWnWDd+35ZagXsMim62Zdeiha/TwhlsVfAee5xm5KIUCTcNq9uRF0F
kplA/9iel0iRQrDqE1kFO0zGHn08fA+dt2DECyqvAsOfY0xVEX9QxrNVx+bS
KijpmJGXqUgAoaYXnJh1q6Al5a6q7dd88OvelXdRnatAY99OhQs+BaDmiyNW
H18F5fcGsk/eKgI89yApmZcAb9hffxD1uAwICuu8vUMnQH09eseTsAog/uWA
wgEhAmxO9CdtP1sF1GoMjVolCZCcmy5mfOsP0L1k1PNZjgDNX6kRK91qgNGy
qauDIgFueEu+QLpZC67KnQkl7SXA+Z4b0Zm69cAt02pHtRYBdmTqKoeKNwCv
4xfy3+sT4EYXXmr4cAOIuH1lUMmMADOV2FOb7JqAEqbOPzlDgKN1g6rT9GaA
eWJ4288TIGGHhJVJTDM4pq8npHqZAF/vM9e6q9ECOvy6Jf1uEKBeIlMtvKAF
3PjzQLHbhQClXxXl9+q3glWRjXs17hKgb5NUuOPvViAefsZswIcA37/0b8z4
9BckdLMvwAACdL//yCOY1gb2bXnn+OY1AfJau1ct2LaBsmtqnqMfCPBD+u/k
9qw2YJFc76f7kQCF3z601KG3g+FZp/cfvhCgcb1YvJhxO7itIfRlKpEARRXf
Gpu/aAc0z2+ph1IJsNfk0KbO4nbwLv9ofkQmh58jxtvCF9qBPHW0ej6XAC/l
tc6mCXSAtCPP2o8WE+BzrhCVEMkOcPCF/MjnSgKsqFXaZKPQARrrixaX6whQ
M4s8sbKzA1zaYEsxbSVAax1m0tHdHWDuLK9IfCcB0nl+WGiqdgCvqI+biAME
ePqGZneCUgcQGdi/49QYAV7zXr/1oWwH+LytQ/PbDAHG8aYKvV/bAXY5ehym
LBHgjNBHr1piB8hPFTt1lpsL5nxrWhCpbwcm7HTbVAoXXHf68gaVd+2gG5x0
5mdywRfrF1eTOPnffDT34MIaLqia9zdvD3c74C4OCsjYwAV3F3oY3v7UBl7w
q4SypLhg1mlWxLp9bUDK6E+c3WYuKGhVuCe96C/49vpGGlbk+Lsg+Gb1wF8A
WxiFa3dxQXeJ8lLf9FZQJfG11l6DCybzLh1ZkmgFVhcMOn/v54J/EKNr+lYL
GIsZGBM7yAV7YVSBSG4zYCjL8pWacMGY0nP617c2gVCXfFGp01wQ3L/wYlW/
EWzLsJZ1O8cFVayK8m+cbACHdcL2y9lzQXOeztY1h+pAq/e+ox5OXNBi1COK
a2stuFLeYlHnzgVxl/ll3aU/wPeEqOvDJ1zw9QeFRr0bVWD9+9THzX5cUEF1
yW6DXAX40m7ycscrLri3Yl2E/7FSUHQpMKE9nAvW5/kwUo7/BqTbtB6NdC6o
qNB7sssvCTwIWzo+PcwFRwwu/2C8zkPHlH45bJ3igh/fiu8WYBcg8ZybgdYL
XHCrX65N2KkSlN45WFXFyw1XPU3UZB9VoUmZpqNfxbkhbtvglizQgKzjfxyx
OcYNN6/Z6Pe87x9S2udwLeQEN7w839TxPqkTrZQr+NVacENeN355ulsXejf2
sUzLjhsWZ/hPN5B70B/lFwYSD7jhOC2gn3895/uYZq/f+J0b+taIWOweGEGM
Q/J2zHRumH/QYbLo9Shqbe7x1sPcMLTVL78CjiHXJYuilDJuWKCXkRWqM470
/ET7h/5ww7VzB62DXo4jYfFa8qYmbvg4xjbkUMc4SgIGBwJ7uKGaSYGpq+ME
8qgi2RYNcUPbB5D/x88JdPhcrtfqBDdUzH8ZpLY4gfofqBdcW+GGvwO6f713
mUSpQjM9UTxEeKz6TOO+pEn0KCqJt5VGhL67CdvjeieRZIGc7qG1HHlbnMxZ
/Sk0eqLrwv3/iDCHZ83MaecplNkX+ujXJiL0k7/S7R8yhXxdT0WNbSFC7wjN
8uKcKWROFcmXVSLCJ+Mb8hr/TSHZd9VdZ1SJkP3kpK3n8hSalvcjBu0lwprn
rt9uC0+j3IyDm8q0iPB3SsWsq+w0CjjMo03UJ8IXU/sb1+ycRpZ/kfWeo0QY
Acf8mtSnkYL97QcOpkR4h871Q2HPNFpcUY2MOU2E6vx56kc4+kXPJ3PazxHh
ANmAf6/0NHotmfBP5BIRGsg8bQjnm0YXvtlxGdoToaB4yWBI3xRS1pLZ+NiJ
CIdebD/x/McUItR0wEx3IjTHtl8KHabQo4HsCPf7ROifsPxHmzmFqIQQbnVv
IgwfU6Vav5xE/iK3z8/5E+GgfcYVW+FJxNp2Mv9HEBHuvL3dqzBhAr3R3i3j
9IEIv1Qz9yXYTiCxU2u8lD8SYcmVrOCb6hMo/MZU7/gXItSOjcx5Lz6BZJ5U
H0hMIkLL5szR40ITKDYkMebaTyLc97mqZVF4Aimm+FEVsolw5uQZy7yNE+h7
yZXLg/lEaOqUr26mNoHU/umXxpQS4Ro+cecUswmUOSenYPuHCAkOx78z702g
/QySn0wTEYJNi09zv06gAunuka52Iryum9AHuibQIY1cw8heIuwXnRWlS0yi
iuPhiVYjRHjzrqjFT6tJZHzJQ0Bimgh/5GpNNEVPIougPX/ec/FAS3O7XSs6
U6gjTnTnKQoPPJ47LqX9bgpdzJ19KcrkgUbvah4/nJpC9mPJpkFiPLCTec3n
cdI0muQNTDXexAOV4x8H+wvNoFti19ey5Hmg/XSNuJTbDPLU39rkv5sHBl6e
Fbt9aBa9/PjRwtuIBxJH3HNNl+aQaPr9LL2TPPCd4+ywyOV59KHqrDivFQ+c
/RkhUtIwjz4vb+i4f40HFpiyhgWSF9Avs1fnb3vzQMi7wJqzYKNWvseX7bN5
oEnPU+9S9xVkJXW+VOE3D9y2LsMujPOe6VHbrzBUygOPaJ8fjN69ikYvLo/Y
NvFApxFFuY6JVcSFnR3OTfPA54sFFanfCNir3viPBJsHdtjUX9jSQcC0kR07
27h4IfE76+8YgwsLrx+dPsXkhY8utT8k2XNhWScbVxN5Xuiqmal8Zzc33ran
3ThMiRcWGD/7uGrHjVUI5tsHVXnh6GqPtnsoN9YoqKLt2scLL8cp5J2p48Za
z/R772nzQv3ZdW/3MolY3yg3p0SfF/7HulJUf5iIj4lqhKw5xgtvp205u+U5
EVtGKZjEWfDCs8Sy16JyPPji5U/bZ615YYKsc4+7Bw++qiTOt9+OF0qHjqC3
zTz45uzr3qfXeWGoh+zeUyq82D2TmVvvzAvNPj8tlPDixfcfeIdsvMML+9PM
5/oqeLH3QS63qw94oaGX8pFuJgk/Z7ib/PTmhTL5d5e8D5Hw69rJ7dzPeaFb
6IZUXk8SDnl3he9IEC+sqN60S/Mb531t1d375j0vFJwUUmlpI+E42TO5nRG8
0Lmar+YUlYyTh+tCtsXwwmF/9USxHWSclmzo5prAC2PsfXQvnyBj7FpokpfC
Cwde7Uu940bGFTxpfCdzeGGGWWDk2zQyrivZ0fexkBc2rNda6Kwn49aA2NzR
cl54U03J1HGSjLtObApVr+WFv4yeqpvTKXhQ7IPbo2ZeSCB86QuXpuCJTmHT
yg5emPx7adJEg4LnY/yU1vdx6lEw+dXtGAWv2JPoF0c45w2IboIXKJh3172+
xCleqHjjzeIGFwqms+dyFxd44bOqtzqvvSiYlXMjVJdAghWl54fcgyh43ZMB
twASCV4XYwnmRlKw5BFr0xY6CT5sXX/pXAIFywm1KMkKkaDrAx2lw78oWLHJ
mO6wjgTR3ckdNzEF7wor68uQIME9IZ5Z+QUUvPeibh5JlgTDPMx+KpRSsPbW
7NDjCiTIUxaT/aqcgg9NqLp/UCZBMYLPw24OPv4z0bRPjQS7mkbtucso2Pzu
5h3KgARXXgRX1BZS8FntCPpdXRIk7VlfrZ1DwTbU9f2FBiTYgXb+2suJ51rl
izyWEQle87uYlRpPwU5BfGFnzEmQGj7OSA+l4NunH7nHWJLgrNxA9SV/Cn6w
cdl06gIJdnf5NVPuUHDA11G6jwMJJq735aUaU/Cbm7b9NbdIcJPgUm/6PgoO
Ve/IE/cgwafjxh9bNlPwp1XzMLtHJCg4qtvAWEPB8b+r3VN8SfBAhtJYGTcF
f3966MRqAAm209uvneHUN/143o5Db0gwx3tfVWsXGees3csfFMLh++W1kQMN
ZFz0N6W//SMJ9n2oefGkjIwrP27Ll48lwXq7ply3PDKut/sc5pxEgr6RQYLz
GWT8d7vEbZxKgkYs9aCWH2TcPfPmBF8WCZ7+PSa2mkTGkft33vybR4K6EV4F
7HgyPutX8TyxhATvn42Nk4wlY7Emu/j71SSoFGf+71AMGTdL8xYbN5LgokXC
79PRZBx8I7xHpp0E1ROOhKhx8IlMDe75HhIkfhqRLeFgYUqDeMkwCTYnvdyx
xDlfbeyo8WGKw/+pCxpZHPv+Yfzm9oskmBuiv2GF4//wUIwT5CLDm6QfP74l
kjFtt04gi0KGz053Z5Qlc/J/0P61m0GGLqFxTrqpZOxV4V6SuoYM9ynF+Aml
k7H2epE+bzEy7DIuntqeTcbZ3w5LbpMnw7Dw2Pq9hWR8Z7lv76oSGTLqM05J
c/hT1394sno3GWY9lxI8WE3GKR1pL5x1yXC++NIBjVYydlQwTTxwmAyDNl9V
oXSS8XbX8dJ1xmT4ZSBEgt5PxrFMOd5sKzKUTWKZZ0yT8aXTuRsDbMlwQ+d5
Xzs2GctEn9G0tifDvtT+pyaceodrvrpFukOGcBdf1KgABVv6bn/V+IAMtxIM
nn0WpWCx+pKkWB8y/NduR/kqyemva1yDhm/I0AxuzcnZQcEmaR9IG0PJ0OqR
/0jHHs588qptmooiw7Jp/o4bOhRcdawG/I4jQzHziOK7hhTs/8He4k0yGf7w
DC5Zc5KCD/dT3ezSyHDTicVD+pz5p6p8CtLAZKjEd8Fu6w0KflTaUtFeTob0
FtKcuS8Fa629NfStlgw/qq1p/xtMwavWLMqjFjJkhrcc8Yqh4MyEr9InOsnQ
b/FRkEcaBbsvHty/eYAML8yrDrA586ym131mcYwM6946iWt2UPBM4D33slky
3ON3XjZwloKT/65/E7pMhge/eZOPMKn4xpbU7zd4KFDqi/jhankqVnQ+XqXF
R4Flajs3O+tT8RAeHhZmUWB88pkXVleo2MZ8k2yaBAXmvPQ2EvxJxdJR2VpP
ZSnwyKn7r5f/UnHn2MmzZ7ZR4KLe971biTQcrjFze7sKBXaK620ykqHhM08C
grk0KFDmX7JfrzYNr6/Z+qNmPwWmn5nVbbGk4UbxwupPBynw6+GqG2dcaPj1
ZevRW0cpMPm6d1mcLw2bpC7TDp2gwE237u/l+UDDLO63cmJnKDDrh5t4SCwN
Vx5R0Rk9T4HVBsfKP6bS8LO3lVb4MgWWnAuQ3Idp+FDP5bsvHCjwabmqr1ch
Devd3RSv40qBe5Sknz8qo2GtNa3Nsx4U2HygJuV6JQ1rfn1F/fKYAmX3X9xn
WkXDe3SPqJ1+RoHZT213Ao5c9S+vLf9LCjwQbbyqwjmv7JwdhN5S4MCzzG4N
jn1F/lv5DuEUKKL/8KoZx7/8p+1Tm6I5/Gx4iX1+0rDsvv6N9V8pcGypdqkm
noal6sKPeadQoBPriKtqOA2LXzt5b08GBV7uTqJ8C+TwxctKGM6hQOv0A1ra
92lYJKSkNbSIAvnf3voxbM/hY9dDvuOVFLiGtSz/9RQNM8o19hDrKfAb0bH9
kQ4N812cvvSjlQLXouhsJwUapizHv7HtokDj5/dCPVg0zBN0sWDdIAX+XWvv
9mmWipfy6zd5zFFgfvv3tWfSqHje4rmR0goFKiU882S/oeLp6QP3O3mo0GEu
6+UfJyoelk5r02NRoejef8cttlBxf6YD/4IoFRpF5flv46LibhP5vXESVOic
FZTt1EDBrY/ev2Vuo8Kf6//zyLxHwWXdd00aD1BhiZqmo2Au5/65o/rQ15AK
2VzNFywDyDhfeOzbXlMqVJZIeMFtScaZOlbMCGsq3Fe/369+joTjo7RK7O5S
4czTS9fVtpCw3wUyZCdTYdoWPrrzWx5s2B2wVVycBiv2NPBH1nPhsq3dtRbS
NBiZOKxgkcCFDW7u9ngvT4Of2nbW5j3mwge526pEd9Mg1+PZ2v07uXCB/g53
s300aOc1+kOWyoV1Ax9teq1NgyQ+/kOmbQSsJbnVRegYDSo8WneH34uAsa2H
hNEJGvwvVrfokDkBg8TqogALGpSwCnFU3ULAezVdNzDsaDCtNKjqxLNVlP64
NP/wdRqMiJf+tXvTKlIrF7d/6syRd0lpLaWsoF0WvzHlAQ3u62jVss9fRikf
RS8f8KZBpiwt+KXmMlIeuiLk5U+DHxpsZ4nxSyhJGWXmv6LBxz0pW89TlpCi
O8uG+J4G371dDs87wkbxOReZWhE0OPNYE8i7LqKt1LRfntE02Hc4s1Lv1QKK
PUa3Rl9p8Eg/d90pNI82B5/lW/lOg7FbNqWv8HD26fbklL3pNHh55yMunnNz
SEaOZHkb0yBth/v58PJZFGV/kpxeQIM8F7cWv9abRVKp8UnzZTT4vCpLiLt4
BoUvr57cXcPJN1fwb5vRDJLQNSa6NNFg0xXWzvTOaSRWu2A61UODT2Fh8CmB
afRuw5HVHcM0iAOTqyPjp9C68+ExNyZp8FjK1a5KgykkMqnHHlmhwUJWtp1M
4CQSEHgV3r+WD/YR/ftaFCcQ8bDi0F99PngmKDTajD6CBvOsPYu+8sH9D4Mo
+kH/kERg42X/FD5ooyV02gh1IBNLQ1OTDD6oyvOxVKW6HWXPq8t3FPHBwmdu
0WedW9GLbYK1c1180DKzxaahvg4VLnplZw3yQZnSqOdEjVq0VLgU83CCD84T
/RX3fv6DbKz77zJX+aCTiZhurkIl0niD5OTW0+Hjo8rBFTN56MaFXawRSTqc
Xu11XLHLQZ93xC0ly9HhDFF93Zm5LNSyItnnqkiHrQVT/5mapyGBstfVmrvo
8MW/Fub2hRSk+5aeybOXDj/ZSXYOtSQhd5sHn0u06DDiW5zaC55YlLhzPiBA
nw6fVtZLB7REom6C/e0Tx+hQVnxfZJNHMFpX0XVRzIwOn6y51ZBV7I0M3588
1nmGDkWT37cJ1Z5ADy9V7om5wDm/wBfmVuQJfu3SlbG/QoffeVIXp/gCwQh3
BlPFkRPvJ8l9kl7BQKpKaXHBlQ61DI++iqwIBWYhn7vRPTrMjli5dmY8Ajy7
LFb52IsOXx8AfqdbPoKc3S/SDPzo0KNVTqhE+hOY5aFECb6iQ6LBrx+6RZ/A
1j93/Rve0eGOl+pFWvgTsAqbcg2JoEPetpbhFN5PIOiq3fnzMXSo7rJjMfT5
R1Ci3n5kSyIdNoqxKh8ZRYBVkqna2A86/Bny0MD53gegUlsi9SOTo78udYOS
zytgFwH5b+fRYYKPCqNH9jEItU+dgyV0aFGyPMH/8SSq0VDoJFXT4fIRCTvx
fQGIQo0sK2ugQ72/gvvu5YajffVrf75oo0Ppj9oqU0mxyPGjX4R5Dx2G+GW2
e5Qmo5gbxGfiw3TIF0En2lv9Qn/3ubl0T9KhW178y/8SsxCLb8wqdoEOT48v
myztyUEHGy8Y3CDwQ8PNvrmSRnno7qfmXapkfngz4S3cIvUbJTsek1zi54fO
QbXBtikFqA8U0HKF+eEmuZA5CVYREuPfO/NkAz+cGn5tckC7GB1v/tZ+RIof
bjN9s3jWsAR5RcuVCG3hhysrPpti1UpRhlNIStN2fuh0K3K7NakMje8XCgtT
5Yc+3zbnzqWXIRmmj8/FffxwOOpLrvrJcnSqdeXmVh1++GtLgqprVzl6/sXJ
cuIQP6RnSC6FnK5A+S6DB38e58RvbHVcJ68CLWhb7bxrzg/zQ/f9zNlQiRQF
6//TPssPS/6rNt1lU4l6/XofBF3kh7vaBM/+DatEIbS5vr4r/PBo7MJPXFGJ
TJ6Qj+xx5IdcDzw2201VIjqPaPIzV34YKm/qIU2uQvmem9e2e/BDtnVzTBuz
Ct1eVruz4zE/XLtOY5QsXIWU3fX/PXzKDwOc/0hkClWhwdmTevWB/PByKLjP
4OhH3rwctzmYH16Vk11PI1Whk+PuArdD+aHuMZB/fqISCVx76lwexQ+Z7JhX
XJx4igbeN0vE8cPqdBWDmohKdM8mHjh+44cKipHtX69WItWuzKj8n/zQv86l
z0SxEo2eLaeuzeaHYd1W7916K9Cn1r/2dvn8UOmWXGDaqwpkcXK0JqOEH96w
65UKUatAwvUraoxqflhz1do9qLoclRoxQ60aOPZcVXctWpajB5USxO9/+SFj
989XpI4ytOew0iXebn547ixza71xGZooguVmg/xQjFdh1iqtFMXoHleOHeeH
1vcMW1yYpcgq99ybpVl+mO39wz3dpASJAsclw2V+qC757Oz7J8WoMuPBuQgi
A7qeiIk7+rkIeam9LJiiMmDyWQW/8oRCpPnj41Y9AQaEiXSZ36EFaHZHSkCw
CAO613vs/nDzN/qakD8zKMaAnaQk9jX5fHRha92pfZsYUFI17JoQzkViMT3o
+RYGNP3t4KixIwfVSs9Kd25nQN7THa37ZrLR0wiSr4oqA+5olt/wWzkDLb6T
M2nS4mCujtXej8koea1a2lZ9BiSdCa3zyI5Ddq8OinscZcDBnbHWn79HoEY/
u34pCwZU2qu5ZVjSFQTQ3I84WzOgrx2jb5/eO3DgiW9y4SWOv7v6bH30GawQ
369df50BdS0WBM2jE0GqZ9ydq86c/LKG11m3fQfXljP+Zd9mwJ/zybWvXH8C
afcyPcEHDKi41/BbR3g6aJ1tjTvvzYDbb0et8zuZBV7eHBFI9WdA6st/v0c+
I3BofNmZEsSAn7tM82ULMeC+xmg59Z4BNTdqv4rwzQFpA+LwawQDbmZ48UVL
5oIbNts/rUYzoG1VtEbV01ywuQvQjBIY8HTSQeUHFbmg/eyx61EpDJiqoeXZ
P5gLXrda1c6mM6DMcKTkdGcuMDzpoK6fw4Bn+m9HWvzKBaT6+6HvCxnwJn+Y
aeTVXJBl9II4Ws6ARZNtWQJcucCpMvISrGXAVb7qVuySAxQOfy9/0cyAald0
Ge8rMOguylPu6WDAdV9EDcypGLzXrX2zu48BzUTtrXiPZgOj3O4lnxEGDJo7
bDJolAloYOZc6xTHn7QPSBFPB677N1NSFxnwh1Vz8ODtn6BX+3TCcy4m/Fpj
dfDB6xRgoudvYkdhwjDrGd8t176B3IM5i1pMJizNVVINZscBJYPpcDERJuf+
KXnZ7hsFQo/IHZgVY0Il7uluPsJb4G7k9/KLPBPKIDUuwmEv1G+C1R/uYMIt
R5oPdriGoRNmU+0WakzIeqvTI/07FuWflPVSBUz477nJ/W2235GyxUkFAT0m
zDrgfl2OOx2FWz77M3CYCdtfn/sLYjBinEOuecZMGCE1cK0hPR/dOT8pHnKK
CQckKuWO6hejoYsyv13OMeGr5OatJ45XoFOXzK8cu8SEzOm12ssV1ajo8lNB
+etMWFLTW/PTphapXsv+SXRhwmbl/ZTosnoUdX3izN87THj83sl50mIjYjlK
8/x8yISps1tWpmeakaeTWWyAL8f+uO/Pf8WtyMIta1Y7mAlnok7p6tA7UMnt
8Q//hTHhbMbGkgOVHUjNY5P23CcmJFmuJQ77/EPCD32ex35nQra6sUvlUCcq
e2a6WbCSCX+3OP7bc7cH7XnuXTFYx4TyW4McpDb0opjADKf8Vib8L/390Xs/
e9Gj1xtzbg0y4dPrS1L7R/qQeNWswhi3ADQ9X/ir9MQgMj0uQLAgCUDi+Yu6
byYH0bM/W2qKqAJQ/mnTvkfPh9BirYVbpIAAVDvec7WyfBjVN+X+NhUXgGIX
vWV5z48h/tOtwbkbBWAqcYPzOfI40mmdubJdRgDqTBQXZFqOo+S2zSyqggA8
Lr0/UIM1gfy7/C0z1QVg9y77zGa/SXRg5NSclKkAtGZPm7j9mUGhwg9r7pkL
wGmFyJS5fbNoWiMusfW0AHy6o47058ssCvdl2762FoD2TSIb7t+fQ4tyHxqp
NwTg2wQ7GbB5AR07mp9ic1MAPly6dUrTfwF9dhkOyHPhYKatxLrJBWT8e6/+
3bsCkKKxjkxPXkSxwxdkmj05/l/46N7mZyOCsB/X7kcCkH5q8qXTRc6+bf03
bdxXAHoaZt/KpC4hbl/e10f8BWDILRUlW9MlZP5tm2NsoABszJhrMfqwhBIa
TQ3JQQJQu4N0W75tCfESPOQvBAvAvKFtVkHrl5GF3GdSznsB+Fm/mLrr+DJK
Nqzo/C9MAIpfKFKPvL+MKC6z2e6RAvCszce5S3HLyDJE/H3DJwG4kuuxxF3B
eT/k691S+cLh5/zRtMr+ZUQbtjcOjBeA992WgyjsZWQl9Gb7aKIAPLdhB38i
cQX93IP4DL4LwCwXh8s3uFYQw7qvLzpVANZRPnrdmlxGF3yY+TzpAtDsoi+/
RO0ySk/aHX4uSwDaCSapOkYuI4HGs3eysQCc2sqT8NJsGdmsPjHfkC8AK5w/
mdQNL6FM2SQV10IBKNNUYPbAZgmxDBsF6ko4/dUVkmDUzUZ2zoSRHRUCcPnb
g0DJe2yEP2wu9q/m9EtFIP2IKhuJ5B/7NFQrAL88KLewIbLR1SHX+wcbOXx0
5hvY/ltEuayIM59aBGCfzPbc8bJFJLqnWJ27XQAueYKl9LxFZH9uYs3ZTgH4
aTLp2Lb8RZTvvW4yo0cAvuapmhAvX0QbkvZXiA4IQBXKSGPS30Xk2GAX6zws
ALu2hCqrziyiopVArz9jArDedkpTRoiNxGXTrbdPCUD3sDld/t1s5HSkU/PZ
rAD89wJ8f27FRiVOtA0DC5x+FF1VPf2cjSQ/KM/pLnPyu8W9b3MeG7nknaqJ
JAjCaGPq4VQ2G5UPPkhcJQpCm5S15BK1JSTNintqQRaEq4afI7e6LyF39Rrb
NJogPLLYl/AJLSFZ702SNwUF4eW600FCJ5bRnUSDpUphQdh9ixAT/nkZ/am/
2aggKgh3anzyurW4jO7J5Af0igvCKkI2aXvcCmrMvcB1SkEQLhszb1msIeDx
/c3r724XhDEr4OlZHQIm5xxVCVcWhP1md6X5nQhYFe2x7VUThNV3Pm7nrSPg
VxkC5Y66gpB1CWqhd1z4aEpm8FNLQajGzbx1R4qIbXYqJyecE4QXFW44Vh4n
Yo/k6NLqC4LQnRD8PcSTiOOTXqysvcKJ947mlH8rEdO+XroQdUsQXuUtQcCP
Bxd8ElbKChCE32l3DfOreHGbtK9+x0tBKMKzNv/uLC+e+bhqTXwjCJ1j2d1R
G0hYOnIwSD9EECY8brxw8AIJPwjF7LovglCUq+chGCNhzTdXC0dzBaGE6XeN
kVEyPiHS2SFYIAhfCKnXCPBT8LUgs0WVYkE4pUj0aJSn4A8vtbbdrhSEOVZp
660vUvDic9GX5FZBaJfgnZFTT8E/vPMtJWcEoa+iLWv4KxXHHCoVfTIvCA13
8Wipl1DxO/qfPyNsQagipjtu3UvFngHtehncLFj4Lz3ivDgNHw5eVDwhwILq
3scOV/rRcGe00urTrSwYOCahT3Lgw3V2u9MmFVlwRebAoyf+fLhoq+bNk8os
KI3uGF6O58NfEw36ZNVZ8EndbY37A3zY9adNZY4eC46vntdbf5mOGYUfwubO
saCHWoJiqhc/5vL5eNLyIgv2/tBauB/Hj6cPxQr9vsSCKS7XRAhV/Lip4ueT
F9dZMAx2BcuuZeCygOz9C44suGu8W9lSnYGzjX6zz7qw4LT1b8erpxg4qv7P
9W13WXCIW+iPWzADvwlu2vLKkxNP9a8/uj8Y2PdUR9fiQxbMfj0rd7+Kge+I
9YWce8KCEdwJd2UGGfh624hZkS8LHpgoX6PMzcTW4dOC2/1ZMPayTVCsKBOb
WLNLgwJZ0Pzo26mgbUy8p5cCzwezYNB58qNhIybeFsNcLH7PgpHOv6fszzOx
5GWRFKUwFhR4bPgj0JGJWQr/2b+JZEGuzzLD5zyZmHd00+aVTyx45lluyfAz
Jp5PlO+88IUFa31arEEwEw867PhQGs+CSxvBQ5tIJv67U+2EchILSkkshNnH
MXHVjKbA2+8siIIO5J7/zsR5P3VLVlM5+fpd8ziezsSpbocf2aSz4ACrc0QL
M3GMhrFmeRYLYmJKvNZvJn6/fHJ+Zw4LVurpNZ0qZmJ/ZJX8Lp8F6eMJa4LK
mNjzvu1VriIWTNhl7LtYwcQ3te1lL5WyYPkOrYGXVUxsw+vcUVHBgr/iRBzt
qpl4vURxA7uaBV1maBNeHFyh9l/l5joWpJTlvyRx8AMjhwLTRhb03W8tMlrJ
xKpXf2c9aGHBcIecQS2O/cHH634ktnHil3qqQeP4Dw27Ft/6jwXX98mNHeTE
Z5SW85Haw+mXl29jiQVMTKpZ8161nxPfjt21mrlMnD5s9+L8EAtqjxi+Xsli
YntStk/AKAsatET800tjYilJ1v2sCRY03pVzfUMKE9er27gOTrOgzK5jv+8l
MLGvcfr1tfMseE1WSuVWDBNrXmPY6rA5/B7X/MvD4f9TeKppKJcQNLyW4zb6
konN02lHSnmE4I6jVaVHOfWj11rqzJOFILm5QNToERM7kck7jRhC0De14J3W
TSbevPG0/D1BIdi/nDOkcpmJW/ckbowXFoIHvZUdq6yYWMfeTIC0QQgeV1Su
oB7h9MOTOPJOcQ6ebYqO1WLi+IjVlbMbOXjuYs7ibiYWroseSZMTgp6Ndhe/
bmTibo35kmsqQlB0MY3/1gQDB5sezn23WwievWdm+bWbgQ9fD08r3CMEE6l6
3m8bGDgl8mDMxv1CMLLXpvlVJgM/or59XHdECNauTx8Te8jAaptG7nAfF4Jb
lRjyFCcGHt6732m7iRA0sMtgxV5gYJMbA9Y+p4TgwjldHkFdBpZuUIf7bIVg
tOSNhnPcDNw47rf78mUhKFzw/vLCOD9+RutUfHNNCN45/dVdp50z7/t8/5u4
KQSbehU/T6bz4/yo5sUoTyFYGKDq/8GeH593vP2D/k4Imn4pJngW0LGqctuP
LSFCcEjS/+bVJDqmTcJUvXAhmC+wq4r4jo6THEg/PT8LwcsbFUWUrtLx0o3A
X9PJQnDslzrPJTodv74endFaKgSVffluBWjwYbvttMyFCk49C56ezJPgw3vH
rmaK/BGCgnzPSgOJfLjLXjnrWCOnvsZr37KLaVjJPis7v5vDb/ybHTXHabj4
ak1O/LIQVKG+OXfNgIo/KKjmFhOEYYOFu5L+Ziq+MRyc20sUhlcqM+r9eahY
5KplniRNGIplDHzTyKBg6ysD+a9EhOGbKC8pKUkK3rX18O9v64Th1s83P5+Y
I2PKUMLvCjFhuEXs6JawcjJOvOxUQNkkDG9LnyyRvEXGS3arhXe2C8O1n0RL
d2SQcOUW66K3ysLwk860rZU3CUcO5Bel7hKG11TEotKNSVjfzrd4XEMYvlKP
WG/dzYtfX1pTeuGgMNywpTviyygPttvsWnrfQBguTPAGzibw4L39zaWhhsLw
tOeQ1sh1HtxpG17WaCIMm3lSXu2aJeLttlsrDp8ThuqXZ3VVRIm4zU7i+tcL
wtDD7Hf8+Q5u/OyqkADjkjD0CalVkorlxgMO7OOV9sLwyIZAUt5+bvzxTmnd
8TvCkKV9+/T2e1zY6B5ySb4nDDOlHQzAcS5MePB9rdBDYWh5IlPGWpoLn3ny
/mStjzD8PF0sulJOwHTf54sqfsLQSSH/fxVddzyVbxs3jr3LcZzpDGn5EUmS
ei6iFKVU0kYlLZGKkAYhUSJkREsqUkoR6r6NEJEke++VlT3f8/55fe7zXOM7
rue5/zpT954L4IxA7+iwYEX4pGFiY+8pgCkhZxqsIhTh1vdxIVglgPMfHPVK
i+Lna+x44CUtgC9G7FZRjlUEqs25pyMVC4gbtQW7PVGEuquG1PQHC+hXzHrb
mueK0FS+4/AH6wV0PU5TSP+lIsiKrl91gLOANJ7ynkUlKkJLaonP6sF5VP+c
YjyTzP/96LKblTnz6E6CVMfB94rA01PTa4uZR/qvF25lfVQEV3u5X31X51F3
0j815mdFeJu52crAfh6Fv+0quJqlCAsnXdxO7Z1HJu/rHBqRInSbb+5O3jqP
RlN/ShC5iiCf//7CI2IePU3LfR2Xrwhf9vFcu7Xn0c6MNDOBIkXY0WtWJMKe
RwtZif02JYrwx0XZVVlkHiWjuKDsMkUQ36BokdzC/57PCdXgVijCG1WSAO0T
/3v8m9/Pm1WKUEkzmJ+6OYc+F3g4tdUqwtozxQ9nTOeQQ9F5BeNGRXgnXUnk
iM8hpZJj75+3KMKhBM0nTTmzyKXcbPREtyKo32rWE182i7h/iLD8Pj4eOU0j
Db9nUFnVat2lg4qgyr1S9NRjBv3XQHfrHlOEA5+D3o2hadTV1TdzWpgMz8xq
p0nsKRTe2xRTLEqGTYUS53veTiLjv783qEuS4Yh2s+Ylg0n0ZCTz2l95MpRW
2XQVb5tAO8fesncokuHYn3tmYj/G0fzEs+xkChmepIhwv5mOo4Nzd4SdWGRY
uiEsJFR7DEkKXH9exiGD+Eh0l23sKEoXumiitYQMl25lzjgLjyKy+CG/kZVk
GHBbk/Nf5gj6uUhd6tI6MqDbb00sVw2hjefO9UQbkMHn3tfv1jsGUXJBckEO
QQa5ddZ1TNMBdNdTy0d+MxnmJzaV0A72I/NO3blESzIoSaKm1pZulAVudeV7
yTAR8cHi+OJupB79+fOUNRmuqgVt0N/WhaR2GlzecpQMAof9b8Tld6Ciz4aD
rWfIMFM+ZlY62or0Fb1LJM6TwWwm1Lt2Wyt67ZiXuOoCGeIZja9F41vQbd4W
By83MtzS+cz5caIZTV713xzvQQZOy/urww+bkEP1d9UfXmR46UZe/8exEZkG
mbdQb5HBPfZ0bKNOPUrvCkLgT4aGil1zx5bUoaVGPx+dvEMGUbXBWi2VWiQ6
sevAx/tk6K9tbYzQrEaXd4Xq1T8gA9FynZyyuQp1JlYoCT8kQ/33A+sUHSrR
N5t9v3fGksEhyBjXFFUgncyHKa5PyPBtn9LvcukK9Jxcey/2ORnuXXD4YHTg
N1J0ojt+SyDDi64Y6ysfypFP0SHz/tdkEP7w9HqBcjkaVY1dsTiZDArJJsev
BvxCx641ieunkPnvg+M3u8V/ofIadpdNKhmcGCVSOx+UISMdu29+aWQoK3rD
GFQvQ+/vPnuWnEGG5Qd0I6rifyJuT/uNP1/IQE5JvRoq/ROFbFKzmcVk+LyO
PfUmqBQJxp7cyMsjQ2iznLvqslLkNPmSsa2Ar6+wm6HKtSWo2bJ32qmIDLWu
rptDH5egnW9W1kSUkGGq9a2xjWsJwmLn0r6WkWExNcmJvb8ErbJLDuv4TYbx
CWv/RKIEPc4adJGuIsOa9X5N6aolSJ6iZbm6lgypcifvPRIqQdecL6w60ECG
vSXtVo0VP9BA8QfZG81k0GwdXXbu4Q90RG2sP6GNDJXvst6Gm/1Apdd1i0s7
ybA2oonAf4vRxjrXV2M9ZDiY6X5J+VoxSl7z2Y/xlwxR3vkLFgLFiBk8fWLT
EBmWjD2rsbtQhAJ71xuf/keGK6ZCtAuV39Gs8VXu/XEy7Ex24SX+9x2djfsq
kD5FhipHwyt6VwpR/dRCY+MsGWTEKhTWZRSgzOSb0erCSmAl4/jgCzsfiZrv
pUWIKoFHa+/ld2u+oV09SyMFJZXAH7v1FBvloS5eSXilvBLIj4/V796agxZH
UkKus5Rg7bHUPYcNstAZ7yT/inVKULNzcRsvIR7RrSsveTopAYO33co+8hNh
P/ZytNNFCTpC7q+4GZROpIR4uOxyVYLnkc5S9lcziC0lbGc1LyVYb+f1a+mu
r4SL0ZmzZXeUwDFwSu1tVw5RrC5wTDVBCXTd9km6GhcRHoIrdv5oUAKKZkGl
aPIfotNYqlqtRQm8N+ityzSuJHb69x+90a4E7gU2IhM1lYSq3Nvzun1KEPgE
tz2crSLuWgZPBA8oQYRgSHiAfzUxGeZ8rW9YCWIE6ifZ8jXED4bOvceTSmAc
cYZ7T76W0LUhU2Zm+PVKXHsL/WuJx8/GY/cuKMGWqBPv7WZqCcmuKrV3QhTY
2sr5oe1QR1xa8TlZUpQCh4gQsvLPOqL5XJTuCQkKfF/udXRCs57YluLxFUlT
wHcj/djngHqCpbex9OJiCqysOj0b8l8D4e+hYvVTiQI6h63B+1IDMfJVoHE5
jQKme2dlRdMaiENCrSd8mBT48LovSnSkgSgwyf3byKaAdNPPBke1RkL79vNL
61QpsF19cP/SPY1EzI9bc6FLKfBkyHJQyaOREJU/eWtgBQW6XzQibnQj4bTb
VGarBgWGqX9ZGqmNRG348rBnWhRIKJy+TctvJIxrJZnzOhQ48/3Zy4KyRiKZ
2f/cWo8CSeXFlosrGgmqbYn6h/UU6LNYG1Pzs5HweZ6cKkNQwEdAu2M0t5EY
6Lpn4GBEAaVy3aEN7xoJ65XOeTkmFMhzvTJ750EjkeNoac7cSoHIpJmOVKdG
Qv396gpXcwp8VjA0CzJuJMLHFA+VW1BAWNjyc7dcIyGwbrxNfTcFJjozGiPL
G4gznlVn/KwokG9nmH8hsIGoROn/WvZTQL9aiWayoYEA4SgPg8MUCPCsdmpt
rydeb/YQjrDh48GMecrwricUAw7dGT5GAc0Vdf/lU+oJr5INi81PUuDixwNP
3z+tI7rlVaJfnObzSZ1kpfHqCMs9AjxBRwpI3MNVr6NqiS8RLa8POlNAvK/j
zUmxWmJZXY72p4sU6NguXVF0qoYIYT3PkHejQCxH58bH7GrCPt6+6JsXBeqP
+41/3VVFlHVvsWTfpABKSt2WebuS0FdfXut+iwK2MbcnZj79IeQ+9PVoBlJg
8fsG5/3Dvwn38R/OAfcowGLquoXNlxPt65Kn2kP4ekl4JWElWE6kYyeJqEg+
H40PDq8v+0lwSZb3R2MokF37HgwjS4jALaupFo8pUF4aEGtoUUzYlo4tIyVQ
IDkoaOfmW/mEZL27qWMqBZqLpZW2nkondF1fydxLo8Czoy+Ssw9/IGwXVZe/
zaBA6cCvnf3Xkoh00zWHhzEF9LpJiy5/vEvYfxx0vljC10+8Xegn5xSUffd4
tHsnBVrlVnxcLFiK+peH2kT3UMAwZbJPansZUv6WvSSrnwJpT2miveG/kOMM
693cCF/PMzz6Nm4FYjjU5F1foAAj5sgTE0oNcjPcMeCrrAyFTMZlh+0t6Hm9
54cEujLIzfw1dGtrQT9dE90KWcow/1I4/cWVVqSWLC4suUQZSr+yk9cmtKHf
tFxKkJYysKMFjN7LdKL5j8P1b3SU4eDRhferEzvRil3sp6VrlUHv3K2ddfz3
/XW/q+ryG5XhnOEmqnBIN9IYXWsYuk0Z7D+2pvWb9aED9+xFU7crQ2NA3O0S
0X50a0VYccVOZTj9Y9OjVYX9qN5mZK/SPmV4t6bJXODYABKfZdPXHlCGY5s7
1p0nBtHqCIvmfYf586w+17tbcQgd0faKd7NRht/i2XO/godQQEnS6chjyjCg
Pf54E2UYfXKo08ywVwbda+LrH70eRi3CkmO1p5RBzcDUabHFCJKO08uYOasM
g9Mp5DqJf0hP/+Q1hpMyXNet6Mys/4eO/Qkz3uCiDLmtpdzsz6PorlOexJHL
yjDhIL/zm/8YypD6V+p1RRnE155frG44jjpecB7EeSqD5jdtWZ3OcdTv0zIl
fF0ZrOZG76X7T6ARuydHHbyVIUl9Ns6XNYkEVDgrtQKUgSG6VfSB5hQSnWsO
Dgvi5z/Y9iY0eQrJ1D0enwpWhofGR//rWzaNaBHsnJwIZcgSGVOQXTyDOJea
ly6NVgaxzjOXl/jMoGW7HwfdiVUGm/1rDTb9m0Fr5Nj798Tz89+oFVItmUU7
/VSGOt7z8a469i3XdR7tO9G0d9snZVBw5SX+aZlHRzbFZSZ/VgbPlewjQuYL
6MwCy88V8/m+2OsfKi+AfV1ZLIlSfnw2Zb9ZtwDOOsk0V+9RhmcPztjejxXC
uSYNKcH9ylCVZ6GSWCGEi3iPKGODyvBYTsVjg6QwrmpitH0ZV4arfyUO6rvw
71tf6k2508rwwg62Wr8Qxu3RMcm+c8pwgYRvWVUL45F9DHcLEhXos6WOu/VI
eGpNfdMHMSrM6Z1dJmRPwgKKMSbKUlTokopoH75PwqIjBxM9ZamQqbhk1Wwm
CcuU0RVaFKiw1cHPY6aNhBWT6y6bkKlgEVLDKJYQwbTA6PpXylRgteTrbPlP
BHNOHzSSZVDhi8wWF/MdIniZKf3lBRUqCIgqfko7K4I11epkqrhUYE/nepzw
F8G6pGiX9WpUUDi4l6v1RAQbtB6oiVtOBeF13NZ/n0TwJkwjSP9RYUgozcX7
uwjeFlv73GEVFbJWLMC7ahG80zNKsmQ1FYLqT44a8e+z+w4ccNJay69nn8Cd
6hPBR/RolWH6VIibF3p5fVAEn1CqXT+9gQpr1CqXOg+I4LOjkU+OGFJB9J/c
nFG3CL5Qvl8s15gKx6T9NmyqF8FX3lHPLTWlgmZp45wvv/71uzXld8yo0L3F
J7IvWQT7no3UG9pBBcGzj88cuiOCg7btj91jSYXavTf9po6I4AfLqKTPe6lA
ZUW27Ofjc+iIWkKbNRVSv3wS2ycgglUfrN4me4gfb/XqG64m4f7v8FfvKBVu
Nl/JM0kn4dSF7cHH7Kgw2PnJMf8RCXuuObj67gkqdKxnifn5k7DxGYfKdAcq
LNzPOpXsSsLSTy5daTtDhQnai4yg0yRcUXmTIXueCldDnsTE2JBwjHQw0rtA
hcevequc9pPwcaNHdscuUcG/S7fj0x4SVnd7LXLXjQo1MXX66pYkPPom7WW6
B5+v/Su50btIOKstz6zNiz9/VMz7Kv65D7V8QOYmP98z87gve0nY3KLpvt4t
KihbhERqHCDhxbf6dY75UyFcLZKpwK9fmzFVFXSHCpuVOHcsTpLw0yFRj/S7
/Pre0ZeqzpPwaTVFVtt9KjzUXc2MvELC2oc42TJhVLCjHhT18yHh6fsax/Ue
UuH448iXYcEknFOwXuxYNBV6rm7UzOTjY7naanv6EyoE8x7MreDrl3bq2FDr
cyq4L+yMdCgm4dZYp1CZl3w+jy++96yehC9I3qmxS6aCTmr/b5KQCNaHh55B
KVTwdUaOS5VEsNDleJX0VL7+kv6NEStFcEgLOiGTSYXDyzQE91mL4AOUEnG9
r1RwDeY5HHASwdzttYl22VS4c7w15vBtEfw+fXQ4rYAKBm/M8ty/imD3AcGw
1iIqiHF7ep7VimAjVTk9mVK+3t1bvPomRHD5veVedhVUeJreFi6qK4qjvuly
gqqo8Oq4qvmElSi2m9mUl1bL18tsJ9fwiigesT8iKdNChRUnh5aszhHFGTFn
3qxtp0Jva1+GZI8ovlnuttOuiwpWO1LmIxXEsMLG0PC0v1QIfdp3zNJBDFe7
PF7XOsT3i5zbjtRwMfz41Zt66VG+vyV1vPULxPAqciHXbpoKDupRI3Ua4nhn
/2yytBgN1DIS2piKEliZK2m5VpIGsd49RfYWErh5H2XMVoYG/73bdVQiQAI7
5WqtT1tMA73WTbM20xJYb2pjY4sSDZK2Pi7t1JDEAprmN6RpNBi5sTrpso0k
Do6yL7Bl0+CW3aJVk58lsevlmy6ePBoc2Z9/XLpFEh+xjFWJUKPBrwedeUIi
UthEI6M4ZTkN7lmGpQ8skcLqkpWuP9RpcD99ltGzSQov7hzmdWnSoMqCXSZz
VApPZ8uUCa6mwXmlXwLurlK49dFyT4YuDfYrNUmZBUnh71dMlq1dR4PhwkNZ
jx5L4Xd7bSt2GdBgo6xWWVCKFH6odfX6WYIGcc06iWuwFL4mE6nuZ0QDMVr2
8uQfUti+J7X6iQkNFv8S85etksLbv5X5ZJnSIPfG0n1nm6SwzpP+VVVm/Ocf
JLrXdUhh+lXxhuEdNJh8xF3p2CuFhfar3pa25OM7oz2j81cK9+jAmqV7aXBu
1amGjQNSuEz+UIuhNQ1uP7VbHsk/T+93DTp0kAZbUwzjLPqkcFxh6DrXIzQQ
rg5xONslhX2fv+24b0uDuwFp5MkWKex4vfh+0nEadMOiiKlaKbz3UNeGgpM0
eH11ctXlcilsoCfc23KaBq3frE45F0phnqJK+Ow5GpDyk/72Z0lhySF9I4oz
jf+99uZ891spPFxsNaB1kQZ+ag6XbZ9I4eqEC1HmrjSQ2SnH2X1fCiPvu5tP
utPglFpP1cdrUvjF0dcjN67SYLtzaqfXWSl8idK6Lc2bBn/kdK+KGkrhQ//m
xn/58vOPDWVHLZPCxj+pz/pv08BZTkmIkJXCKxPXWIgF8fuNa1cpHZbEi/x2
zXCCaaBpM72R9lsST9mdSzAIpcHHxzan+lIkcfPG27v3hdPg5zromg+SxMnj
ODEwhgY9naIqXwwkcVh5/b6EOBoIjiv0t8tKYs/kSeGcpzRIDlwSF9Iggc3s
Vx2aeEmDGBeP1VMuEljbyFx8URIN6Br44VJCAtNYDqnqb2nQeymd91paAnf/
iZO2+0gDWonw130p4vhnSma6ZzoNljmWrj7qL44/BVUdj8ikQfDomTIZO3Hs
YyL35Uc2DeS2irIa6OL4DGflqa48GniMBWfunxHDlnObyUKFNPjRuOunbr0Y
5nz0Ore2lK93z5k3pk/EsPj9KKrlLxoovfnqon5LDA+d/fTtbAUNLqqbxRef
EsNfVQeYT2tp8NhFT61CRwwfeHC4VLqLj3eZ73zjT1HM+CBJP9NLg4IxsQn9
j6K46Vfaye9/abAmNlirKEoUH5dbJOg7yvdHxO6A7fai2DEgf/WCIB0sLG1O
vZoTwateuVw/LEKHe09GL+1rE8H/CtglmeJ0aN2yuaq1UAS7iXjYu8nRQfpB
s8H5UBF887pm5DCDDs1vig5cWiKCjePqOyzYdGjxsevj8r8nxL7e1k7m0SG6
dDnrTD8JB860FZ9eQYfng+yoVykkHH754XzbWjqkDIs961tDwtZhJmZG6+nQ
5rO11INMwvTUkYjHG+lwkhFNshkVxo+HzbUOm9AhLdO1b+GtMH51VvB4pSUd
1L+fV3vOFMZn7yS/07Gig/4FklX9uBDWeH1wLmQ/HaSsA14v+SmE33d9DLew
oUOpoY7bH08hnGV3+nvhOTocgL0OVj8EcZn1b41MfzokNTBl3hMCOMT1ugc1
kA5zl0NvLpISwHvD/yt0vUeHGzk5/y1LWkC1v/1sdcLpsKzLK2Ogch617zB4
8OYZHS7XmaTRNOfQi3M9zVIJdNi8ICV3vGAWnQoM/+/0azpkHYwbVbedRQPf
h/LVUugwUnq12ylqBk0ax0/FfaVDUYH0g6GV08gzM847L5sOVdbd39sappCA
dpRMTx4d7p5p/c4MnUI+Lx9EyBTSYSaFsfDHbAqJqdzjaBfTQWh55u9N4lMo
IOx2olUpHcyOhxvHFU4iWWmfNR6/6GDK2xHLCZpEITe9UFwFHXhnjJ1FrSaR
0pTb1rwqOmyTp+cH8iZR1HmX3921dDiIRpMnxyYQs/PcYZlGOmQ+41qGlUyg
x4ccurRa6FA++uJR2usJpPrbztmqnQ7de66MZAdNoJdbD8+4d9GB08zQXe46
gdTxvltxvXSgFLVJeJ6cQO90LeXy/tLBb0PyvnNHJ9DqN+aR3UN00F4SZtTO
jz/xtvBkRulgvFZSgnx6AulHGb7RmqDD0jZZ2qtrE+irvMFaq2k6vBbNyBV4
NoGM/HSz3efoYIf7jkZVTaD8uVVmcQIMMH2Tw7rJnURbL678kyvMACnZNKVd
tyfRj94lR7tFGUAcOUCp5OO105bdIy3JgMrZ/+IDfadQRRXNRUuGAb0XiufX
9U4h6x3kub3yDGBvipO5pz2N6vPk/NwXM8Dx2evwzSem0dH1kgpxSgw4Ea+y
2sBvGrWmkKJzqQw4rMJ7mx89jeyXLah2Mxgwd0Dzi3r8NOqNnUqWZjNg6KXW
ZTF+7Ege1dPiMcBFMejY9ZhpNHJnIGevGgPaXjXbugZOo0tCPebuyxmQ7UjS
j7o0jSbd2ipj1Rkw8Grmh4s1Xy+DDTa5mgw4/1p/+eU100jAvrq3S5sBkoqB
FwVlppFPfflFaV0GdNPXlDg0TSHx3SXzq9YxQO+4WflY0hS6873Af68BA643
pxn2XZpCspCzyJ1gwGWVsyO++lMo5FNWTKwRA/S/G+4XnuHr41nKuy5TBuxr
nBP1cppELFqSvrQ5A748jPvYs2QSPQl+kbfKggFUIz+dRdV8PVyNrr6ylwHx
55XHLq3m62E0zC7WmgFLy0y9OA3j6N3p4P6cgwx443cx87TPOErbd0tA2o4B
rYFu2Tk/xlC+1vllsY4MUPKqH9MyG0VtHUZuOX4M8M/9YCakM4yM4kqfrrjD
gFmZKvLB4iH02PpASchdBrzc5/ZX6Dj/flzszD0WxgDzK7vDS1YPotp3j38I
P2NA6nHvqWDdfrTutPrEmRcMsF1vFc660Yce8tI5Fa8YIEifv5z9sxdZhf+8
/PwdA+h5c2+3XulB5R7zbJOvDFhysjZBbrYTaa0JMHuTza+X/zFJy74TBQ+Q
L5O/McBzm/zZ5t8daIftf8UdxQzY7lLQfORzOyrafOiSbw0DHu1NMCS9akU5
ChnfC0YZMCiPoxonGhCn2GRUc5IBlyJ29KswG9B1n1+shzMMuMYQjNMzqUcb
J7pdHISY8GVe8+Z0TC3KqKewJOSZ4C0tv0nmeBWihj8zdV7MhP0dD/QtIiuR
m4WmS40SExYrrlW99PMP0s3ZXPiKyQT45ffAekMFep9w6cK2lUy4Pirby6D8
Qgq2go/eazDhQMq1TFWzMuRECyqgaTNBNHBlQ9l0KdIIes7o02OC1T3dfruP
xSho86otuw2YMJeat05Togj1L2Q6ZxJMOCOxcaF7TyF6feF3/p3NTBhMWTn4
riQPSagfHf63lQk7BOkXq8ZzkENHL/3QdiaUfesYnpTLRmrWQs7qe5gw5Gu8
wloqA91SuBv9YB8TenvA8kXqR9ReRM2fPcCE+ljVb8+YKejpBi16iS0/f++9
ni+90Shnh6T3zHEmKAWVTARaeqDWo229yx2YwNZ49+tH0j2CdzMsw9eRCZ6D
jwKabN4RxqGO3I/OTJhKUHUyrP9EHH++JaDtIhOcNGo+D637QjzPn9oPHky4
mFtkY+maR+RVlWc7ejGB8p+4p+HiAqK9O3H5oxt8fNIerHVx/06Qpn3uF/sw
QVpr9/slKcWEqtSRqSk/JuSVJ5j8zCwhjBlrbZfdYcIrYoFxJfYncfw/+e9W
d5kQubwt1DS5jIi3yHn44QETtpfdVe/VLyfybaIFWiP49XtdIu73lhOdzhcd
5KOZoByreXRp4G9C1Ht72cZYJvxSL1TdyK4g1B6o6Z17woS0Mz/MNydUEJvj
F+KinzMhXPUIL5Tzh7D/VC1WlMCEgazcviP3/hC+BSnnJ18z4TudqlA69Id4
UR1QpZbMhOroVfHDJpVEfs8xYm8KHx9y5q7vdyuJzmmDBO9UJrQw91YbF1cS
otJKcu/TmHDDsHutyUwlsZQ5eLk5gwnvL7X7P2JVEaYahY2yX/n1JjfGLl5T
RTgQTzZvyGbC7+OBl202VhH+O92Tz+QxIdHN23eVfhXx0na3UlQBEzYdpHTw
llURhRfUvQqLmPCU9tqmVKyK6PYW6RwvYQJ1rtQnrbqSEA9r3L7kFxN+TLx6
eCCqklj2Iu3j7gr++T6DODXzSsI0LZh5s4oJ/v2rTnj9/UM4FJ669a6WP99s
6ev0q38I/xqjv40N/P6i5q6yZyuIV730vTItTNAV6WwcO1lBFM2MZq1vZ8Ia
v0UVjvg30Stdqnq6iwkX3qpzPpN+E5KshMCHvUwwOXa2c3Z1ObFC8/po/l8+
3rmDgTbbfxHbYP+hsSEmOJb+85PdWUac3qWdxxtlwvMTJmYel0uJ1y7toden
mZDhcX+v+P3vRJHPl5nkOX7/XkblYb/zid6w8GMNAizovCBkvb09l1iZbrpa
X4wFpSzOhbr+DML8OyfaQZIFQs0jUr5zH4iztdNCETIsGLZT39F79xWRNJtU
/m8xC1yOqZ54HHoD/ZDx1edSWPB1xQLn+sNnqJ919OlOGgveXb0353QoBakb
Klx4w2ZBvklitqQ0Rm9uXVI4+R8L7hTs0TZ1LUH9Bodv3lrFAhbujPPTL+Pv
c+N/z1azILpy1xKpxF/otZ3in+Z1LDigJ9h191gF6qXOmiwYsMBMbHxVf9If
tPxX2ycmsKBqdFtScG8lekl8eHhgM7+fBK0HoiY1qHs8SuLKVhbEpm762mRX
i5Ym33SPMGeBGtWNJudah14wLA9VWLKgPp8T0+rdgJ5PDansOMoCnUVvvhyL
bkbt76qDz9qxoFliX1SIWAviOWDBOydYILj0/Mai8y3oaeW9toIzLNA2H3rs
oNOKWoJc93Q6skCx+u76suBWxDY5+o10gQVKdVEhRj2tKO6DRoKhGws+rRza
yLnbhhpPKynbeLBgfukBG+faNsTizvt7ebEg8Z9MbCi3HR2u6ZiKucECA/th
NSf7dhQTXHI604cFukuWlvXGt6P6LR/ravxYUMzuSGptbkf0hRjzyQAWxPjX
+GpROtCBTz5flO6yoCxkSjPRtANFnTurseY+CySW8p4zLnWgWtU9cbsfsADN
Pfm7LaYDUevXy1+IYMFIymTG8JcOZB3KuxEcxYJDBV+Dsms60MNtUiPJj1jQ
4j1lc3iwA1UJ/rMrecwCL+UvYfvmO5DS59rffc9YsFuxv+M/0U5k5ZRjLJnA
gtCI6bFN/Dhs6euPy16z4NfE55m6uQ5U0XhfbcsbFmR8s3wh3d+BFMOvRJx4
x8+3SIfx4WcH2r3dVtznAwsYFq7njiZ0oBDS1itPP7FAdINE0DrnDlSeuaoX
f2bByqv0woYVHUjBRflgUxYLPEuaZHR/taOdKwR+zCEW/D3jOeRk046CW7oM
GLksOGV3/Xd0RRsqe/jzjX4+C2ggHe+i3obkdqax9n/n85d/7+xhp1a0Qyzu
nusPFjz/jcvefmpBd7/6CoT/ZEFNwIDCOqUWVHrJ0Tm1nAWbVJbGFEc0I5n/
rFrL/7DgeOqvptl1zci8fcPu4WoWXDy2QllmuAkFRi/Jk6tnwWF1hdsJsU3o
h6XMGo0mFvR5eLYYX25CUpJj8eatLIggHSB3XWhC27Lrlc50sODWtstvMoKb
UIBbnt/tbhb4NRod+vajCX3XTJpM6GPBtULKqT2LmpF4V+ip/AG+nzIX719v
1oxMYz1q24dZsFZp73XT4Gbkt/eYmfAYC9wVQ19+b25GTy3qD52Y5PvleZ21
tXELytq617FghgUc26iwoQ8tqGpT6bXlCyx4cSrsTLdGKxrZsOX+HSEVkNx6
J/pRaiuS1sNP/4qoQFTHjwZn4za0VHtdqoWECgz8e7m6sKENHVJbWbVYXgWe
7zTR9ebz48p+3n1psQrEbZlXTajn80ljTlcpqYAR+7Z8cVgnKpCVY8YwVUC7
7Xy1O60baU+M2KmuVAHbxQMbdh/sQ9uHz1z01VCBirf+/WdX9yOHvvZb3Voq
8G1AV/SmzF/0qKnyZZKeCqReyKkP+DaAxAszBnQ2q8DGwdj9EYxh1PjwpruJ
rQooTK1Zu+zaKJoKmbmTcFwFDr1bX1HbM4oUgy4+knBQgQ1PycbX94yhrTfs
cYmjCihufuK6c8U4Sj21TdTKUwXk7NvMjjROoJ/Hcinp11SAt9eJ1LZjEvUe
NlhO81aBmpSSsJjsSaRiqWHeeJtfjyoZMfJ2CumbJxyGIBVwjHm9TPy/abRn
M/v802AV8Ooq87N9O40C9BeF2EeowE2a+1jv9xkUr3PnWWGUCnxtGuUm2s8i
rEH6uCJWBb7v9HO4umgO1S67mh/4RAWCziVlp5XPoTHueNXAcxV4uk3opH7S
PJJnnu/Z+VIFzq0VraE/XEArKN3T7xNVQOzb7A7LDQLYRMFWmvxWBdRj5UQb
HgtgG6laput7FYiICohPmRDA7iK7NWs+qoCQMNNxzFgQhy0Uw/rPKgBLuVaM
O4K46N+XYwtIBeoci8BIXAh3/NW9ZJvLn0d8WcQ6QyEs0P3WNzdfBQLKck/s
dhXCa+qfvPIrUYFxXbsjCfVCWF7DYfJtmQokWe2dtJEQxv3XNLZU/1aBj50J
uVhHGD/nZbYvq1WB+sXa5xX8hbHimQqVok4VcJaUn96kSsLTnsJmogJs0M3R
6FtnIoJrpHSzTalsaBBTiaq/LYbzdSK762lsMBJ1/vL7nRhOPTwr58xgw2Pd
aJlV1WI4+G3OkUgVNqxe9Om+1DJxbLrbYrZnCRvU5Y4+eFIsjtOjHNbe0WbD
fuj4eF5ZEr/ILT6iosOGi5eEY08aSuIH/Rq+H9aw4XL5vVDB05LYaeNYRZ0e
G6hpSYf+fJbEy1pvXFAn2DDo1RP2n6UUVpLqiMTAhnMnXr62vyyFSTqm2XuM
+P2uPbSsIFIKN9+Slb9qwoZ6gz+rKhqk8MPl0W9KzNjAu7WnweCANB79tzne
ezu/f2+lV8wr0tji60jMOgs2WIsHKeeES2PR3dsC4y3ZkEWKnbcolcZ2zHHv
g3vYYK5HC1jXLY2/dj3xULBiA+fw0ZedAjL4kufU6av72RAluflpuIYMLtsc
b7f6IBvWexv0PN4kg9UVdh3oOcSGLw0q9lf3yWD/utldcUf4eJ4O3Kx1Wga3
x7/cuteGDQKbj6rleMhgcNpjKGXHhmiJPbNrAmVwtL7AuuxjbKiLfSceGi2D
LX/uW/bfSTZ855rVcNNkcHKkMLvNgQ1/ODMSx3JlsMTxt5TI02wYFdFcnVAq
g49rHJSzOMuGbWsjDMarZTCeFBUTcWTDTITmon2tMpiR+34+4zwbBCXCH5X1
ymC3oCPjTs5s+Od4Dp8akcEV+yQH1FzYkJ2DLJZPyWBN7qeO+ots6NRZK6+0
IIMD+m0bQi6zYVqb80GXJIs7P8n8MXVjg503s+K+uCw2uvH5x/wVNngX2k/8
Jy2LY81O5KV6sOGE/nN/BTlZPE1WyDp9lQ23FTVqjRRk8d7mrA/sa2xw/5Gp
WrhIFr977ZBYeZ0Nx+Md/BIWy2LpS4rPAm+yof+SoHgXP3YgcJSRDxv0BENC
A/lxrsTZkMlbbDh7cNnCI/7zrApKQLIfG2Kqv4pz+PndY3NvHL/NBktNU2s6
v36lw/krtDts8K8puR7C7097Nd25LJANU3FPBAMlZPHduXwH37tseM0K2iIj
Kot7Ci7YGASzwUZKOJkuJIuNQ1jWI/fZkHxxw/WsORn8+FCRxctQNsQGmU2P
Tspg62EOoRjBBgnpyHuGAzI4NbNEt+ghGxyZAY1Hu2WwnO8VjetRbPB7FrFh
BZ+PfNovZv8jPj9zW8SrKmQwt8OT/DSODUo1Nw1zS2Tw1bfLZKyfsOHI/auq
5/NlsI7x9dnc52zwyXVtVObr4ek5zbroRL5/di711gmXwddw0EOzz3z+RRsX
llvI4N4G/GAqgw2n+yrf6G2WwVYz/4ITsthg7/x5zaYNfL3qHrgtjNng5d1q
YblSBlcnqrln5rPhTJnTfhcxGawdgQ6urGBDetrs0VNIGj9KHdlX84cNTMNY
beKTNBYvX7LHr4oNaz7KbhR6I42bpAPN22rZ8Mr4Uh9ESePAm9YbolvY0OKX
EbfCRRpPxN1Zt7WNDdLIxGTcge+3L1/XTLSz4dDH2O47R6TxuklVjd3dbLi/
rFtacKs07jw3zJIaZMNYvZikD00a77qjSv88xAbNBKHbCrLSOOvlPsrJETZo
ey26AoLSOLTti1zuGBtqtvQpne+UwvMCw1LOE3y+d0TonKiWwqdZquIqU2yo
4ES96vkuhWF/gIDHLB+f52e/3EmUwomXv8wum2fDrrXcb4+j+fvnwdBk5QIb
Fl+xn9a+I4X/lloNawtz4Nm3fWeRgxSOMua19kpwoLJ63InMlMIidlaND6U4
cJr76PdbcSnsdO127WYZDjAzZSaS/kniLRmD5U/lOWCwdWXNtwJJPKqZlXuA
woHIJiXrdQ6S+Oj2QSRO5cCrlcEv3u6QxEWnuVmfaPx8ux8cdteRxI/j/VMX
sTigb/BgjcS8BN5O3xtfpMqBA23RxlP+EvhhuwY+qMaB0LitzspnJXD7G/G6
/qUcOHwxnxe7QwJ7Qpa83EoOnN/zqKROQQInneB57tbigK0+Z27RfXE8qTEX
3q7NgS377nVZnxfHxpOVKZd0OHAzrCpjwVwc1wUEdEWs5UCp175hB1FxLPlu
2LJ+AwfWL1a5eNhZDFtdKT53juDAg93HhW22ieGnRvH+88CBvi1ini+4Ynjd
H+uvbGMO8MYlo5rLRLHDNFp+YhsHnPammTRxRXFqbqTxuBkHqo0Lv9aNimCB
IJejfts5YB0qyXr7TQQ/VFka9monB9LPOsg7HhPBBcZ3BQas+PVKfKw33iHh
RbIO9GvWHJiwFf9E2knCR6oMdeUPcOCQaOi2PYtIePzU2BntwxxY1J0fs+ee
MFa7d6jq8jEOf79pr211E8IXrHVHxE5wwKz2RqnVGiH8lSMvE2nPga27Bl6P
/hPEe1NzjTJP8fHv4Wq1uwpin5oVyQvnOfBmKl3kVbgALntK+h7szIFVHoKP
9ewEMONsYxvHhT+fpyODpimAP8zfpxpf5sCmtP98mZELaL7gjM4fVw6cUTE/
TdNfQNvum1jYX+HzrdN00r5hHrXypnz8PTnwpSeWNLtiHmn8LY+jenHg9/3B
VNs/c8j9U1LG62sc8Lh2cPWOm3No0VaboR83OZBlu+qlafssOrJIX+qIDwem
XzU7p0TOotd1i9UGb3FA6cbZn/ssZ5GhY8FBhdscWLz4IsWjdAZNV/dszgvg
wEnt22IlQTModZO0tmsgBwINBRRCLGfQuWQN5oq7HAhrc422Z84gNeou8YZ7
HCgLa1ecHJhGzd4u/+7d58COBxpV4wXTKHIgrNEolAN71/df/ftyGlnuT/8+
9oADWkt3+7Ten0bSebWpL8P5/rh1rPfdjWmUrzEXd/AhBxzLhY4euzSNrkWq
3JGN4kCx/rWT3nyx6JGMLmdHcyB3bdyeXKtpNOJ43PbiIw4EfXwzcW3DNEqq
8TVfGscBkn3+j0r6NDph/Gpt7WMOcD5lvh8ZnkKst8XcoKcc+KXzTNcRT6Fq
6oAMPOfjs5Z3e8FvCoX4yE+NxPPnr9F6unfrFDIb1G6PT+BAwnH2d2mRKfQ1
zzVDKpEDL8lqi16dm0RumlHxX5M4kL/NWvoEfRJpRWUFOyfz/XJkoGj1twn0
/LzgyaoUvv4alSMWyU6gI7U8y4APHPBXqp3yezOOKCabN2z4yIGfe5WK67aO
owDancXP0jmgsKq+x/7KGHL6pogdEQfsRA7XLPnwD61YtTaRk82BmJg6m169
f6gtan94RQ4HLo1RZ2IzRvj3x9iz+vkceLd0plH43TAyoC+jipZwYO5Iwm3h
lAE0fmsb6XMpBxYGdmnuc/qL3g6dHTxTxgFz1ZCVp7X6ETc/5duv3xxYMR5x
A/3sQeLO6y88quXAnq0Pas2edaCcusOHd9ZzQE4/y7XufTvy2HzdVLiRA39j
bGwritrQAP0b61QLB1wu7PR8IN+KKvJ3FOt0c6A88eY/kW8N6K6W86euHg4w
BOZTQjbXoy0xoU+i+jjQJf+6qbmsFmU4V7sKDHKgEH/YYDNfheIYdqo/xvh+
fNSR3/GpHOmvXqlhN8GB7DDZwsLAX6hi6+jayUkOqB0rTVhyqgyJu/qaqc5y
wNtPS/rx6R/I6dfrC55CXJgSTi06opeHJLtdPBeRuKCwp8lLZnsOej5v4PtS
hAtPy4bWw3mMqlf+jKwQ50JilVeKxefPCHz/YXU5LjzZ0b5/l/srVBuTVZQj
z4WcgEJy0e1n6OKHWxXWi7hwq8goTSo+Gr1spnT7kLlgPzJg8PCWGzKaaB6m
UbigHqXd7PzwPFEv83rmnTIX1op73T289A6hsN5AroHOheDswHD3K3FE0i4R
qguTC5MZhaSbTc+IzQ6lXAkVLlRJy7p/LUwgmr0i1OPYXJAQ37MNuyUS7mE2
umu4XPjB2usyOJhMKCYth2IeF1rdt0ieoqQQyTkjW22XcKF7cfIt8ej3ROug
z+GgZVwYvpkTFLjzI+EpuuMkbwUXHEdWK9z1/kQoMSnOn1dy4T/VZ70Cj9KI
d6ub3S3+44JgwQq774/SiW3bXvl0aHBhlaXWz0nfz0S7zYW7Hqu4cKBeMapi
fwbh5br+oYI2F2ZUrI/UUzIJ5bukpwmruSA3zCz7mZNJvH9ekrhhDRe2X/lm
9v5QFmGeGf7xty4XoO2UQnFXFtH56yg6pceFgqHlhY/tvxC0heHysPVcaFSO
2x+27SuRSs6sX7mBC7J7Bgyvf/xK7FD36czeyIU1PRECd1UQ4b1fafqvIRe+
Ze5fiJpBBMupSdhnExeIO+mFsuswke77UoZmwoXbW8sXdrthwvKRM+XdZi4Y
rrNL25iFif4P+pzNplwY0ox8ZCCSTfgWCa+s38qFkTkVauDubILd8kPnghkX
TImMQqOEbGKP7FHT2B1c0JZ4ax5zJIcYUF1mqbOTCxmj0XVN2TmE//rhg0W7
+P3UbcLVy3OJLAfv8+N7uECz+PLzpWgeoZqbEL7jIBdsnYVu3ev9RpSqTz6v
P8QFeuL6mOmT+YRbuOmH00e4ED5WRA3syieKT/X89LXlwomQ2/8M+guIC/Ir
JdBJPp6rrgcXixYR6HCyh+ZFLhyR+K0vc6aUODCZaiMfxIUlq19/cFhTQZDs
RM7H3uXC2R+cQ50hFURy8d6r6sFc+GRY/vnISAUhGDceaRrKBc+y9JTyT3+I
lyZ6v69HcsEotmrGzKKKsHzr3yIbzQXf/QfYLz9VETPKNYMxMVwIFQxRfsOs
Jnb0X5H+HMeFiKGFU0Pd1cRYSKbJcDwX/njuucA4VUvEzkrtuZbAhcAbf9u8
cv7/P4mH7GRe8f0nL056pVxHxKyb81qexIUdGoPrXTLqiM3PtgelveHCX8Gf
DSki9cSgdGy0yVsuVFwpuPrPvJ4wat6YbvueC1Z2SeH9pfVE/9Z7+YMfuLBl
yYlAW4kGIvxDU8XVj3x9xsdv3k00EMBc1SaVxoULyWRSvFMD0eN7fTgync/3
rUjS+kcNRMhQ2cLSDC6IpTSvns5rIAwOcGQ/ZXKBeTCttaCrgejMdWYYf+GC
jMmVoNsijUTwfzkryr9y4dCGC0mqrEbipd5BiZuYCwFHB261azcSaNNol1YO
F/TGq05bGjYSlTuC8ltyuXAq+oad2dZGYmC/Wvz9b/x5aqZqErc1EiInkLdh
ARciybZhFiaNBMPJ2m64kAu/NtBeKaxrJHQ8huFJERfyTy52/7GkkTDzDVDZ
9YPPn8GSb/ulGgm7+7x5gVIuZMWFJ4X0NBDuMVn1735ygbzJ9ocFbiDuJ+zN
tPnFhRuJ5/acutdAvHw/ECn/m+9Xn+0r0qwaCPzFzw1X8PfJ2+/yCkoNRFUh
e59TJX9/yltV7SipJwZ+f17DrubCG6WgYFPPekK0yVKxrIYLlQsFZZXceoLZ
2zdyrY7vj+totBzXETpjPr80G/j+CvrrRLGqI8wFWO+aGvn6fJuw/HprLXFM
Ku3uvWb+fjOKqOg9UUu4K+08R7RyoaNq6bG1zTVECKfHbLCNC/5SFy6b7qoh
8Fq6hEUXF8pDLy3aTakmqo1Su+a7+f2ve17FO1tFDG7fnp/cy4Ug5+AMh7RK
gnX8mrfsAN/vxRV5Olp/iDXnle2+DvJ/73Qu4OvRCsLcPQUch7kg0t/ZmOPz
m/AIbpsrGeWCe2EPO+T9LyIk2rP+6jgXXkhIlT/KLCNevyBn/jfJ3wd6OsPm
rj+J6qwtbkEzXNh9ZFGM+qZiQrcnccRciAcPk5X68mg5xJDhxa5iOR4k6Wx0
SssLRfb/SL++r+BBQ84lxF1UhY68Ni49pM4DNcX7A+2W1cjK1qd48D8evFpP
FmaF1qDNP4XzyVo82Nup/N+XRfVILVEo03YtD0b83L6MBjQjlp1R+qgeD4rr
nt5PUW9BStSbH/30eeBgY/pi/88WJOon+O7NBh54iRqd3K3chjrsBOKnNvFg
g0lHtj/uQPVUeBpowj8/cctvqXMnqii7FqeyhQc/90WJ6y/pQnkbFyJNtvFg
urrzT31kN8oa2xhRbcaDxJOGO9MP9qDUJK8HZ7bzQObi6vhEXi96Tpu/e38n
DxzvBA+oFvWhmF8bAlUteeDENE66mdiPHvhfvZ22mwcGjNsCbQ//okDii++2
vTzYuq1phUjYAPIZn/VusOIBKVlbO+nZIPJ8Y3DDyZoHbaRlZJkTQ+jicU8v
4QM8mFeRtSoSG0Zn6Vke4Qd5YKfxOuf012F0vHzGbflhHkChbXJ8wAg6dHv9
5awjPMiTqb2sY/cP7QEPFwsbHuh8uyJ8c9UoMp/IcGq15QFr1JRl1TeKjJOn
z106xoOlxpE/RR+MIYMT+mfET/DgT3Dzgr/GONJhuDtE2/MgLqbrp8HXcaQa
MGWXfYoH6RlzwZfzJxDDcJ3NnjM8KDBdFsEwmkSKk26Hu87yYInwyQ/BnycR
yX5yn4wTD3RDlfJqYqdQm+GE+f7LPDg/QSrM2jmDaid1t/W78mC2Bv2RzphB
5W8vb7l2hQefhmoWPeDOohzmuGG8Jw/IefZnxodn0dOpUd3hmzy4tmuD+L6g
eWSXMsK+fY8HepKhxn2NAvjszd2z2+7zQKtovEeIIogv7U6tkg7lwbMLDr5P
dghi/7FLd4PD+fhFep0ezRTEIfmVpywf8vHYg9/ZDgvi6Ii1JopRPFj8uO9p
4RIhnLxuaibiEQ8kjwl11gcI4XTJA1X743ig7iq7YnWmEM6uy3hPf8KD5fpx
T//0COGiJPrdhqc84Fl3HQ1XEsYVVz1PxT3nwdMNWUWbDYVxw44GY9sXPJgy
WvMs7ZQw7lTZyOa95IGi84rKdP79bGgodqb9Fb/+XSab+kEYT2UvVL5I5EE+
7dS5+N/CWCjU5r3DGx6sXmXRvXRYGEsfzw5a8ZYHc9lrw+2lSJi8hnuq/x2f
P791BzlcEmaJehsnv+frwdpKS24NCS+ralNxSuWBhOCscu0mEtZ6aTyj9Ynf
777qXdQdJKx/Jb7yXxpf78KXekx3k7DxNtH3Hz/z4GRj6s0vliS8g34yyDWT
r18exz/UjIT39Rc4rPvCg5bbCvUxBiRs82WZ8cxXHjx+WHb2uCoJn757W+UL
5gGTtfHFW0ESvni0d9orh68HVekW3z/C+Ooqs0rI40H3ux2C8i+Esa9gUopQ
Pg84fdJmFzyEcXC5dFBeAQ+a2Fv/7t8vjKOenXPw/c6DSJVfi24TwvjZxdJN
psU8SNuQFvRWXRgnmWiqSJbwYHR2MOSuijD+pBQ8XVzKA0Z07j11ijDGXUN/
gsp4kJvA45QsEsbf03elWJTzwMYk8niLgjAuv/0+UKGCB1EhMbSZxcK4/sBi
h99/eNC8bItLrjKfr5UXN4VV8efZuTpplJ9/cLaCta+GB4GHvz/eu1wYT5as
mVau4/tFkp34SYfPV1z4n9p6Hhy4ZuYwyOdfymniXUwjD1rpYcoNO4WxoqF1
4JFmHlRt1D9rayuMl7ZRN7W28fGkWaFvvsJ4Vao763kHv38YWu8WLYz1b9VN
nejigWtbw8kTKcLYfOmjdz29/H0xK9H3slkYXzjDZg0P8+DFl+5iNT4/ngY3
pt7/48EOXw00dpKEb8m0Vlwc44EtTTQ+8BYJP3z77M7kJA+WyVMEu3NI+Ol1
0smMaR4cTs/ofdhKwom7Thh5zvJjO+mkXiERnMrNZ26c50G0fBf5D08Ef/2n
NrWwwIN7L+uf7DQRwf8Di9ZfOg==
       "]]},
     Annotation[#, "Charting`Private`Tag$6021#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["theta", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"theta vs time\"", TraditionalForm],
  PlotRange->{{0, 10}, {-3.9773081618756647`, 0.9999999999992687}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.697850157475831*^9, 3.697851270464077*^9, 3.697921495268744*^9, 
   3.697921531763867*^9, 3.697929337170497*^9, 3.6979298137165613`*^9, 
   3.697930324860828*^9, 3.697930433095027*^9, 3.6979321995867453`*^9, 
   3.697932586706215*^9, {3.697933826374444*^9, 3.697933855958897*^9}, {
   3.697934209934766*^9, 3.697934222243638*^9}, 3.697934363959917*^9, {
   3.697934417648443*^9, 3.6979344367374573`*^9}, {3.6979345555596447`*^9, 
   3.6979345754609756`*^9}, 3.697934728353796*^9, 3.697977501077284*^9, 
   3.697978267263393*^9, 3.697984020967578*^9, 3.697984226409588*^9, 
   3.6979842903534527`*^9, 3.697984330337638*^9, 3.698022380164196*^9, 
   3.6980836312485237`*^9, 3.69808506258183*^9, 3.698085339554556*^9, 
   3.69808541824393*^9, {3.6981048673229313`*^9, 3.698104974257246*^9}, 
   3.6981054079373693`*^9, {3.698105566055978*^9, 3.698105588048036*^9}, 
   3.698105715867447*^9, 3.698105828143208*^9, 3.698105935640533*^9, 
   3.698110220200163*^9, {3.698110928343644*^9, 3.698110952601609*^9}, 
   3.698111165616309*^9, {3.6981147969286118`*^9, 3.698114822769186*^9}, 
   3.698114874353735*^9, 3.698114938381854*^9, 3.698115410696034*^9, 
   3.698115450381558*^9, 3.6981155053220253`*^9, 3.698172206923271*^9, 
   3.6983531943795147`*^9, 3.698353520751934*^9, 3.698355883068565*^9, 
   3.6983559296334667`*^9, 3.6983573741468782`*^9, 3.6983578020747433`*^9, 
   3.698428998634964*^9, 3.698429198321361*^9, 3.6984395091069717`*^9, 
   3.6984409289715023`*^9, 3.698440995599494*^9, 3.698441048282206*^9, 
   3.6984410826013403`*^9, 3.698494490484939*^9, 3.698494705632111*^9, 
   3.698494923252597*^9, 3.69849496678237*^9, 3.6984950181030493`*^9, 
   3.698495112282899*^9, 3.698495798680171*^9, 3.6985056564368067`*^9, 
   3.698505694311667*^9, 3.6985058403282843`*^9, 3.698505873819537*^9, 
   3.6985077152145853`*^9, 3.698509780105978*^9, 3.698539251496491*^9, 
   3.698539450929879*^9, 3.69853952794595*^9, 3.698539559264242*^9, 
   3.698545395953537*^9, 3.69858461015609*^9, 3.698585729810034*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"phi", "[", "t", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<phi vs time\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "phi"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.697746126496291*^9, 3.697746142165688*^9}, {
  3.697748197674671*^9, 3.697748206642329*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c81e8Xt/e4Lq49LmUTokJ5TkRmya4oqYiQVIqkQqjsiDKyElJmwlc+
V1SyZY/sLXvv3/39dV/nde55zjnvz/t5znkT7W+ZXqeioKAoYaCg+P9voq89
ndK1l5oUXxYouU2ffKtuFTWyEnVCbx6y6Bx6pozt/6zwFxX1QhWyjck//Uwx
tqjiPKYuP3T3iNB2Xss1LJEUKkIr+hwpecyMCz3xwOTmr4XtO4ajBD8Or8gx
H+wvW9LeTmcUyuw8zLdTF4AdyGA8srUdg1puGI2OGYRgLifuua6LvEGyBl7B
RvejsMK2wfQV7QSk2dPZs3chFtu6adS36PgOtTxuqRtvSsCSKfuer+ukIFcP
WcZ05xTsVEPkwbXOVHQyZGL04Jd0bDLudOWKUzpaE1Co3NPNxEKu7dosb79H
GiHm/ukiOVjr9o3oBZEsFHv5R8jNcwWY5y9hxfn8bKS5W9S2+b4I43/VVjer
nYOmX59J9xH8itnLAPWMYy5qjPM55OFajlFtezet+OShOWJOVr0uhrUNWgit
6OSjGj+5JysildiDHObSpc4ClPEksF7ndDVmEDVOt5RciLKm3mdrLP7ABB9U
mi86FSER9X9fPLN+YSTt+wvz219Q1lEt9wKtOoy+d1hyVqQUzWyvqpT6t2Bd
pG/3/k2WottN9AnPnv/BsjPiqmbyy5DuyB7W8KoVO+Nx5vK0djkKMcl0pi5q
x14zlr2ecMQQDd50ZY+rByu6b+Bxh5eEeJvKvnQo9mIJ00f5ln1IKGTlPtWy
UR/m1ox3XNKpRDJTEzb+/v0YPqGGarHzOzJr+aGu6DKEbbMVZ7kfr0ILvlbD
LktD2OjTNJOF5Co0FynWbOA5jBU7+ibNO1UjP8fJOyX3RrB3PTd1bjVWo28U
hTlFCyNYsPH5f3PKP1CLu2ab7I1R7MJhFfW57R9IcXAz089wDNPOIA652v1E
x17VnR4vHsPk+NiDZ6t/IhXDrf16oXGMO2RHwVX6F3pq8cON8sk4trc31f4v
9BcStWX+ee7vODZxu9PHZekXgrhbLeGqE1jzaLX4P8saNOAytRERPIGl1L67
PSPyGxn9t6N8SngSW4n7IjMQ8hu1TKXF0zlMYrqOdSN/Nn8j39UsU4oPk9gb
1aGEnw616EvDUxP80CT2j3rdoqy1Ft1aF3AS45rC0B8W9s9Qh5hYRAwFYAqL
SharSflUh4xTH/r9uzaFjbkdexrDX48i7UJ8XvhNYcdOnFF/HlSPtDgYX8zF
TWEvma8t+6zUo/fPNQcJmVNYf7dXjvuVBlT2TjuELm8KU8oMv36tsQH9CJB9
9oNsB3i+F7bWaETzLJRX7bKnsM5T/3UaZjaigFy7C5MJU5gMZ0sE4m5CasM2
+x7BU9ijoXH9w35NSMtfd4/PdQprzt2hkpxvQvM0ND+2DKYwPGK8xKrQjNAv
b/4jYlOYhkS0etC1ZpS6ZJkxvzSJXWMV4aGMb0ZHkoVcjL9NYmErWcveLc3I
lvqgxv2nk1hJr0rzCn0LStG34X2NJrGh71iOm2YLktWgf9+6PoGpRLZft//Y
gnLYv7aYWE1glx7YafUNtaBXnZxPhvbGsaDLM8KWvH/QitDlf0op41iPPGWX
/rM/qAdeJyZ3jGHU3CFFVf/9Qe8cmhL3nch82CFEnlj6g95WD0m92xjFHtfK
GShdbkVNmSy/d+lHscz8rxIfY1pR87Za7HDwCPYnTov6YH0rMiydZDejHcEO
OFqX86q1ob5UjTdrC0NYLXWAAgVnO7rb8SDHSWIAW5lmY/bWb0dM0nXxe4N/
MaE/byaWH7ejWBHf21pRfZh7cm7yxL929GZ78tFUZzdGONGLb/rZgcz6lPKj
x1sxOOAwr7fbgUx3vsRVGP/BnJgX674f7kTK2WYpdpnNWHk33bPi5E70ZdGc
R9+5FhsnRV5R7OxEj6lmHxPrfmLsmYKa2axd6Nlj5SoqlirM3lN5PdG7C+k2
3MjcOV2Mhdh+a+XJ70JCea46VW0fsS+n9PIiJ7pQi3HtxcTWaIyB85LTM/Nu
hOtkWQmqykbKW5M6+y+6EeHyreiz57+ii0N3xLwqu5EGvo9JYYaEPuc+73VR
6EH4TCdKPct6NI2fDjG40oNuZTuYzhNakKSngaZUdA/qCe/mTlJtQ9e6s+dp
f/Wg2YnRaqWITpR8nDllZLMHdemXIVDuRX3vbppWyvWitMnrPA0yA4iPup76
3eVeFJb930bkzyFk6SD3xSeqF506EWZ79dgoivod4nDhRy/at8cXPV0bR41y
szzHNnpRUMIrFz/qacQcYfybW7YPwWPv11d1ZpHe8ifvZds+RFxst6vQXEAB
lmxyLRF9KNx4Xyjr6yIilbr9/VzVhzQFRkqdqJbRrmBTWMhaHxr999SghLiC
1J8cAmfpv6hFP8ZNVnAVeY6EL562+YuYrrCq7q2vogLdhdSD4X+RwBn6uQNl
a2g+y8Sc+vtfVC6y+feKwzqSY82nHVr5i+g1Q+qC99fRDXeOrxWS/ch77gYq
D9pA6a23byRc6Ef+LT/m4yk20dCRP3zeof2o7SD+tMPNTST8VrnOitSPVr5M
O+F+b6ILu1E+qsv9KFZvMNyKfwu9tluW55QYQKtmNSUNl7dQa5XZwIL1ALK2
/yw58mYL4SSLIhpfDiACf3PcbM0WMnrBpZVTMYDyu+J75Ge3UPDs3eXniwOo
XezpiTa6bWSf6fznMH4QxVKIStMQthFFD//HVNlBxAHj7J382+gdc50/h84g
8hWMGr/EvY00Tzy0eXJpEBnFPlHPpN1GfW6yqvP3B9GZ3viN/2a2kHdyL+ul
yEG0ldezkPxrC/H+eTlenz2IUtquCdmS6yumPo5pVA+iKvNr+Wt2W8hc9V9s
9t9BpPlQevGu8BZackhw51sfRNmTP1oHWzZRZJyRfjBuCB2s0XfVebiJFGt3
iOvSQ+jcprxoHv8matzO2bquPYTEcpKjFfM2kIu8bWubzRDiNGW826WxgZgu
s+Zoew4hquPXJ8q+raPMiG8BBeFDiF9/omNGdR3pfne1JWYNoeCmvUnf9DXk
f7CRbb93CBWoKI/irq8iMSvfCdfVIVRWZr4r9XUFkYIVSH1swyjpaPKLlv1l
tDMTdrvs5DDqSxxVyLm7hN4KIQPpi8PI9uBrh4zkRXTs7LxY3N1hVKW3MVLy
fQHdKzjbdu/DMEoZGbe3b5pFXKP7OaOkYbQZtZKy/mcGFXDnPTPrGUa8otx3
xCqmkMlpu0vfl4eR87DOnfCwCTT3AHdUiXUEVRTJMYmcHEMh2ST2ZIkRxHKt
tuVNyzCS6XOfZIMR1MwR4gPqg6iGlVj56PwISlvO6Dk93oMcUcubfx4jiIst
/rntcBuiSF0r6305go7FVHQrd9ejOBrBvtr0EdSRwK5wlPYbUnQ8uVv6bQQF
5iimW68EYzW/HYSzOkYQ2PFoeVpWYXZyIShufgRdw3vuLo38wTbC8u2CGEbR
0aRFx6U3vVjEYsdTT+Io0npb3H+1cAiTMt9Jva4+iqgKJPX05MYwUjGx2txs
FOnVVd90MZ7ErPlOj2m7jCIz1Rvb69IzWHB/pKRY0ihSZaEy4Dy4gIme/KrH
8XUUJamM7ZeeXcRK0vqcKJpHkVpuxyrJeQmbvCGZ0085hlppfPApXivYkzqj
hgb+MfTIKOrnMfdVjFfBY6788Bha6vvZNG6zhuktlyvGXx9DnFnP7x8V2MAG
LYbPvfAdQ4Ir4qztsxvYgxL6O16xY+jMQ+azYSWbWNYj0y9Wv8fQquQdKTi6
jWkN3u/QHR5DE1J+M8Ez21iPVuK66vYYqvEIf/UqbgdjYphU45IfRxOyefXE
v7tYqjPrRWrdcdT9yUYx7+4ept6g7LN0aRwdflOA46Pdx5yjHlU0R4yjaqSh
cYSBgkS1mjqAZY2jD1IOXzJ0KEhvrWoocr+PIzGsIfvhYwqSctksMal3HP1i
2eAu/EJBqhXk1A5dGUe3C4zeGE5SkOwfH7vmwzqB6E4W5J3ioSRtDdk+uylB
5tHJ1PYkLUpS1Cn/jAtoAn2ePP76ojMlSfZD5i996wnExX8x+VEYJamasXHy
2O0J9HpFq5Ihl5Jk47LMKPViAqH8tR7KekrSSiOvLE/aBLpgK9rsNkZJClHS
NKIrn0Cv+J47Wm5Tkg5EX3VdbZtA9x2kpUisVKTyteCw0dkJ5LBUo1AkSEUy
P/85t5VuEhXmCO+pS1GR/v3X2vxdZBJFqIgb2CpSkQKENxfzj00iTj5bTFyV
iiT4VJgz5dwk2nY0+fn6CBWpaERbJcJ5EgVo5WhXqFCRjHSdLB77T6JvzIIW
KYeoSKOZYZ5uCZPIXFqYSVeSiuTDXBRr+2USuWS/4c0XoCJxuXWXGDVOIiY5
tpAxFirSp+a9bo2JSeTOMe06ukVJ0j18YFuGYgrltS9eyyH31x+jL8jPN4Wk
TY/oqzVQkjw33E4wKk8hbn/hLP98ShLbxehLGwZTiDNhV/1JFCUp41vp44mr
U2jOVVlVxJ2SpCk6kNzhM4WejJg8MzSgJHX40Xz/ETOFgqLt+qZEKUluY9Ij
RZ+n0G06bf/OZQrS4KVuhsrfU0jfP4w7uoKCZNYVrNAwOoVaYu+HPg6gIP08
d8y8e38K3anKfnSSzI9jdRNeY/zTiMdI/rozBQXp46nYd4uq00iG74Zwr/M+
Jlyh+2PXZBqxJVTxKv/awyKOrk0zukyjfmWzPQLXHkad/x5HCJpGSpvM8WfP
7mKeMhZHxFKn0dyZUA285w42mUZjo/BtGlkrPBjYC9jGLgoVPVXvmkbpKfed
bR5sYY2vr37QXZ5G17vN03mNNzHAcTaYss0gLmmB7ivUG1jh8+9Ll6RnkLL8
0x81qWuYBLUH781TM+jVt+D6GI1VLM6HqHn/8gzaTW4V7BxYxio5+d6o4WaR
X6SHMtOJbkwltKZCR3YWvRL+/p41uwPLoHswek6XPPcnzQnzAm1YyGbHIWef
WXS93hq3z9aIWQ5E/3w7OYt65c+5vtMrxGqsT/3LoJ5DrG95bMfrUjCNP8sc
hcJzyC60lefTJy8k+sPUts58Dn2ZtKdYYf+KprNxK9ukORRJwyJAKdaCbA6Q
+Bj65tDHp29vYhJtqCnxFuJan0MPDd0tFk92IvL0fSEnP48KwjeWU3/8RZJM
vnnH9OaRxMVre9ibQfTWX77j1NV5dMz/xAF0ZRg99gwh2r6ZR8ju6o3PkuNo
aV7jtFPRPFJsYXxzQnoSXXOacbnXNI+KCWaNxjCNDioc7PtJtYCOvmz2Gf08
h5iIAZIDxxZQMTZMHyi6gmqORx7y1VlA6TxNY9VoFQVaJx0VMl1ArV1S13at
1xBVRMnpizcXUNOc1Z/2WxuI9PHH2a37C4jetds2yXkT+f76Y/UmYAEVutpv
xp7fQlt7/xw7ExfQ5NfcgkmuHVTCv3XLM3sBaRZe/3h2eAd5HqF/wP11AZ2P
Kfld934XLbkSg82aF9CB35KjCxz7KO+5QsRS3wK6pPnFgLJ8H7m914iLnFpA
dVfDPngeooCZPovMJqpF1Ox1JqC5hgKyN+zz3NgX0VF6ftcjHJRwg8u9hFVw
EWmtXqBjt6KEUcMXNYaqi8ic5tar/l5K6CurmPzluIhoj/wdv91IBW876hYc
7i6iWwE1z9jpqcF6qWuD9ukiSiknielrUkOb9DLDqbeLiJ7z+KX5TGqoj5OU
JtUvoo0W6sNat2ngRZGK0uXuRdT4JiCRMYUG9JpPqu2NkeOnsxlommmgmt5G
//j+IlK/yCNZI0sL5Z4RTiVKS8joch7bSC8tfDLfzMp7vYQuCI9u3JOkhzBc
nUyK3TLyM9a+6feBEUqPCn0547aMSMcsPvO1McLopVto5+Ey0lx0eoOjZAKN
T5zmVrHLyOKyOuVpGyaY1Ld5xNq4jAJqnyxQ8zED1+3P9P/1LiOqMbzXD31m
QHEUUTemlpFRTn8YesgMr8fTM6poVpDa0XWv8EFm0PafbfLSWEFn+SNxPMUs
4JaNLkjqr6AnT3CtnHMs8LYlcrTNcgX99zfkjoYkKyyIHNk85LGC2A1jaMwS
WSGp3FdsPHMFrfk6Gwy/ZYPfI805r4pXENNAhI17PxusMIkfPVm9gjgHEz8N
ibOD4flfhgkDKyjA6vXQehE7bKyy3zMlrKLzheHuNt44EBey398XX0WO/HEc
bBk4OHOq6PknpVV07a3ry6BWHLyPsk5iMF5F0o9E/8WrcEBzabZU8YVVJGLG
ebzwBgfsDO4UXL2xiubRe83wdxxgeijlV4X/KroqzrQkyoMHX8vlcy6Rq6js
0BxTlTUesh7p9PG9W0UNp67c2UjCA0X91MLdslXUaJgnFafOCbLLGg/FalbR
nxqLN8XhnGDJH0bb3L6KDBxDLKQnOeHTDWV+2cVV5Ptt5/f+Gy7oCg9I79pb
RRmh3/xN5rmA5muHQiDLGhqucXHoBG64QPtQe0hyDTH/161g2MUNgXINDWGq
a0g84+d8pTAB8s1ErI9rryGKlHhTeXsCMKRWucReWkO1Q+HOIkMEOPybe/2U
yxryyNWqkhDigUsLjk+XvMj3NkYu8YAVD3zRZHltHLOGMptj7oX/4AH7XnOM
un4NzR3hT7UO4wWm+CHX291raPbbuf6K/3ih4IKb4MA42W/ZSPNugheoe4K8
yijXkQ8DNXupOh/kvOGSkmJfRxvfP0ePXOED8/MpHTGC60jsn8a8UxAfpHeV
Hb59dB2ppX59cqGBD4ziTg/3n1pHHr9zHLJn+WDFqi3CyHQdyRLHF4gs/JDA
cwWVXV5Hep6HbhZI8YNO5+yspOs64pLy+WOkzQ9zr70TYrzJOqklaHXoIj+8
tqQ3pA5eR5FZ30PsPfhBkxC96R6zjq6V+Othgfww3i6a2Z+6js59h7bJOH4I
i/lkaZS3jk62pTQ0ZfLDEQt12v/v9XkB7p+uFfNDP9evQsm6dUR/HZcSW8kP
QW1m9jFd62ioUcPUupYfFKMHcdTj6+jZusObmGZ+6DJzxdyX15GAnAnviTZ+
eMK55dpPsYGoCym/qrfzg1RroKAR2wbauyq/fb+VH5qjOOtKBTYQTyVJtbeR
Hx6YJntJSm+gJb5WF91f/CCKl5eKObKBxh4n7cSU88PvltIOqlMb6MX64Zqk
z/zgEan7zP3cBtJwXWyRTeQH/nOth/svbaBcdsbtrSB++I6zGzZ02UDOzibB
JW784Nz8L6LUawP98/3UtWHCD/gILyRJ1pGd+pdvH1Lgh7KzdHPR0RvIfyxa
MZWWH+zZXyVQpW6guXQ/O6sOPmBuEjF0z91A05/pOPeT+KAoLGfzb/kGcqPR
XB2y5QObM2qZhrUb6O2NyS5GDj6gYftpWdq5gfSjxE5e/soLOQ2mtJJjG0jt
YmnwohkvmIcOFEYvbaD5qTyVxws8sGPkYk9F1rEl2/py+FgeSGfZxLmzbqLy
LiTLYcgDxvXPsL9knZZvRel2h5kH1l7i3QylyLq2IztIpYMASYbvBEtVN5FR
9M/V0CwC6DLL1UlobyJGGXh8MIAAc7UlXtEmmyh6UjV6+xoBXr/QkaK6tIm4
g9MumBkSQNPgT8ctsm4+elC74N0RAowzXn7298Emsmtbzr4nQYDw3zOHDQM3
keoRbU5/fgIce/5guOTVJuIfqe4OwhNgUI82UiJlEylQ/rY6x0aAYIYoFP15
E30KDpwqZiWAYo3wHGX5Jnod3ekSiyNAV9DHhFtkXR6brHm1k0CAJ6ePGf7t
2EQ0zSEvLosSQIr+x6bB6CZqOmHQKCBPgOaf5zJLFjcRG1Q92jpOgAeB/ZYS
+5torVe4dOYsAUR1b9JGs2whv15BlqHrBKih3SikJOt837IDig2+BLj9I8D+
luQWOl14dTHtLQGER3Xp1g5vIYnkx4vKXwlQR8WY7QNb6I2KQpcaGc8HxDpj
auMtpMSHfclfJ8BBCF18Tp7jthXK29ECPPDn0tkYnMMWWmgQax04yQOPH3Go
xXpsIQbx6qgIZx7oLot5kv5yC9UXnLoiW8UDgd1WB2TjthA3pXSk2DIPHN7g
q8lP30Jexzvr4g/yQqhqEjv2bQsZ/Hpa7xbFC+rmdoU6tVvISN3iAUsDL0x4
iFnVd5B1/d++uhImPjiZl5HUPb+F0uOmma9H8MFc4w0tux1yfYmm0srdfBA/
KzM+zrCN0hdRWoEEP+ixzD535d5Gm83qjm+9+GFVJld+hbiNKKQjbxX+4YdU
/dst3grbaHlj1TpHWQDO3jh8j1JjGxlb/HsV9kYAst5/LWcz30Yhj4p7zt4R
BMtqL7sYu23k36vcfu6vIFCPaNAIum6jQ2vlVq4gBHmUex9SvbbRnlLS1Kd4
IbAVJRlKB5LzC9LSh84LARPym8+N2kZf/t67u3VcGL7annp15N02Cjv1yn4i
QBg44mt6tEu2UeEF0b+m9CJQUfrCt7Z6G5m/vxu0pyUCN7uMxM61bCNln9Ky
8Ici8IO7xenS9DYyuPsmK2NUBDxUXrGOrW2jrIrhC21MoiBiZpF/k3oHefHH
fTotJgpeEd0bDwR3UHfTlyvGZ0RBIjc+YV9qB0U96gjesReF1gZbCFTdQWYs
M++7PEVBnnk46NWZHbT38tG8RoIoDD2bJnx+soP4V5CFS78ohKXnlKmE7qB2
D/M0o1lR0Khyu/TfG7Lf6+b8821RiKFYfl9TsIM6liprpQhE0BL5on8W20He
XF+vRIgRYf7E/dn2uh00wW8rckWBCPoPt1VGRndQY/K963qniLD25luX0+IO
oq06M3D1DBHSSh77LOzuoFAZJrclKyKYdJ4Uvc+0i3yFKG6s2RFhd5W6epew
i+ozNAQ9nIiQzfXTMUB8FykcLm5zvE0Eq8PBzMyKu6in+W9n9wMi5LuzmPHq
7yK9RpU6jUAi1L/l9PpkuYviCy4qfQwhwng1/zuta7vIk2Uz+EUUESjmiT86
b++ilQCnD32xRODnk55xebyL9iX+XUxPIIKKtiIHVeguunq2wXU0mQhnXY8e
jX27i2KkPN6+SyeCc6ymrVzmLprhEn3V9YEIAZU6/pVfdhEfytyKzCZC0oxR
lmXVLiot2LVvzCFCCbd500zzLnqummsQ8ZkIf9DF1Sf9u8iG6wZ/Ty4RZp3s
BQj/dtEqo6nY5zwiMEQ7nfy4uYtYZ57FsuUTQazC3RHo99C3Vw6Ru2T/8cn7
oe1ce2hocZPuEdm2xD8udBbbQ4m0R+rDyOe5Hw/s3j+0h0ZUVMNVyPleOITu
R5/YQ7hqm/Zb5HrSI6IPyhjuIaMi842T5HqxsnhDzHoPnTwzIJZD7qdnNPW2
ucMeen/qlnEuud8VtuzYqTt7aE7zobpRChHY1PK/+T7dQ+Nltz38E4kgdbVk
hDN8D0UcMUIWb8j8CMUYsxL20KOb4R8qo4lg8/XnIc3sPRSVW3CjJpwInkMN
Fq1f91Dr3+qFGy+IEMnc/vDGjz0U+kbaKjWACDmqfSm7f/aQqiqY3/Elws/L
I7+iBvdQu0Ll0Z77RNgqXOT8tr2HQkJaku3I/ODq31AzZdxHLl/eGHlfIYIC
A4XdBGEfWcjaMgmfJ8JVG7YcDuV9dFjOq3RBlwi+gdx/MtA+4lqhY+Q6QYS4
PMENDeN9VKAoNp2lTOYPjewphxv7iOUb/w6jIJk/CsrO2/f2UefLR1MV7GT+
nFeLiPDfR9KN9wP+oyLzxx+KD0buo7IjtvULK6Kg+ul0X1nSPnINf1NpPC5K
5vcZKpOcfaSs89IF6xAFZ0pLqbHSffRbN1FG6acoJFlcu8veTq73xF4OliIK
JY9vvk0f3kdCOfstxaHk+5zlQVJb2Ec7lf2Bzg9EgeYx0BXQUsDwE+2Rowai
cKz1jGmfKAX821NVV6oTgZSHN6cVrSjAIsedQ9laGBRJjBtBthRgKqi4sKQo
DCSaTNqBqxQgB+kSukzCMBg6KhrqTgEuJuKlJhVCIJxsazX1nALcvBhHdqWF
4G312eqUcgpIjWU1daMWBBnGuZaN7xRwyG2Gf/GvAJQahwyc/U32S11mky8R
gK6Omq3ddgogSvi1frwpAISpk0oX5imgVHWR9ncDP0SxqiThxShB6wIuI9WT
D8RM/3x0kqIEXQbJk956fJD/2r2UpEAJ1ze3jb34+KBZ5FObmwYl3Gy8ePd3
CS+wKUsw15lTgnrmLNWPGR54Ycn7wD+IEoZ7nOdSyfs1f3zxs55QcjwDX6TZ
IDdkDZi/Uoomx8//MT6Qwg01NyI/DyRTgqPnE+9wUW6ge8g0plFGCaE3F1ti
+LnA793OuZV/lHCFaX5HThwPJoolt2WXKYHPdiVwY4oDhCvvRNpvUoKawmT+
QD4HlA1PNzfTUgGXYcZI6ykOWDrYffaTMBX0XTQuU7mHA/ucL8YOJlTwJv/z
1ek2VlA8cds10ZIKjDrbfKI9WGGvQS60zYYKvKvnJrrZWeHtfFq9lhMVxIlt
tjXrscAf5ShDET8q4GGtmnUrYIKTpW76XYVke+aDwqotPbAZyDixl1EBe/yi
YdY8HfT1jAXrkqggOsvDL/IJHTzYsakpqqcCerqbezTJtJCHDE9HjlHBwNyv
2svt1ODbTOdYM0MFNzf3nd/ZUYPRle+B+4tUEEopu702TQWTfmo/Xfeo4BPr
d5+CHUoQ/SmpY8BDDbL36i4OcFDAnOXItadC1FD+0F9iRGIflU8kBZSIU4OG
QcqQhcQesmYkVEsoUgPuiezGAd4dJPG2ZcT2CDWkYNYGwLiNVmRCqWOOU0Oy
ndYq/8omijCi0abWJ8fnCrb8LlhHl/5i9upnqUG4mv15s/8aknN76HfbghrS
6AgVtXqraGvvSGrmRWqwyxVTF99fRjXhS5UDV6hhdcta0yltCb0W/TxEuEEN
U8KMWhOKi+havhPlGTdq6PrvBe/qyXmkrHWQ+OwuNaC7WdsCbTOIonUQyr2p
IQOuPS7YmUABUxUp3k+poUAs+PBR5RHESJFIpRZMDcGHhNuobvWiMMLDq+th
1KAkOxBWJtKM8PLnq7/EUMO0HsN6dOhXFKt99ODdBHL/pG21m9yZmOAF7kDl
NGqYg7LT6eU/sGT35fGFLGpgTnv/IXujBTsY1HI6N48a9no+PT4b0IVlJ+Zm
un6lhnsmk/wiaf2YQlEoo1wFNdRSvJcQOjKMHRvSr8usowY+hiH6zoQJzEDj
+5nUcWroNbtCqMlewBrPJefazVKDYOCZnfy6Rczshi9OZIUaEvnyaIZGlzCb
GPU/8ZQ05LnPrjtDsYoNfuQ9fIGBBlbVP0WMUa9h17+vveJlp4HJ03VbLvtr
mNt8gUWMIA2cCuDeuz6wgS3RRhabidPA9K/mhHNVm9h9wVs8eBkaaGVivFKd
tIU90ZftDjtKAy5zr1N/qO9gtHaM6saaNNB25SAWsrWDvfCceMusQwNu666t
5/J2sVdpaTbBpjTQcFLdwXxnD+Mte/pN9zwNVNv9thmK3McSmi8L09qR60uc
7adnoyARJ048rnIgn2eTFWJiTEHK2BUYfOpKA8tq3/gLAilIMlxbAHdpoG7i
vz3+MgpSrkxXyp43DVikndp6MkFBUjlZTPXtKQ1YO/AQhtgoSSVW0VcfBtOA
PdsdO6RISTru5lGtFk4DRobJdzIMKUmVASYHN2Jo4JkCb73EFUqSbrxCYHEC
Dby/wrXe7k5Jqs1nmbibRgM5QulpDd6UpDM106cPZ5PziTMmyTymJLX212Qu
5tFA1/GeSmZfSpL1agZj3lcacE1SnIi4T0nqY37m7FZBA2ZeLK3dNylJdmJX
6+R+0EDM5ffytBcpSWPHTsrN1NGA15nPTw7pUJKcz4qEZv2hge3x7OMeMpSk
ueu7s47dNMCdcf37MBMl6Y5P7xmJQRpgfqpxM3KcgrQRVZo7Ok4DAcUfgoK/
UZB8smJxabM0UHLbQ78unIJESbp3+8oKDZTjil6a21KQAjvM/ohs0wBF1tZV
bgkKEtOs0uF+SlpgtvP6Od66j4VT46ITGGjBrj7gR8i5fYyLf27lAjsttCnU
WX2s3sPiFOst+Ai0kGM1diVTbg8TOp1d3ClIC5tSg33FwbuYxF2HB+YytNDU
bvjcm3cHk1cfMHunSAtDxEwuR6ttTIXC+tD0EVqgvLA+cTJwC9P42cykeoIW
NONk82+nbmJaIfrjj7Vp4X42d7hX5gamb/q9slafFqZHs3PjX61jJrwaidwm
tFCl9PjzZds1zKq/8IGdJS30HBryUt5dwS6ly5l/tKGF62zvnp52WsauO78/
tGZPC0HpPBHtCYuYi6Iw80knWvh3IAB//9w8dmft9fjLW7QwQ8r/rXlnBvMu
Z//ecY8W1s8XNshNTWBP/YITiT60cD46OLvl+ygWrEfp5eJHC9HuLpTXloaw
cDZv86/BtMCwZZ1OWd+PvW5bOkQVTgusd/MOpwr1YIlvbzIbx9DCa7WbTbJV
7Vi63eh4bDwtZNikcFV/bMEK/rUnymfSwkTiU8Uy2WqskaaU+XwlLdCjoqyF
MzmovVZpIu0XLUgq95TQr5Whvojs73MNtLA9+3T39K8qNC2Y4BXQQwuxzvqP
h/DNiFb18UTuMi1UE3Yk/53sQyzb69+3NmkhoE/vImYygPCV7kk6FHTwT6Pg
aZDyEBI1trfoZaGDz/sMQjfMRtHx6zpVdBJ0oKCX08U/OY20ZSuSzsnRgVpO
Wg0+4x8yWDzinaBMB8qBO+9b3OeQ9SMpJWVEB0kNI+3X+RbR3Rjmd7bWdCB6
dvSKyulV9PBigHfmJTqonbt2N855DfkRdy2Wr9GBaeTF3/jX6yji0xzL89t0
8FF9QPfaNlmH33GcbL1PB2a1g0bSZB2YpDZYJexLB0yTcT1fL+6gnB8t3kUv
6ODoOvipvd1DhS8NLPcj6OC0XVOdxgfy3nauSskglg7CrnTTvTKjgJq/RZMD
aXRQlsd9NhwooSlNvlommw7EMlVJ9p8pocMp4929PDqgT9V/yc1DBaOrsZbM
3+gg+ty5MvZeKkg9efjO3yo6eDnf/7tNkxouhzaG59bSwTNLt+3SJGroOUD7
26yLDpQuWXsnm9NAi5mHRsIyHSwfEdO5nUoLFflGovIy9LD89KGuyiY9+OxO
HN9XpAfqr4kxGcAAavr+51uO0sPNP4dn/gtigKLB0qh7OvQQzrL4VJWbEbLZ
JWkr7OghllhAwajIBLGulNNnYumBsetjb743C5iXJtARk+jh73vZcfEaFsDT
HhNfTqeHC/c8c1cJrBCW4GYTW0AP1jofYjxKWcFoktHLqZQeTg+NvXrOygaM
Ku9jNEj0cPueU2nPVTYIqOttHGigB6suHdx1XnbQ4rk/k99GD7IXZgts7rPD
vj2eIaCXHsLKBFjwPezgvaV3UmqKHrxMWcxDLHFwTHfUdmueHlpO8Vy8F46D
1cjH3vVr9PBsI427ug4H7tLFhe40DIAJmlbOmXCAwr1zzVrMDHDgv7d36eM5
yPfw3z8uPAM0DI18+TjNAQ7W4hKlIgxwVdTKaSkWDwfSK7ReSjCAb3g70XER
D8Pz5y/byjOArkp7ooA+J9gGRcRRajAAFxP9f0qznMDfKvul9SQ5fi65hk6N
C7qEf7W812MAvGZB7aGnXGBevMtkYMkA5aeNrrxg4AaDMedHUbcZ4HOamJXI
PjfoPhLPOfWAAcZFQ408jxFAi7uvZ82XAUpW/K6suRNAXcf42MUQBpirfILR
DxJA5v2hZfEPDNDkpmzqW8oDzNdXbnzpY4C1jCvpvY58wLCbE+s4wgAeuSa9
1Yl8QBNz/SffNANUGx0VLmzlg53qDnHfdQYwk+HD+SF+8jtV2q+LZwS4KOwd
yy0Ak+W3WTd5GeHzeiuto4EAjJrLHP8owgiFkYZmlb4C0BcQ/4ZdnhGSLhRF
Zo0JQP3oI/Ou04xwIkAirC9TEGp8jvi/OMMI5wxsILtDEKq55vOPWzCCdjfB
e4dKCMpP2bGn2DPCz9ysewmWQlDSx6tp5sQIidIc7GmPhKDobosLrTsj4A2a
W5NThSAnXavW6REjZJz7u0Q7LgSZx7c3BAIYQW+mv0SVRhjS2wolG18wwt40
x/E5EWFIdnGxfBLJCG14eCegJgwJNAefKccxwh97/vRPZ4UhLuFv4WgSI+ia
UzfFXhWGaJXXw6/fM4LFV3fPlrvCEFF/hkM/hxEqH7WVW/gLQ+g1etguYAT+
9Oy74uHC8GIHc/tUSsZDfmzueJwwBEY/SLxMYgSN6IqiD0nC4CenVM/xixE8
WaUOuaQKg2/11FZVAxkfkwjNmDRh8LZJlfZsY4R3Gfw/D5H9nisXrKV6GeHU
oyIFA3K8RwhnUM8QIzw43ji6HCsMbgfqv4RMMoLXcbaO4+T8zuUBo5rzjBAy
Y7ygEiAMDuYnOBdXGcH66ov3M57CYP9v9WTaDhm/Q673bjkKw6WAz+4W1EzQ
xCv0qMFCGC4IOr6jZ2KCl6leLBxawmBZJNJYimMCRY5IpC0nDKZGXTs3eZig
i+9GnDOXMJwZjZAVFmaCc7Z6r19sCUG97GibzQEm4ClTYo4ZFALDO0d942WY
wNr5c2tXtRDUlr2Q7CG/I6GcEk/PfhACPar+Zt6jTJC4cu77XJAQ/NRX8rY6
wQRKfdjPDw5CoBMZIP5amwnYFt/fd9AWAi1RWU9OEyaY5Omo8l8TBJKjr4ip
JROQ3spTxtQLAsptqYmwYYJyLsVllmRBqFg74NFkzwRHczqE37sLwnHNBwJs
TkzATSM6RaUpCGXP6qqNbjFB/pmAe3n0gnCsQdjt5T0mON/RNsPRIADFXB48
tQ+Z4O0ZimbzUAFQtflBYvBjgg9FFucsTgtAURqv8+lgJtiFP5c8NvlBeeYm
Z2AYE2gFe5jrpPBDnjJWXh3NBKyUrXlHNfhBwRvvQB3PBJqFCXoW3/kgp/I6
u1YKE/xW63TVOMwHsoylJU8+MIE7e1VcZBwvZJuw2GOfmMAN/zBslIkXpOIu
M+8VMsEDzyMvM17xQMZAQdHxMiZ4v8GgQzjEAwcl6S49JDHB/sJ4om4XAdLd
ztOX/WSCHqMMUv5LAogV5+Rt1DPBRIWfy64uAZJ3988fbWWCmdlc1kgGAojo
mFF7djPBr+9lfWeauEGwbdNieYwJ4l2FlE87ccNbAeN9pX/k76N/dMNTgxv4
riZnui8xwU4475tkHDfEZS+fy91gAhm/R5efTHIBYUl3e3aPnC/o6/eh71wQ
rfY2XY6WGX449jAmvOMCzqezxjeZmeHKF6uhcF8uwOGikyd5mAHHjb7VaXFB
mNWEvqQwM3l+Nhxbk+QC1nfqy9cPMIOTw72rQuxcEDIempAuwwyPJV7ePrHB
CUwKQzojiszQ82d40mKEE4LvqcwTjzKDbf6mnFMzJ9B9C4qzO8EMzSn9PD4Y
JwTQ9J58p80Mhamdb2PyOIHaSGHmrz4z6NBP2FekcYLfq6fRgibMsHjyvC/F
G06g6G07cdGSGV4Jnqd0jOAEXzGpiTc2zHB05mzm7nNO2HF6GNFlzwxpu3H3
m59xgnd+oxqPEzOwfymxnvHnhM0N4ojFLWYQW2MsPh/ACQ/gXkj0PWaQ/GhG
kAjihLWgGtXWh8wwImVQdj6EE+42CQxw+DFDWLuF5s4rTlgm3Ao2CWaGpjYp
bc4kTvC49F0pPIwZQt8WiqRmc8LCe+7ehmhmqBofSMoq5QS32RsBLPHMIH1d
sE6yjhNmVcrlDVOYgWLA+DfPACe4+LB3Pv/ADHW7UtW3Vzlhusr+Sc0nZmCq
95qUYeMCkcgu57AiZghkze58I0ueV5fOWJj/xwzZHH88PxlyQcWGmsxgDTMU
/ZaJv/iKC5Z/5HJlNJHxbXIpLCvjAqlXB/dvdpD7f1jwTG+UC6LkOdrWR5hB
xDxQ+MoJbvi1FVjxbZoZVm4R7qS4cMPOr51M/0VmeDIYX+KTyA0O9pOP2PeZ
gXfIPciNmgAasZikJD8LXAWio2sfAdyvqeJnRcn2F2lCIRf5Pih93CmQZIGf
B9/0vjLmAVz96xZNVRbYCPxQ107igVEKt4eWJixQoHbyW+dHXghxFmx6FsgC
Nbdf+I1G8UPl0ahSw1AWyH+ih67+4Yc1GoZ0jmgWuP7wTkcfXgDs3i0/SExh
gZxuptWYWAGIcXG6ejWTBSi5s85f6hOAWrUBY+lcFvhDrE9TExcElbZasS/l
LHBhR9+VrVQQnFKA9WEVCwSiKH4dRiFIciteh1oWqDhh+wN3SQgYGFPr6ztZ
gPmk9tFpXmE40cHzNaqfBY6qfSHUPSa//2mhKdZjLPCqYdRUY0YY/p7w8hxd
YoErNST+jxUigGeet8veZIGP0pV/H7GLgl7XNUN3ClZID/+VVKUhCo/e96ge
oWeFD1Ptev7XRKHAw0R0h5UVXkuWTZ16IQoT6CfTdy5WOLAjW/D8kygIsh5f
DRJgBTkWXqOKRlEI/CBZyynNCl9oFlV1WIjw393Eou5DrDCV5jJKkCbCwknO
d++OsMK85sP5v6eIcKFv747sKVYgPvtl1O9FBAWODiHty+S9UKdHO6SPCOOh
434x11lhQHZnNHqJCIlM6xMTN1lBxexXmxWDGLDQ8BaEPGAF4Q+X7Y4cFoPp
tfO6HZGscJdIf9k6SAxS7zh/lIpjhSBx3sTjCWJwfsEb9zCJFS580w8WyxeD
mqn4HpGPrLD1cLCQs1cM3vf9dXOqZoWnZZD/QFEcbM7Ptf5XywqVSdpK1rri
wNWxd4ythYyPCT21n404+DWJUBf+ZYWImSQYfS4O6kaKN2hHyfGuM0pHU8Rh
sQYarKbJ+Er6DDOWioPd9yuxO2ussPr25NSdaXHgRR47Z3ZZIcpgmeIwzQFo
+s/vSgo1G9xgG92vFD4Aml/SZHVxbPCKtTe/3PIArCkVRcQR2OCax7srjncP
wKfP1avTgmyQt2/hYvfqAAhmjmHh0mxQPnDz93D7AWg7sHZg+BAb9H20j6va
PAAvU+heqBxhg2F+h4J4kYOw9VbSvFuLDWzc1068vn0QukKdJsVs2MDOm3in
X1oCIpi8je/Zs4Ewt/gv7vMScDroRcGvG2ygxDOMtw+SgOInH31c7rHBeuCN
tIcDEvDqziyuOIwNmM4JLeZ5S4LBwu49hhg2mLwftxKYKAlUrmy9F+LZQLND
oYsRkwR3h0Pv9z+wwb0tY/PEPUk4c/62mn4lGxx3k0lRuyMFTGj1St8yGyx8
+HY8RlcaHpyUYijeYoMHbXfVk+ylYVz74udwSnZgp+5LaPaVhu96lVta7OyQ
dnpH7WCJNCgariQLEtiBiFcMeN4uDUnGkqfXBNlh8A51ReKyNHibhr7KkmEH
5rLWy4nKMjBpTlLzV2KH2FKOQwzmMmBptTxgc4wdfEg8x2Xuy0D1eYnAI4gd
rLPus99LkAFlm/NyOF12wFneVPGploHkSyF/pozYwaS8+eDevAywXcEeVJmx
g+F96i9DIrLgc3VJOPECO/z7cHB821wWZq4f/OF5hR2028H7ULgsXLhhfdPk
Bju8rY1v7K6ThRrnlxwyt9gh5OyM2CE6OTjiWvGV2pMdJlQKVvvU5SD91qLt
Xx92oM+lFLnhJAd4jwM0X/3ZgapkgC0jSg6e3LXKjnjBDlP0j9liv8rBnOcL
E+dIdvjm40OF65YDG69va9px7MC/KENXuC4HtQ8XEoTesQOFlJPHJqc8HPMV
115/zw760ZbhmgrykPHEcqo5hx16t/81/dKVBy7/5+HZhWR/0sfPtbby4Pes
XDWgjB0oa9J+ud+Rh4Wg+V7bSnZ4qVxR2hMkD/UhFlIcTexw9GLY9Yuf5EE9
PLhxup1cr6+D2OsKeciM/O9udR+5XkmtxP5GeSBEz/EnjbDDXZMeBs1+eQh4
Tay8P80OKanJjP/9k4elOHPHc4vsMPtai+3CljzYxQexym6ww2lF7WghegUQ
bl6Tm6fCAa/j7UROYQWwOIejsKHDQfP3c7zaUgoQ8ke6tYYRB0fNzXQilRSg
ykw7Q5UVBwOveBw31RRgq83GKxWHg33RufR7JxVAydLTiJ0LB/MHrcX3TyvA
jc5wER8eHBS6+AuFGSvAO+uspUl+HBxw7qXgN1WAju7vPyyEcfBHIf/lGwsF
YL3YF/edSNaZE9XzVNYKcKpv9eahgziw6Ti7aXheAR7asqMEKRwQfi+qO5Pt
gn4pPKMcDup6QzXNyP+fuqw1du8QDmalO8p2yOeJDl0sGVbGwYX0jnobcj4r
+3svzx7Bwd7H6yrO5HrCRsIulavhABmuRQqS6/1xLVNJ+gQOpjgG0lyQAuyM
VdK8BhxkNDY8MT+iAIcdezupTuFgJHO1vklWAZwnV7JvncaBabXxRK+IAqQ4
sfn2GeBAuM+L5QFeAbqmJc/pn8FBNA7n+p5aAXAuJw8Un8OBY3eoquOyPJye
vbAuZoGDv3f/Bn4fkockLv/Wx9Y4SFZ/yMffJA8rGh9z+y7ioFNljU/yP3lI
frHt+NoeB4IaJYTn4fKwli9+avk6Dhil5+NW7suDcbehqIkTDlocq+m1LsvD
lmRCF6M7Dkhq/BZfZOTB5Gx1kcMdHOjjtmGFjcxXz38RVZ44qB//Eau7JAdm
P47rP3qEAyn8p+GzxXKQY/+3dOEFDnzVXRrrVOSA6gXta+Mwcr61CL6neDmw
zpf3yI4k468dXHxrXhZoKXxlrsWR8RA+uNaZIQs2khl0lfE4+HS/rEL1qSwU
nGkcFnqHg6+3auVfXZCFS4nC8Z3vcXD2V/bj34yyUFSte18lCwfm2h1PTg3I
ANM/N7PIHBzs/DdksV0gA3acsYfmcnHwhClvMSRABr6qY8yGhTjoL1/742FG
fk/sJyY+FONA7xidyqywDFx7zl5NU4YDvPMZu6ExafIefDT5yjfy93WmbUrJ
kAZc12WfChIOxPc93DIvSYPDfpC1QDUOokRLXamYpaFcIk/lwS8yPxWTdo9+
kgL8mS5cey0OPEOkCuhNpcDpHsWsUiMOXsYcHBqnkgJSgtTvsBYy/ySVfWor
JIFQbfJ+pg0H6idys974SYLLzIOnel046E4PfMZsJAnf8Sm273tx4KN1tjaZ
TxJ41X+rUQ3gwCriUf6FaQlwu7LIfXkYByk11onPv0mAQN7JRt4pHEzrqAXf
dpKAu8bDmiFrOPgVSFAbazoItXeZBKY2yfer8Hzx248HQTRBeV1nFwelh2/V
LgUdhIZpv9x9ag6Qnp9h19c6CBLB4qJ3ODiA8Ly472b5Aej6fo3yghwHPHtx
SI2mWpy8j/TwPzrEAcz06c9HMsWBvvKsSrIyB3D9MFBSDROHI5i64/gxDqjp
T3HSvSAO0f/hGjx0OAB+s/CTNsQgRz1wPEaPA7yZMpSahsSgqnR7v8SQA1yN
O5y968Rg6eu48v45DrAsFPbITxaDs0XlcS8vcUDwhMrbOlMxcDisXPD5Cgeo
svl/mQYx8C34UNdyjQNyeuK3sg6Rz8+L2uO5yQGVpJqDu2xiUH2IgVfDjQM2
filhz/eJ0Pv5kdKl2xwQ6fKGLXOBCEyfblxLv88BERRfqgLbiCAm1//olzcH
hLiHbR//RQS1j2ax0484wMfq+Cf3MiLcyNKsVQzggMzx9qfqqUT4+Z5L8VsE
B/Qdjj1T7kmE/gMv9AdfccDR/JqwKhcirKbt21PHcsAkbvei4FUiHEidjtFP
5ABG6/L6TyZE8EsibbdncYB7DiWqViDCW6Ej3Js5ZDxYOp3qJIiQn/BRQTCP
Ax6e4dHbFSbC4NvXV+yLOcCM9CaviZ0ImrEuv+a+c0A9Rb1e2ZIoWBKGBzl+
coDgkXqHlBlRcI2x2lL5zQFiWHFk1KgoJLzSkn/YxAGrzYzsAR2isBXO+4q+
jwMkNyolTpSJAp49LEdmgBzv4feVtVAUpMOofxoPc4BunoFe3UdRsA6Z23g1
yQFtNolH9hNE4Utw9SXRVQ4QmvDfG3skCpkGdbxBGxxw4NznKfp7ovCW5c+f
2W0OuCV2aXbhpig8iRjQ/Y8KD3oGAzY050Xhjuk4hRgdHv7jW/U/cFYUHLhm
y4IZ8XC4ilVx/ZQoGMVtKVji8CC/nJmTeEgU0AXKqXJOPAjoTX27fkAUlAUZ
0sR58EAQyPldwysKPMncPItCePggf/+2DoUoDH9Q3H8pi4eZksb9hCgRaHc6
WrqkgAd6GrkMw7siUCOreee8Mh7wOoa+X8xF4FOu4YSEGh5MkKLtbQ4RSL5t
mhJ6HA/nPtrxJM0KQ9Th8xdXEB7226SJx2uE4cFXh6ZKXTwMHe57GfxAGG56
uT6XMsADUY/7F/8ZYbikcVc73BgPk36BMZNEYdDGnn61MceD51BM/JFqIWD7
lfBu/Qoe1i7JvW1eFQTK52nnL13HQxbLL3FDTBBWDLI5f9zAQ7y1wh3JYEHo
bvwaFHULD9Inbwda8wlCesefW/KP8LBNi10X1hKA2Lhu6egneLD8r/n+LpsA
vLgwOLLljwdKVfnQo3/54Vb/rFXNCzzIeB8p23vED+rjDHA1Dg/vfNuP67Tw
gXwm+9bveDxUVR2Ly8viA1FnQpHiOzww3q/ceejPB7Rz4lJ77/Egcpf7CpMG
H2zkygxfy8LDVcvIqBJePpi+rZRQl4OHze/E5MR1Xmhe1cS9KcRDrxAYjJbw
QtVXndr9Yjy8JXZ9V47nhWIvowCHMjxUfjk5HunLC/G75zcOV+Lhczmrl50e
LzjQ3htsbCTj9U6kxXmCB/hFfndut+Dht5Gzd8cfHmg8JtQk1Y4Hp0Sjb3sV
PHDE5cc3v148NBjrxdx5wwPTz/i+5PbjIZgjk6IkiAeS3rnm9A3hoWx9PDvT
kwfoWrnjj0zioV5FJ/2JJQ+U/XOKujqDh9AiWusrp3nAja7iecQcHqSobrMO
HeOBDjWHB9MreFC9TFzMF+KBF2Zlt3g28PC98tDHXRwPaLqyOZ7axoPh8PqD
vzQ88D652CKJkhOY1QVizs4RwLqMybiOhhPkfWdP/B0hAEvbpVMb9JzQol2c
vdpNANJsgcZBZk5YUGcvft1MgLv09IdN2Tih27lJr+IXAaSIF2Uec3CCWs2+
lTNGgD71XGIOFycY4MaG474S4JSbFY5OgBNMPH5G3MsiwEbQR/rDwpwQfqyp
TSSNADkp+3uXiZzgi1NtPZVIALv/zNZCDnCCroJn2nAsAbjaP8yWSpLzLf6z
WY8iQM3c9ui4DCdIcTlwPw0jgA+DSR+nAicsUSQPPHpBAEWx9FZQ4oT1ovHf
M4EEGNXYqHVV4YSfu7/7avwJEGdh9P3tUU7ou1/Fx/mUAEa3kkt/qXNCcj69
d40vASier+StnOCExCrT2XEfAhSl6mUST/6PguuOx/L9wmSvrHfv9yUJSVJJ
fXtPsoqSouwkIRkhaQgpFCkVMgqJkGhJst7bKAklFJlli5Bs4vf8/upzep7n
Pue+znXG5VPkwWETsnS/SADXkvsp+/XkwdCoLPbwBQLQvk3EXTSUh0Ty/OlH
5wnQMK53M2uvPPxjOWQfwOyrYgmhX/fJA2lUc9wGs7UVfgesMpOHeSm53grM
Ht2x68wGc+z76rX4K9h5qYdjT9kekYcdcqaCiZg/89PDjtetsXiX9tKFLhFA
NOI/6wI7eThCEi8qx+IteXTbrNcBw89tlFUfTIDTpf1GMk7y4BxEuaqI3Vex
ZRv85yIPbyx7+N6FEqB1Imqrm5s8zG1jpORcI8AN8R71ex7yMCD5+MDXSAJM
/RdB/+OL4a9SubsfwzvrSBeO4S8P1t5OM1VxBLD11pQ0viAPdSZhD9oSCVCV
3raQHiwPo2UtaQlYPs+VqU9+uSIPgwl1z7ZnEUCtNWR4OUwewk6qrhbKJUCM
hGqrZZQ8qMScFFouIMBxn4uvJRPlwSUsjYSvI8AWza7X6x7Iw4YD348c/0IA
8UkoMEiVh0iWUF7BNwI89xZ+E/xYHuLOaryy/kmApdO3C6deYvw1m1HBzxDg
s8ZUoWyBPIQn3WkVWyRA2sTht+pv5cEWL7+xc4UAe07Tilx58jASpVYqLkYE
mkZQUWiFPLh2bydbSxFhYvxnUdo7DK+O414+skSI88os7qiVB+GrwuRBEhFO
bhAvmf8kD6JHW9K30oiwY9y9hNAoDz2OYvHbmESQefa5ZNNXeXg0cuTNAJsI
vZ6apQdase+p+1O1FYlQoB5b6tEuD1PTAu+VlbB6HZstjeiSBy26q8fztUSw
y7Muy/wpD2hqMuuDMhE0PEvLqvrkoS3K85DbOiIIqLN4PwfloZ41LHYTs7/9
DuEt/8L4FHhBUQ2zs3P7edQxrB7bx3J3YN8HeBgh7T8Y3p381m8wf6brc5DF
lDx4htWev4vFw/ktVe4zKw/xp43HqrF4Z56eLr+1IA/Ra++TjBlEqHFvKn/6
Tx54l7yr5ShEuK+2paKGDwdbwIaNwxPh9Gh8xYAADtp+bozcLU2E3U8XKwRE
cAAV/BExokQguNtXssRxkKnwMGWejwjDquWV/0nhQK1rnOU0h/F3RKHKWgYH
v9mBglVYP7qVE1blL4+Dj18ss0T6COB4argqhoCDnQcSoqitBNisavLuBRkH
8vW7RH99xOphJO/dJxoO/NJoPdYlWP95Ivt+hImD9f91jh98SoBnbmfeiyrg
IP5lRdIrjK8hKi3v1yjhgNAYftI6nACHf22r1l2HgwPbfl5h+RBg3ZP71UfV
cHA00sOnzRrj18mV6oANOAjWX9hquQvj1zrHDwmaONC70n7YeQ3Gr+GqDwWb
cXByi0JagzABzmavrWnSxkHkB2df13487DkZUTOxHQcbqfVlMuV4oK37XSPF
xUGdL2+xMQEPE0OmH1V0cfBMxLzpnxce4lzxtU5GOHh1knq2mYiHk8rnai8b
48D07pox1igOdgy11Sbvx+L73Kf1sAIH0ln/1RWb4YB3LcLa7z4OelxS61rN
caCRplSnfwEHr9cK1E8fwcE9z/TVh2xx2N56ol7OBgd3H33PScD82mZ+qN9g
j4MXNXFPJ7F7b3BR/WRyDAc+/JH0dVQcdJ1keuU64UDRvui/JQkc3HCXl1nt
igOjfRtl2zAe6HiJvPA8hYOMw1d/Xp+Xh2HvRbPPnjggDv+R7JjGeHVmfHKD
Dw5M3iVfy8ZsA//eu9F+OBh1MfnXOIfVwfkWrT/nMD9uGa3cFaxuAmq/mgXg
4DL7w/lOURwcDOKdfRmEgwtWg+HJeBzwhbwiyl/BgYRHjP+FNTjIu5pZ6BuG
8UkohuuB4W4XnmTVfB0HTasD//PHcJKMuLWgFYX9Gepm/MAFB0U3riTFRuMA
1/hSbBg7x/WW/46ZuziISjdxPPkIi/vOqc7D93CwLLqwb9N7HLyPORr4JhHD
1fHcgCOG/5l7h5ikZBxU7zNvohHwwEk0ROce4mAxZJQRvRsPX+5vP/Y9HauH
dtvzc2fwEJyyYZVOFpantP4vqU/woJ6m8CgxBwc2zOmu/j48RGZK9Nu8xMGx
Vw5vcCcJoPNkJbTkNQ7Wdjbz/r0iwNDTv0r0tziQM5MOMxQigv7LdtcuHsYD
Q/NO9lsiTOV/FuNWYvy4rM1fSSRB2pvKJylY3IP7FBbW+5FgpSRn1KEeO98X
/ZLikCGPlxJV3oDhb75yJ8CLDLYVd9U5zThsRmzpGS8gg/i78M8hLRif7urp
1s2R4W31xdO9bTho9Vhou7SZAq4fvWT1unCw5rqN4QkPChDqj79M/4nxbN0F
zcZUClR9PnJIqB8Hvqv++Ao0UMC30XjqxBAOnlQ0zSkvUoDzlRv7fgQH6uGF
Syc4VGho2bRl7TgOii34RZv0qRDYtrYlfBIH+7rOXg86QYX1ndRzQ9M4yLnY
I+h7mQod3dLkPfMYX3tvtOcmYPtkj0BR9hIO4toT89flUUG7f9ZanA8Pyrrc
a9/LqDA4OLLoJoAHcmmlSXYtFeJ+dd+vFcZD9ehN7qVmKuj9bvpPTRwPqbhy
nsZ3KkyOV3fdkMLq8IdCfgxmP5wsDvotg4czppPOHl+pcGD6GWs/Dg9eAsn/
vOqosDz7qDwPq9N0EfsWLubv6cI9R2kqHko/ts64P6GCzb9IgdMMPCSp4y6d
jaaCOF9wegMbD85RB5JbvahQuOqM/sY1eKC8Gu/ebETF9kvXgdvKeLj4by85
n0wFvKht+KQqHqTXJ+bd7sfwFT+gfGgDHgqFX7VF/f//B0np1bzSxINgqdwX
i3MUYMlou+G24GHw7dIHaQMKfJZTk/DbhgfrrBziaTIF2wc9hpN24OGD3skg
k2mMD9V51RVcPKzfGaCw7xsZGJyJjGFdPNgMvd8tV0KGmwEbr8oY4IFUrPt7
42MyLH/zcdy6Bw/agbXfjWLI4LExH+xN8OAkdP7LSigZOiKnGaGmeDiHDT7J
i2QwGdjyL+cgHtQ8BF+q+5KhBM61N1rgoUM+PWOjJxnUkt6+nbfEg3jHjMXg
KTLcn164x7LFA/JWv6bsTgaJAzvOGh7FwyuvVQZN2PsXnlwy93TEQ6f6RHcN
dt4vQZ5m7Ak8WG5xYU9eIIP1UT7ZElc8TAqY5mldJcPHt7vGe05heEYYhQTc
IoMO7kq9GNZnn5o6RBbcJ8MTz6ocDR88KCTI2nzJIQOlRijiiB8eHt5JGC7B
7n9dwdA18BweeBetXN0+Y/ri0jWDjIt42FTFY9X1ksG1tUaxLhAPFfMP7b7O
k8EoyuQnORQPMcRK4+cqFCgcjOLBNTxcs4/d5aFPgbW6nx+4ROJBLyJyb9Yx
CgjPmlm/vo2Ho7cqKs4nU+Cs2V3tjhg8mF5pPiPAo8BATjNBIB4P4yYBfX9+
UOCdw5GmA8l4mAk50j+hTAWt4vgX/g+xPhR+qWt5PxXS8W23ktPx0LrXJcz9
LBWufrQ1GcX6jlkOZ8S7hgq6Wo7vwt/gYdrNlPw6mAYvbz56lFeEhwbLnH87
XtKAM9x3+WspHuvn3U56/Zj+S3bZqVCFh5+zSjfvm9IBiXi8KWvA4kvSEmrY
wAANx7zY/iYsHmHd4DEXBqSWjPtKtuBBNCrh0nIyA4K8fTSsO7H6c+N5S4ky
Yaz21erLP7DnrkunXbcxwV5pejSzFw/Lr/7UeLkyYWe7f/b0MIbvYSvZ8zwm
5G1+G077jQfh8ceziYNMoEcvnNg9gYf4twsPPgmzYEnvEuf2DIaf8ji1Yx0L
3FPK+Arn8VBzU8JMSIcFHfMrXV1LeGDWO58/socFxXkhSWoCBBjBr018fIIF
wiYWlHvY3M50bI6o8WWB2fDaBH5xAuTcYm1SuMyCQYX6uG8ymI7ZeZiSnoDp
+/IU/C4cAQw6xu91prPgkr1PTA6RABGzwVd9nrFAPoF4J5iB6QrLznsfK1hg
v+WXzAibAO79JpsTa1mQ3VRyywLbG3Z8nTXramLB1Olbq5EyFg/h4d+kdhZw
VztGqagRYMOF7OKWHhZE5GhJxm4gQBf/+j+xwyz4aiQSuaJJAJWl+Ott4yw4
deXpteZtBMALje0VWmRBAStIhPsftieJqa6aXGEBf5lZWDYQoFvTRddHkA0m
NopCOD0C7L+8uvyaKBvuzc1cCTQkQHYffWWrJBt6YmtWDe/FdFmTn3GINBvW
b7p/+dB+TFeFJVSdlGPDuQZPvjIzDK87ktYTODZUeuwKUrbAdCRRo55IZMNq
CdzyHUsCBL2vfvGTxAarrIGAfzYEaLKne5pS2JCu/3bR5SgBBGWqdBypbBjv
ibzQ6EiA3RKrOVQaG3SC7ed3OBOg/wJz5QJmh9I3nsvE5mK48IuAEMxuKBKY
lfUggHXJGXlNzKZafvMLOE2A4iGyaAR2nvN01tSALwHKJyZdIzB/L+5c9DXz
x3RKvYrEJjIbljbsnyzGdNbm5LvhV7B4DetZ3kqYjvouPLjlIp4Nd9z+jkdj
uvBQd9J6sjwbOkXeey5eJcCLYcpWWxk2KGfE/z6B6SbnYvcGXSk2+Oqecm/A
dNOPt1xOrRgbyrr/G9G5hfmLuTA/KcQGsUsybhmYjsJ/cK18w88Gc0rvkDSm
o04M/wkm/GNBypvXLhcSMHyca8ol5ljwy/zaQN99AkQ93pB0d5IFmyetT5im
Yvdbz5eaPcqCWjW+44qZBHhk4VN2qpsFhI+NP28+IYAN+rJVspUFx1wyHOYx
nXVfzPu+QgMLngqe6z7+AovX5zPvSTULZh/utf+UT4CH2rOiiWUs0OXSO7UL
MZ34eTZpOJ8FUR3jNo+KCSDhwrp/+wkLFIixVucqCFDnL9RTf5cFnvkurT3v
CLDerjrjcDgL3prpHNlXQ4DbCt1HORdYYHqj25zTgOk+8QfpEXYsSFz3sulG
EwF+NY5Yb9nPgv73Vw/OYjqOezhKUG8nCy7yqxyo68Tqo0Kd/yuNBQN6Eq1K
mK6jHs/MbZFgwYFro0cvYzqAfP/bsNo0ExSln3ltGcF0oUlwqcozJtTRtG6l
YjpCQ/fkHRkOExjaOz+dkSfC2lAtuURxBlR4HjSh78F0SvLElqZPVFB7uanZ
34QIydueH92cje0D0zjbRlMi4KUn/xheocKpgJZT4YeJEOLaFe67hQq4CNvI
P8eJIPiazy4nngLOGc4f3wUS4dKdmSV7EzI0DBkeZIUQAWcQ7ObJxuaL2rq2
C6FEuP10mMedIYH0q5HhDTeIkHHW3cI4hQSF6LRYYgIRcrsWJfdNELG5d8HI
Mx/TnTF2OscfYPrXP1vq1hsiyAlc8Dp3jgDH5FobnxURQXosSsvFnACFRpvt
/iAi5Ktu8tSQJkBf73GOXBURUsrDNXXGsD0h6M6gZjURDMIyX1/8hO0Zr8e9
z9QT4ZXSy5XlO3i4c4CxNbaBCEAOH3bzx/aUEZOl101EGONdOe1oh4ehsIvl
374RoeXz6PFZPTzgOE/CZr8T4aGo3+w2dTxwS1uNSZ2YDj38LVWbjAc3SxHZ
bT+IELmLsrQihO1Nfzd/s+olwt6KzILEKRyU33RKujCA6dB7zBBZbC8cXXfX
IWmYCMT7JtKnsD2T9K58TckoEYRKCbJPa3Gw22HiV8c4Eba3fjdsKceB5yLj
+b9JIhSmK8b+xvbgxLh9fowZ7D7nJIljr3DwbmOADneeCM1mbsbfnuFgou7J
ytElTGdnJm9Ly8UBzfV7VfAKEYwc9NJMMNtIQDTi4SoS6D8r3vQ5D9tTk7eY
VgiRQCHEooKD7eHJ207gekVJEOr9J4T7BtOhzXe/C0iSwO71bwN6GQ5mvCqS
FaVJ0D9oW/gK27PZEn+O68uRYMI7K3YB26tNHjPXOeNJUGfAPzrcgYNzu/aP
hZFIsGiw58CFXzhI7wh4lUklQSzei5CB7bGf/XPOfWCQgN0eEe6E7aELcm3/
DbNJ0JRwmJhPw4NSnqiA+BoSnNaVS4zWwOb4nq0fVJRJ0DUtFzCnj4eAvhNR
xqokeOvXsTSC7U1NlEpi1EYS8F07EHb5FjZXX//pyNUiwaj+pfQNOXhQMWOl
fdpKgsvG5ntCPmD6JPySmsxOErxQsS41E8X6PufpH41dJBjHxuScCgFaStsK
zPQwfFS8NeNNCaA+tXXX3b0k8Ik9hj+WgvXhW87C+ftIcFbpwKk/mB4PVYmt
bT6A+UNUjQPzBHj+rjJ6+hAJhqLcBNpUiNDhMGlBOEKCsjj5B8IORBBdYlG3
WpOgVEje5/8/H910z/THETsSfMZnyU+1EMFeMzDjnAMJ4h8eX8ihkSCi/qlb
wnEML3+UtfUkCQpc2zcUOZOg2CarZ4RHgp8C4tNt2N/v7U+nsxTJIJmiXbTo
TgJxW7W7Ywlk0NZxCaKdJoGQFzvBlUOB419j9f7zJcG7y68L7F5Q4ObpKjH7
syRQ6U6NfqFJhSKJv58Cz5OgIfb4uY4UKvQ/ZsekBJCA8zLpq8wSFUav/pwX
CCbBzDnd04/MaDDp+PCo6xUSuOdy5gaSaDAPx97VhWHfv3FfceqkAR+Trbox
AusDkvLvG4h0EP73Izo2igS3HwZpHDahg1R76sx8NAmirKIiay7SAffWwdY+
hgRXX4+6Vz2mA+Ueq6LiHgkE153MeFNPB7bfj7VrkzB+9mz4ODNBB+VDqVGR
ydj3Y5E/eDIMUN/o8Hf8IQmUZFzSYD0DNkuzrMwzSKBjqKmTaMCAHb+7ywqz
MH5dWL/ca8sA3doURfpTDMf4L8HrTzNgT/bRiMvPSLA+e7V6cDADDoQzJ/pf
Yn3trGDijygGHDnRbbG3gAR6NVqJpvEMsN+dUpz3lgRLQbXbalMY4MQ+ypYv
JUFI2JoY03QGnFphhPsjDJ/PNfdbMhjg09k12l5JgvSI9lY77Pm54uSDUE2C
kp4OiU7s+6AE+8L0jySoP4FaDvz/39v6Mxhin7D3i6b2F2D+oyy6rnh8IUGO
qupZSSy+mE3Jw1+aSRBzkv7K3IsBibL2pltasfc/XV5z14YBD8fprxPbSbBw
M2Lwkx4Dsuo7KStdJLBxXtwkp8qAvJwHwcd7SGCo3XfabTUDXl+3G6juJ8Hs
bn/G0BgdSlzoJmrDGP5SijnJdXSo1O98ET1KgryDz9TTM+nwUeEBcXqcBHdr
FlfLBtOhpZvWW4rNgc0yu49GrqNDV2mHEWeBBFa3fOcaFmjQl3Q/L+wfdj8r
K6XfNRh/jtAumAqSoXzwoQHFEePP5o7uVyJk+Bev0eegivEHd1+fJEGG7utL
O4YmqSDVQJX9KUsGd7faNRKXqKBsRM3yYWK6rG4xUyiIAhuU2qVaMN3/ZavI
94rtFNgimOS7XYkMxjd+vBmeIcNuROEKrsd0zV+jXXyuZNib3JbuqkGG8Udm
p+PoZDgQkChev4kM4oahSp0NJLDXpnyL1SFDUcnO2N/qJDhBaNu+8B8Z1ofP
6Ce1EsF9KuGh/S4yJB6tb8q6RASfRiuRSj0yaPUFSU7RiHD+OdljrRF2/qii
2hK2hwTf/N4YaUwGImMq5eduAoS5J2hP7Md0WW1gZ3M1pqOUyYJvLTCd+Gzt
7gf5OLC1V8rstSSDlfIJifbNOFCM2bR3tS0ZJqx+e/xXLg+jNfBb+ygZSlcZ
exYekYf8lX3Rxx3J0EqLy2qblYOAzTabbp7A7IrAdQ0pcqB3yvVbIXbvsfdF
h0X3y0HztxDaai8y9Pm9GMkulIX7ktE8bR8y/K7MfOnhKwtOug8cj/uRYc9l
5juRjbIwlfsmqxDTuXJKPxRlX8mAfOio1vFrZIjvUJhcjpGGtqL5lqhIMmy5
nzHvpSQNaRPCFwtvkqGuwf5fzNvVoGnLLpeKxeJ/kf5Srk8KDm46vK/wIZZP
apr1Az1JuPOTd0KqmAzDD6xK98uJgTWxXlS7jAw/J1u/XH0iCpx9bTmO5WR4
9q/09a9dovCycOrPm2oyxFynjD/wEIHGW+sCHZvJ8EJyYZ3VKyFIfLeFHdVC
BsfHeNpnrhA4Lu6uetNGhoU3YTblNYIw6WwvLvWTDC4f9C+2NguA7M67cW9+
k+FmbPUni1J+aPVN3dYzQQYDrTrNs6r8kJqd2yE5hfXZ2pM+o3f5QAP/geO4
QIYK4/nYzRnL3AOjS3mSIhS43nCqVYs4zyVxxA9uFaeAAO8CVzhtlvvjCHH6
mBQF7MMf2B5Xm+Gerty4/Y08BXLMhYPf7vvLjU50rj7GooChn8XOzcsjXP+z
Ib4BChRwIA4u708c5tofTGbeU6LA/eqfsVzjQa6a+Df/OjUKVPdP3iof7OHW
nNdX3rqNAsSECK+wb1+5zy2ONZvtwPzLcGlmzEZu/MZLwe5cCvxyDXtzma+e
6zyc3/oQ0+l3nMXubpEo466yUrwueZACu8Ty8X8SC3jDWrB5rQUFSi27qD8f
lPMaZGx/7rKkgI34O8JSazUv5cPdbf72FNCNMTTxkmrk7dAW+PXTjQJuxlUq
StJdPAUcM27JgwL3DnKPngv9wROf0NElelMgSvtdj6RgD6810yfRxJ8CioLu
4oPC/Tw/Ys/eN1coEFZzeAtFd4Rn+/ffzJcwCsyvCFnQ+0Z5ep/Jj0avU+C/
lwF4z9tjPLlws0V2NAX4H4dq/5L4w5t39MjccZcCBow3t4IX//B+7Lx+6Egc
BSYNo773z0zy8mZQzo37FKCEePmNkqd5sY0dRzJTKBCd+HLhtv4MLyBvTqAi
jQKcs20c3SuzPGNnDdvZLAooTUJmOWuBp6lrIir3FLt/CrH/8qlFHoXhmq/2
DPMXsPGuZsYSb+hriqTjawp89+luC/q6zPv8orgwoJACW1PliA71K7yCqBan
e8WY/9M1Jd5WfOiqvnRpXTkFYhuydu1R5ken2KonB6socJuv4r5zGD86+M8A
v+oDBRoU3tg7dvMj9utAj62fKGCkZjpnc3UVEr2dSD74hQIiqie+G39ZhSbc
C965N1Ng0ERKQ5QqgMoUx+hpbVh+DAPvSjwWQNYxdp8kBymgrnjfSiJVENFe
iVNP/aLA6dvn95/oEkTdX9641PymANvq0fWnFCHkJC3HHzZFga4NR8Wdo4SQ
kjpvX98sBYIdKEErlUJo2MQ9UXcRi+cX88bXOSHkGfF+0wo/FQ7oy286ZieM
NLJ9g+2EqOB0Ivq7YpQw+lvNqi8WpcL3XKGYXcXC6JzQRedz0lSImHnOf01O
BOkoKr/6JkeFpDTVNbnbRdA/3a8rWgQqXG/qsOMcF0EhwRsS/tCo8FRkcnPn
UxGkl9LRb8qiQuTDNT+kPosgkbLrmnkKVPC4uanQaVwEfezYEiS5lgqem1t3
NkqJohuLvbVuKlQo0HD6o6ciivZTbpNq1lNBA9dmlK0nimS37TyxdiMV6te5
FA3biqLmIyMvQrWoUJnPVzTmI4rizsYv926lwkV0CCWHiSLLWH1j3e1UkHUQ
s+i6J4qo+ZP3UndSIebuOUb0Y1HU1ZjSt7yLCrPu5LmYl6Io9Y/JRjt9Ktzo
eC9TVyyKHGUWLhUbUWHX5nlZ+QpRpLgh8yPZhArJ/dvMDN6JooF95sRzplRY
WEyV3IXZ2e78Tt8OUoH3VehVZ7koco/Me651mAqZ5r+1Z4pEkfoTm393rKgg
82zgvNNzUTTxQXTvH1sqRL2+9nhVmih6Ofg6ztSBCrbRNmU5t0TRGeHjvbnH
qbCT2Y3bcV4UbV0joyHpQgV6SnT3bXtRtLC7NMDNjQpfcTtro7iiqMTRreaD
BxVA+nisPE0UBV4mEtZ6U+Fd70SG+JQI2pVa5Rh6BtOVnLAM+2oRJMjzftbr
T4WJl4tifHEi6H0nY2nXRSpsb6qK6Tsqgq4t1RqlBlLhgZB3icgaEWRMPR+7
fJkKXwr2LLr1C6MGyyb14msYH8Zq0wmWwuiOf/BF8g0qPNrmOx4sLows4tZ/
8L9FhR+ZAw89C4VQW1P4Ma04KmQ8azW2EBFC9ye18u4kUGFvwheUkCWIjsr2
LEzcpwKFM/V3Rl8Q9e3fEZP7CPOXOSLx3E8APfYY/iGRSYXs+PJ2F1EBdPJG
3Hq3J9ieYeOzZezeKjRWM/Fe6QWG341HDJk8fjSnlzGfUob597PzmT2zwgso
TrlSVU4F11W/nxQGL/P4NBOlhquo8OZL+lPna/94IsxbbM1aKvhcD7znGbnI
I8yf21PVQoXU+sKn7TazvEQv36ahNir4abTJjenO8OgDHnZSXVSoTqpqfK0w
zVNscvQ+3EcFhxsZY38+TfKy9tgtXhikgk39pKvMvT88NXQkNOUXlo9Q+ypp
8wneplyThKEJKjR2M84bG4zwChQMFaSmqGB4lrL/nu0QTydxV+7GWSps6rhR
QOL288pkdmw9vECF0kPOVWc6f/J0w7eUX/iH1Vcs/L20s4P3/p+GcQofDbIK
C/cMoibenjOqXysFaNB8c4ixp6OSV/drzdEhYRq0VB3rJfbc5h44xhqWFKfB
zdql9YqKH7jNLRTfjVI0GP2R5Pq36CvXcj/+n4UMDe6fNJxwJnRxO6qkwy/I
08B5c6j3ZEkP9+h2cdkUAg24r6SWbfED3J4XgkmVZBpsfIxTrVMd5jorrygO
0Wggvcs+ZER6lOuJn9LeqEADosATVlH+BHcycqzCQokGq2eEbivO/OH6rRo2
ubCOBiLfwhg5an+5AeOdDpUbaODvYHlhV9A0N7Km+prFDhoIaWedmfv6/99L
VSF3gUsDyefnujq6Frh3CkruJ+vS4FfcIUvb3kVu4qMXzweNaJDP+Ovxq/sf
N+tSUut5CxooDCX99m/mA7WpWMdkSxrscM4hnzXih+du0aMVNjQ49HEsV7+I
H94cCeWTxPbeZ7rnX0zFrQKdT0ERGiew5xELlxL4BaBM7wLOwpUGBVS+O0kn
BeD9Ri/lZE8aLBVkNa/bKAh7s06+rPCmQYTqlZ/u0YJQz3DaMXiGBp+X5y0C
RgWhWcLqgMZFGti//GfmmygEliGH2swDaXC+M2GWNCoEHXP7nM5fpsGXv6dD
RXWEobdf91xFOA1ie5uUj38UBt2UT2kqkdhe/s7MTVxOBFItrevv3KTBru7Y
hTlzEViRHZhduE0Drd32nYp3RcC+1ptzPJYGO3O/eUTUiUDp1X8mtfE0eBN2
SUeNXxRoO6/7b7pPA6sw91K5jaJwcRaXlpRCgyfiwbPGtqLQ9jy1TuARDTb8
EJ3+FSIK29zUZk89pkGm6/QukQxRiFcoZDdn0+Ba8bdDJRWiMNux22RHLg16
UneMK3eIwuG4z2fTn9NgjWnqDc8/ovDa1OahZD4NCpM60fNVYoATG6w98wZ7
v9X8KU5GDHwrfGY6imhw41ynDyKLQePFZZZ+GQ22th8sa2OKwcbNEca55Vh+
rwybRHDEIHoMfxb/jgYufl2R02wxGM98mHrpAw2E/0M7dRlisP/Y+tr+WhrY
fTTZFEsUg1zK2+l9n2kwU7WFX261GEg267EKGjE+hXh/beMXg1NRDXsZ32jg
ENVpKPNXFD4a2PqFfacB7XqIzpeforCObyhlrIMGJ/evLdf5JArX3vp+PPyD
BlUt6jKuhaIw6LMyVdZLg+Bnd719UkXBQC2SuXaQBrJ3m3d6h4lCRj9h761f
NEhDzO7zbqIgmJJ2ZvY3DaK5pdUpJqJQIVtUUz2F4V2U+ShcQhTYtfpTG+Zo
YHvwv2HnIREIvvqFEb9Ig0sDHYrJlSKwc3bI13UVHdq0dvjp+InAg+dnkhuE
6DC2g9yeaywCSyf5arTF6MBxWd8cyxKBog4iQ0yGDt0RK9zad8JAjntk5C2P
6cqnD5OIccJwznSD73cCHQ7huFrfnIRhS4XBh2w6Hc5+VsdH/xOCl5l+PntV
6fC46aJBHkUIZI/xP3ipjvkrt0g80CkIpylR1RRNOnQyzsz2PhAE9ah02og2
HZ5uvd28nyQIUQYahod20OGBSIbSpy8CMLpS7F3MpUPDlvuhkdcE4IlP0/tI
Azr82p73N2N0FYipHf3zdw8d0o3wXWYJq8C1/xfVdh9muyp7NO5aBdXJZw2q
DtBB9uCtvQn9/KBkucpbzRyLv45fde4KP4TK3kyKOYLdX0KkhUTjh76P5PdL
1nTQFhk9P/WUD9L+20itP0aH/FTtrGMuK9yK/eJXFp3osPvP7L3nDsvcnqO9
v9a50qFiafNNlt4/rkJIbFGYJx3m8ClPi+oXuHp3PTmvveng+z5DW/ryPNcp
3TCi9wwd9p1WVbHdOsdNfz9vBRfpUP2mT5lbP82tamks9wzE7r/t9MDYiylu
31DOugeX6fBhWlUr9vFfrqKE/fx8OB0Ox3MbvN784WaYVsS/iqEDJfiB3pFr
o9z3Dkl8PffooLzb1eTYyC/ugPcZV5kkOlxubRmftBjmKsUoaXs8pIPizubG
pu0D3MetES1KeXSIDcSnrqz7wc06doiQWE2HSiFV7l6XMu4HH7XADx/pYJv+
IdHm1Avu0BWhgZl6OvQ925H/tjeaq/z4zetDzXQwn1nnUzBYwMv+RbWQ+kmH
Up+fBYWbmnkfF6dKtvfRYUneN4su1cr7JflJ0W0Qy3+xTM8wfwdPZUPw1Pvf
dFgeePhpnNPDe+Lbdzd4gQ5vdCwfjW8d4X28WrqY9w+7z1rX8JLc37xfsXHH
O/kYIL0mbOMAdYKnWmi0SUeEAfbH3hmoV07yni49bfwrz4CthZusqhzneHVS
YTocIgMCfCw9k+vneaOMo2kHKAzwmHKNSd+0yFPbJeuTy2KA2dVLd70H//Fy
Q/1kXdYzwC49MPafCz8a3WEXEqrBgG80R2vyND9Sm9L7+2gTAzRNVBwLL61C
TxxxX39sw97fqtQ2HyKAsriv4q0NGPCMUrnK0EUIpc9PMPcfZUBPX+8YuUkU
9T1vjXZ3ZADPPPt22XYxpOCK+CNPMGB0/z6DxkdiKO3brd7qUww4rNQVWusj
jlJeqWfuOscANUHLQ+ekJVGih7v65tsMkJBZN33AQRq1KZqnHIphQPkSJSnu
szQid2yX8bmH3e/TruXDLBkUv1diMu8BA15N4k68jZFBLfx/HetTGYCOv+sc
aJBBhLdtTSOPGPClcvxn7mpZFLv2yWvlJwwYv343hhEti5q7bisZ5jLAeDlU
6WKzLMLFnb934jkDVO+x+HqocujQvmOiV18x4JSPwqY/znLojuCe82kFDNig
F7ToVyCHGos1fqG3DDD9K/IsUEIeyfqSbLpLGBBvdPbbaRd5dECFr+4fjwGu
/kV3SHXyKPrn4A5aJQMsJFFK4HYcaoj/nKvzngE62/de6y7AIekDbxhWNQz4
TVjK/b4dj/aLpNzyr2OAcqCLlWUFHt0sC+OL+8wA9+/Xn6XsIqBPfp7e+Y2Y
/2PJBrsKCEhq/eGexq8MWBtYo/OdRUQ3ktZUSXcw4PiPvVlNXURUd1Bqs3o3
Ayof7dXS2ExCEuLTGSY9DLB8USe3I5yEIs5VhV8fYsDjDxqJm9hkFG5x3Fhg
mgF+jim27toUlGbaYXtijgGfsuVs1gRRUMkeC8/qRQYo7jn3R7qKgib/M7wd
uYoJ9s8fNNUYUZGkNkr7LcSEESdFsZxrVLRWc1u+qRgTZFqsDve9pyJbJdUW
eRkmHNrK3bljJw35s9KH/OSZoDlGaPjPn4buUOgLLQQmSJVv6bDPo6Hq1dL0
+3QmmHk8+PCQQEc9otfUl1lM8H7jxok2pKOlVfzgoMgE6ao4De2zdKQ5O+mo
qIrF0+qgb1hHR/v+nDoTps6EgvLBN+f+0pHrSF/o0EYmyDt+/zpPZKCQfrt7
ezczQSzCverVNgZ60P0t66k2EwISr0rdsWSgwu+mRat3MOHF8vB0yBkGamz6
UHuay4R7k5rF/lEM9Lt+V2ejLhP0biwUOD1iINEPRWNaBpjtQXDeVcBAChWb
+O7tYYL1BfNDou8ZaGfJU9l5EyZQZDUHChoZyLJgjYLNASZsytIh7utgIN/n
yVqlh5gQtumCZH0PA918QjRgHmHCojn9oc4AA2WlRx+5bI3hk3W0NRGzK5PF
TvbaMWH1qk17/vYyUFd8yAX9Y0wwHUpy39PFQPN3FiMznbDzqxjjD78yEC7q
zAMxVybIXuocXqlhIPXw33mnTjFh4xkLGadiBtpz2RnVezJhbK6qqjabgZwu
dn/Z4MOEBxVHpDRiGSjQz7L3th8TCOYtNlcvMVCC15epv+eYgP+bJvvakYHy
T+4VPhzAhI+Pix9m6DHQ5+OVxMIgJugbsNjqCgz0y27HOsoVJixQ9i4Tl+lI
0PK1TkAYE3Tl/nqRv9IR86C6Sdd1Jni+PNv/KZOOdEwy7SCKCSLfW/e98KMj
cwOWV1o0E75R6zaJ7KQjL0gIFozB+BCYpVK/QkMROnJ3nO9hzytzjt16S0MZ
WpGPPiQyYda5z0jlJA0hdcHXKslM8H1347qrBA21KV96f+MhEwwJzmeyk6ho
mjPTMpbOBO3YZ0f34KlIhu41fCCLCf2WGo/xlyhIhTi08DKHCd1W/tk/hslI
X/aYJP4ZEx55TB48d4qMHCTa6P4vmaByJCOslo+MLggd2vD9NRPqT8ZGTaeT
UOxKLWx/y4QgodAjZHMSej6vd/BBCYZ/vfKLOAkS+vi39PgKjwk7YyfMMmqI
qP/3Fr9jlVj86+N+CEcREd/Qs7DK90wYfrvP9ps5EW3ueJgdXs8Ejbi/xN3j
BCSj7jr3rAHL33p3WK4koNEgdcPWJizePRK8pUQCSlco7lNuY8Ivj9zBVaYE
FOx3eZNZJxMSFgfTkSoB2VYbhpz/wYT0j8UeKuIEhDvVzPw4wAS57ep5z2vx
aKIk0XNyGLPVJt7n5eFR3epjpZTfTBifrxCg3sWjLIe1krsnmJB48svasXN4
dPXlb+tTfzG+7m87q+CARw6C+dl3Z5gwf/OYV6ERHu04fGGueB6Lryjh1lNN
PFoIEDAW5mPBRL/y6rfieDSU4eyTyM+CzDM5ea1zOPTtU02CugALYD4448QQ
DlXNqpVXCLLg3Cuvl87fceglK3rosDALvl32Du+txaHUPX+lR0RY0JZjnNTH
w6GbPoe3Bomx4PWtx/M+r3EoIOmtvbwEC14d95OJf4pDblW0sExJFoyc4F2w
y8Ahy99BudtXs+Bd8oaauhQcMiD0Nn+WZsGgNnnPeBIOaXENlo7LsuDo6/aP
9Qk4xHHNVpiTY8GqFx9cT2O2zG1J4xs4FpQ7vDPtSsSh5bdePiwCC/SihiPo
yTg02tOYkE9kwc40iybNRzj0XWJLuRGZBb/CTE6wn+DQe62EoQ4KCywyHNt/
vcShfLslaW8aC7LvuMrcKsWhtLCjW4UYLPDZYC0q+RGHop9V2CcwWaC8+ugP
u1YcCmxdE7aezYL11UPvAjG83Pmv55ZzsHiS70w5L+CQtcpos4UiCwb67Yok
V+OR0SHTpeE1LODuNg5xUsCjLQEvFQLXskC7MKXPQQePFDPwxnLrWDDHriuZ
PIhHfLPtCTpqLKg+G7b5zjU8GmNyyz+tZ8EXmv7o+Qw86jBKG3LcwILwbTEx
OZV4VJjoujVSkwWmg5XhMQIE9Liy1p6pxQI/xbEf9DUEFDOqHvZqMwuuDOW/
jDUkoNM7p5vbtVlg6/NK/89NAlLuueyjxmXBbaEulQ+KRBS/Lim33pgFaS3a
nj+sSWjqr0HGlX0sUCfrF0ddJSHTssn720yx/H8Ri5zOJSHhQ3tvZBxkwUr7
0/3VKyTkFzDvdsmKBd7j3jFByWTUYJDhuMmGBTduONbxvyMjNVkz62FbFpB3
x0sJjJBRX0bWHgsHFtbvlt+d3UxBBz8fUV7vwoJAW/P48UoKyksQYPW6ssBr
rFNl4wAFiTk9Iya4YfydefVsQISK0JywiJAnCwpvflLO20NFGzgF/R1nWNBe
MydYhM1HST/coxshLGg9K3ZsayYNuXJRou5VFkgc8TAbRDRUKeZ+Zy6UBfv9
FTfJtNHQheTKy07XsfiGS3C14nQ0XO3jsCOaBdcnFRM/n6AjvTsMy8nbLCBe
TvbQvEhHqbYfTbPusuCsTYCYcDQdWf5hc3H3WODU9LV89g0dvad8oY8+YEFp
0cTNCj4G4vQH4NNSsPzVZF11k2WgS8+UpSwfsmBxYZWOJ5uBtPSClyrTWXCm
qbL2ApeBolerTZ1/zILL345zA/Yx0Ehry8iGLIw/D5/mfLRmoDSPDe1JOSy4
6hAbuNOXgZa3tjea5bJgdl6jwSaQgaxWhX8UecYCsUwR/oJr2Dyp06wofc4C
2ZlVMnvuMJDMva63vi8x/im0y8gmMZD7sYgX6/JZYH0sfYs4Nn8/qG7J7n7N
AjkBUpfGEwZSnPmZGvsGq7cz2+IvP2egIBQVb/yWBebfiJvnX2PzqBPFzBex
4FG4197LRQx0ePFvdGYJVl9FLzs1yxionLQ2yqIMq49tJs0S5QyktsX6ugBi
Aav+pbd4JQPdOxQV+qKcBSXiRLv1VQy0yhtdPlqJ9SfP47m+mO1x8+8lqXeY
/5En/R3Y+605SheK37Pg8dpNK64VDLS7xursyQ/Y/faMupEQA+UN3PAhfmTB
jL+u/GgJA1EEkee7Wgy/HmTbX8hAoey/br71GD62TmuE8xloYqeSC/szC9bk
jlccyGMgW1ur458bWKBlKsD3IZOBqs/fOHqpkQXD+mdJXqkMpHmPZ6PazIK9
Psb5e+KxfSd/8sj3ryxgf9XosbmF7S+Na8zDW1jAW6Uh+ySUgbolb5j0tmF4
CzkNSJ1moL0qPKPbHVj+coiS6k4MVGA4qcftYoFHXxAn5QgD3Qix/C/pJwv0
793ritzBQLMpkdv29GL9ycagXV6dgRxLyzbP9rEgq9HcVYjJQNvmFNUPDbFg
0/hPW+4KHQ14/GFIjLNA82DoYs1bOjKLVKS+ncD673efAUtsHyjJOkJ0mcT6
442KdeExdHS3t1S6cpoFawu+SXd60BFYRfBdXGJB8BO7yfV0OkrUU+j5JcYG
rST6a58zNCTkeLgrXoINRndGdm8+SkOng663GUixodFEjCC6l4YMi8Yb02TY
IPFo9Mk/Jg1NbSiptCay4WJZwTWJT1R0dN84T5TMhoOtDZs1i6jooxunpIDC
hlnW+6acx1SUmnEtX46Bnb9DvKYkmIr2US0yPiqy4bBPddxxHSqK71NHNkps
EP1sTAdVKurLFW0fXcsGWt7DLdk0KgqAEhlpVTYwvDRf6fFT0QexONVUNTbs
1n9oeX2KgnBNXgYb1dlw71owJWiIgp6eUAg4tJENQcTQhvRGCppT/xfXp8kG
n/v9zUMfKEhv7tsLPy02HJFzURRGFBRd/rxOeAsb1jj73hAppKD2iIjBe1vZ
sLH4wH9zzylIydxp1bpt2P3WTLf2PqEgH/pOepEOG6yMO0K/ZVBQ2QBR23gH
Gyx5lkKdDylI/Pmfgx3/sYF088AnwRQKOny+1sODy4bEMXN12weYftDNuLYM
GJ5smvfkfQoakwh6dEuXDYZDRJlW7Pm2r5ZlLD026EuSRhmpFHQ1WfP7C302
eA2U32l7REENLpJTuoZsyPymfIeVTUG0jQOrm42w83vvdopi8bou8Nad2MsG
VTsjgzzsPvmVCXozxmz41GwksQHrx3xRvkfD97GhbYEckvuZgkwO77tAMmXD
LXNqy4EuCopnro3NPsCGP2tKOvXHKahviO+5zkE2pp9PtfBWUZHGy7aPtYfY
sLPCcXaOhOXnYn6/rQUbjvlosDQ1qaha7ybf2GE2DG3urX++n4rkVrtSgyzZ
ENNZinvrSUX2Lbu2yFizYcnqyGTQHSp6kko1e2jDBqLm5GEZjD8zJ6dPadqx
4RSp7zCjn4p0N30Oq7TH8nd2w/hnORq6uZT10NyBDfvus9pTdmH76ruQkv7/
/x5t3yfPbnvRkNIt25azx7H8TF65U5hIQz6WWyZFTmB8k/dxyS+noTK2jFSC
Mxt6r9ypbeqlIfGR4bUqrmzwu+2pNsJHRxb5lbrFJ9lg/PbMMwoZmw+XHtiZ
nGLDW5cXc2lqdDRq4H+u050Noc85BXXb6UhbxuyupycbVpl4i3Ya0NHV7yp5
K15swK13XpDZT0cNaYI10d5sWOux9th9MzqiuXf1sn3ZkC2gtfkJZrtuLlx+
eYYNd+xcfOyw918t3ybrnWWDrI+ITCOm55arT2l99WdDyI/wnxj10N7b+qbO
59nA51e9z2wjHcVZM91mL7DhJ+lgiz8b04MK81evBbBh8qyMX/xqOlL/3ZhC
DsT8syaKX89h87HgadGTIDY8T/P7Xt9NQ++Dwr5uv8yGFasMu7ZKGpLb4zBR
F8KGS84NDZ/TacheTkfC/iob5kvfSj8IoaEn7fJK46FscOpKd1axo6FdntU2
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
j+6T0P8AYDr6gg==
       "]]},
     Annotation[#, "Charting`Private`Tag$6063#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["phi", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"phi vs time\"", TraditionalForm],
  PlotRange->{{0, 10}, {-9.483452603060131, 15.174638597502547`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.697850157940695*^9, 3.697851270927297*^9, 3.6979214956873493`*^9, 
   3.697921532790564*^9, 3.697929337742214*^9, 3.69792981423458*^9, 
   3.6979303254074907`*^9, 3.697930433651238*^9, 3.697932200219236*^9, 
   3.697932588001116*^9, {3.697933827388013*^9, 3.697933856426705*^9}, {
   3.697934212504847*^9, 3.697934222764371*^9}, 3.697934364563529*^9, {
   3.697934418255855*^9, 3.69793443731746*^9}, {3.697934556228277*^9, 
   3.6979345759951*^9}, 3.6979347287586193`*^9, 3.697977501443355*^9, 
   3.697978267793398*^9, 3.697984021535501*^9, 3.6979842269871597`*^9, 
   3.697984290918808*^9, 3.697984330969344*^9, 3.698022380729333*^9, 
   3.698083631785493*^9, 3.6980850632596207`*^9, 3.698085339817562*^9, 
   3.698085418982869*^9, {3.6981048677917233`*^9, 3.6981049747142363`*^9}, 
   3.698105408371529*^9, {3.698105566547703*^9, 3.698105588500806*^9}, 
   3.69810571631001*^9, 3.6981058285983057`*^9, 3.698105936083631*^9, 
   3.6981102206254883`*^9, {3.698110928763338*^9, 3.698110953258677*^9}, 
   3.698111166029532*^9, {3.698114797390286*^9, 3.6981148234038067`*^9}, 
   3.6981148748556967`*^9, 3.698114938822459*^9, 3.698115411276906*^9, 
   3.698115450821733*^9, 3.698115505897669*^9, 3.6981722074193153`*^9, 
   3.6983531944557953`*^9, 3.698353520944944*^9, 3.698355883124154*^9, 
   3.698355929682714*^9, 3.698357377074099*^9, 3.698357802189344*^9, 
   3.698428999549141*^9, 3.6984291990783*^9, 3.698439509786969*^9, 
   3.6984409296613703`*^9, 3.6984409989505463`*^9, {3.698441059283792*^9, 
   3.698441083276228*^9}, 3.6984944913182583`*^9, 3.6984947060709257`*^9, 
   3.698494923641487*^9, 3.6984949671716137`*^9, 3.698495018509734*^9, 
   3.69849511270402*^9, 3.698495799244944*^9, 3.698505660496421*^9, 
   3.698505697159408*^9, 3.698505843467881*^9, 3.698505877184078*^9, 
   3.69850771789714*^9, 3.698509786403138*^9, 3.69853925464443*^9, 
   3.698539453887703*^9, 3.698539530931484*^9, 3.6985395623007174`*^9, 
   3.698545398828476*^9, 3.698584612894668*^9, 3.698585732476699*^9}]
}, Open  ]],

Cell["\<\
Here are the points of the different parts of the Trebuchet. They are not \
used in the future code so don\[CloseCurlyQuote]t worry about this\
\>", "Text",
 CellChangeTimes->{{3.697807800195067*^9, 3.6978078512842216`*^9}, {
  3.698085609374977*^9, 3.698085622836803*^9}, {3.69854519608391*^9, 
  3.69854520031453*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pb1", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "Lb"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
           "sol"}], "]"}]}], "+", 
        RowBox[{"x", "[", "t", "]"}]}], "/.", "sol"}], ",", 
      RowBox[{
       RowBox[{"-", "Lb"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
        "]"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "beginning", " ", "of", " ", "the", 
    " ", "bar"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pb2", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Ls", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
           "sol"}], "]"}]}], "+", 
        RowBox[{"x", "[", "t", "]"}]}], "/.", "sol"}], ",", 
      RowBox[{"Ls", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
        "]"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "end", " ", "of", " ", "the", " ", 
    "bar"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pp", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "Lb"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
           "sol"}], "]"}]}], "+", 
        RowBox[{"x", "[", "t", "]"}]}], "/.", "sol"}], ",", 
      RowBox[{
       RowBox[{"-", "Lb"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
        "]"}]}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "center", " ", "of", " ", "the", " ", 
    "projectile"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pbcw1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Ls", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
           "sol"}], "]"}]}], "+", 
        RowBox[{"x", "[", "t", "]"}]}], "/.", "sol"}], ",", 
      RowBox[{"Ls", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
        "]"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "beginning", " ", "of", " ", "the", 
    " ", "counterweight", " ", "arm"}], "*)"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pbcw2", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Ls", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
           "sol"}], "]"}]}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{"Lcw", " ", "*", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
          "]"}]}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Ls", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
           "sol"}], "]"}]}], ")"}], "-", 
       RowBox[{"(", 
        RowBox[{"Lcw", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
          "]"}]}], ")"}]}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "is", " ", "the", " ", "end", " ", "or", " ", "the", " ", 
    "counterweight", " ", "arm"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pcw", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ls", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}],
          "]"}]}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ")"}], "+", 
      RowBox[{"(", 
       RowBox[{"Lcw", " ", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
         "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Ls", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}],
          "]"}]}], ")"}], "-", 
      RowBox[{"(", 
       RowBox[{"Lcw", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
         "]"}]}], ")"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.697807307773398*^9, 3.697807342164661*^9}, {
  3.6978073753457623`*^9, 3.697807586892394*^9}, {3.6978077932622766`*^9, 
  3.697807794476726*^9}, {3.697808047496694*^9, 3.697808068662984*^9}, {
  3.697932131313466*^9, 3.697932152410199*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations of motion", "Subsubsection",
 CellChangeTimes->{{3.698545243425462*^9, 3.698545263893272*^9}, {
  3.6985453144459333`*^9, 3.698545316262003*^9}}],

Cell["\<\
Here we calculate the position of the projectile as well as the velocity \
\>", "Text",
 CellChangeTimes->{{3.698545206469643*^9, 3.6985452355376368`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"thetaDer", "[", "t_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], "/.", "sol"}], ",", "t"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697817031797463*^9, 3.6978170374995003`*^9}, {
   3.6978171074488363`*^9, 3.6978171118351*^9}, {3.697817588617684*^9, 
   3.69781761346273*^9}, 3.697834152835246*^9, {3.6980856361255198`*^9, 
   3.698085645454853*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xder", "[", "t_", "]"}], "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ",", "t"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.697817644917626*^9, 3.697817656368957*^9}, {
   3.697817694368788*^9, 3.697817695531002*^9}, 3.6978341509157124`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vxpro", "[", "t_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Lb", " ", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"theta", "[", "t", "]"}], "/.", "sol"}], "]"}], "*", 
     RowBox[{"thetaDer", "[", "t", "]"}]}], "+", 
    RowBox[{"xder", "[", "t", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.697817716025968*^9, 3.6978177190515337`*^9}, {
   3.697817775949408*^9, 3.6978178480257*^9}, 3.697818597732003*^9, 
   3.697833536220046*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"vypro", "[", "t_", "]"}], ":=", 
   RowBox[{
    RowBox[{"-", "Lb"}], "*", 
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"theta", "[", "t", "]"}], "/.", "sol"}], "]"}], "*", 
    RowBox[{"thetaDer", "[", "t", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6978184329206047`*^9, 3.697818440568946*^9}, {
   3.697818474852159*^9, 3.6978185094774427`*^9}, 3.6978185997847443`*^9, 
   3.697833541373129*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xpos", "[", "t_", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "Lb"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
      "]"}]}], "+", 
    RowBox[{"x", "[", "t", "]"}]}], "/.", "sol"}]}]], "Input",
 CellChangeTimes->{{3.6978320751842957`*^9, 3.6978321034180193`*^9}, 
   3.697832139090425*^9, {3.697832200952203*^9, 3.697832225709626*^9}, {
   3.69783228020557*^9, 3.697832306100347*^9}, {3.697833450144246*^9, 
   3.6978334728108587`*^9}, {3.697834129375326*^9, 3.697834130775317*^9}, {
   3.697834170263117*^9, 3.697834171894404*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ypos", "[", "t_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "Lb"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", "sol"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.697833707021001*^9, 3.697833738695507*^9}, 
   3.697833822342339*^9, {3.697834132531455*^9, 3.697834133889002*^9}, {
   3.697921525527179*^9, 3.697921525647174*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thetat", "[", "t_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"theta", "[", "t", "]"}], "/.", "sol"}]}]], "Input",
 CellChangeTimes->{{3.697982569768621*^9, 3.697982588605061*^9}, {
  3.698084582067905*^9, 3.698084583883671*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Velocity over time", "Subsubsection",
 CellChangeTimes->{{3.698545321087391*^9, 3.6985453254401617`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"vxpro", "[", "t", "]"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"vypro", "[", "t", "]"}], "^", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "0.452"}], "}"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<v\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<v vs. t\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.698429473733262*^9, 3.698429560729043*^9}, {
   3.698439527932795*^9, 3.698439603207614*^9}, {3.698494434860838*^9, 
   3.698494463129622*^9}, 3.698494556178299*^9, {3.698494715720581*^9, 
   3.698494715948057*^9}, {3.6984951650170307`*^9, 3.698495175300119*^9}, {
   3.6985077448338337`*^9, 3.6985077646312313`*^9}, {3.6985393153791733`*^9, 
   3.698539316374692*^9}, {3.698539349976406*^9, 3.6985393507768784`*^9}, {
   3.6985394866095343`*^9, 3.698539487940989*^9}, {3.698539565550519*^9, 
   3.6985396006927843`*^9}, {3.698545328597741*^9, 3.698545384051688*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
VtWObGUJ9D/MicEt
       "]]},
     Annotation[#, "Charting`Private`Tag$6106#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{
     FormBox["\"v\"", TraditionalForm], None}, {
     FormBox["\"t\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"v vs. t\"", TraditionalForm],
  PlotRange->{{0, 0.452}, {0., 6.294613685673275}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.698545384868631*^9, 3.6985453990516853`*^9}, 
   3.69858461310189*^9, 3.698585732752596*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trebuchet Simulation", "Subsubsection",
 CellChangeTimes->{{3.697646100406608*^9, 3.6976461094214277`*^9}, {
  3.6981051679598293`*^9, 3.6981051777340927`*^9}, {3.6985452749270144`*^9, 
  3.698545280111795*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"width", "=", "0.215"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"height", "=", "0.43"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wheelr", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cwWidth", "=", "0.07"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"projbox", "=", "0.015"}], ";"}]}], "Input",
 CellChangeTimes->{{3.698105228021158*^9, 3.698105332379793*^9}, {
  3.69810549092181*^9, 3.6981055325502567`*^9}, {3.698105946748364*^9, 
  3.698105978040491*^9}, {3.698107256987351*^9, 3.698107293656102*^9}, {
  3.698107502818008*^9, 3.698107503347073*^9}, {3.698108409461259*^9, 
  3.698108410564418*^9}, {3.698108440651217*^9, 3.698108440922469*^9}, {
  3.6984958372914667`*^9, 3.698495866928748*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Treb", "=", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Thick", ",", "Gray", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"xpos", "[", "t", "]"}], ",", 
             RowBox[{"ypos", "[", "t", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Ls", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                  "sol"}], "]"}]}], "+", 
               RowBox[{"x", "[", "t", "]"}]}], "/.", "sol"}], ",", 
             RowBox[{"Ls", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                "sol"}], "]"}]}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Brown", ",", " ", 
        RowBox[{"Rotate", "[", 
         RowBox[{
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xpos", "[", "t", "]"}], "-", 
               RowBox[{"projbox", "/", "2"}]}], ",", 
              RowBox[{
               RowBox[{"ypos", "[", "t", "]"}], "-", 
               RowBox[{"projbox", "/", "2"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"xpos", "[", "t", "]"}], "+", 
               RowBox[{"projbox", "/", "2"}]}], ",", 
              RowBox[{
               RowBox[{"ypos", "[", "t", "]"}], "+", 
               RowBox[{"projbox", "/", "2"}]}]}], "}"}]}], "]"}], ",", 
          RowBox[{"thetat", "[", "t", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Thick", ",", "Gray", ",", " ", 
        RowBox[{"Line", "[", 
         RowBox[{"{", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ls", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                  "sol"}], "]"}]}], ")"}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ")"}]}], ",", 
             RowBox[{"(", 
              RowBox[{"Ls", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                 "sol"}], "]"}]}], ")"}]}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ls", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                  "sol"}], "]"}]}], ")"}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ")"}], "+", 
              RowBox[{"(", 
               RowBox[{"Lcw", " ", "*", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                  "sol"}], "]"}]}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"Ls", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                  "sol"}], "]"}]}], ")"}], "-", 
              RowBox[{"(", 
               RowBox[{"Lcw", "*", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                  "sol"}], "]"}]}], ")"}]}]}], "}"}]}], "\[IndentingNewLine]",
           "}"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Darker", "[", "Green", "]"}], ",", 
        RowBox[{"Rotate", "[", " ", 
         RowBox[{
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Ls", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]",
                    "sol"}], "]"}]}], ")"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ")"}], "+", 
               RowBox[{"(", 
                RowBox[{"Lcw", " ", "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                   "sol"}], "]"}]}], ")"}], "-", 
               RowBox[{"cwWidth", "/", "2"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Ls", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]",
                    "sol"}], "]"}]}], ")"}], "-", 
               RowBox[{"(", 
                RowBox[{"Lcw", "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                   "sol"}], "]"}]}], ")"}], "-", 
               RowBox[{"cwWidth", "/", "2.5"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Ls", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]",
                    "sol"}], "]"}]}], ")"}], "+", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ")"}], "+", 
               RowBox[{"(", 
                RowBox[{"Lcw", " ", "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                   "sol"}], "]"}]}], ")"}], "+", 
               RowBox[{"cwWidth", "/", "2"}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Ls", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"theta", "[", "t", "]"}], "/.", "\[VeryThinSpace]",
                    "sol"}], "]"}]}], ")"}], "-", 
               RowBox[{"(", 
                RowBox[{"Lcw", "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"phi", "[", "t", "]"}], "/.", "\[VeryThinSpace]", 
                   "sol"}], "]"}]}], ")"}], "+", 
               RowBox[{"cwWidth", "/", "2.5"}]}]}], "}"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{"phi", "[", "t", "]"}], "/.", "sol"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Red", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ",", "0"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "-", 
               RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "+", 
               RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "t", "]"}], "/.", "sol"}], ",", "0"}], 
            "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "-", 
               RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "-", 
               RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}], "-", "height"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "+", 
               RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "width"}], "/", "2"}], "-", "height"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"x", "[", "t", "]"}], "+", 
               RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", "White", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.75"}], ",", "0.7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.75"}], ",", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"height", "+", 
                RowBox[{"width", "/", "2"}], "+", "wheelr"}], ")"}]}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", 
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"height", "+", 
                RowBox[{"width", "/", "2"}], "+", "wheelr"}], ")"}]}]}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.9", ",", "0.7"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "t", "]"}], "-", 
              RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}], "-", "height"}]}], "}"}], 
          ",", "wheelr"}], "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "t", "]"}], "+", 
              RowBox[{"width", "/", "2"}]}], "/.", "sol"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "width"}], "/", "2"}], "-", "height"}]}], "}"}], 
          ",", "wheelr"}], "]"}]}], "\[IndentingNewLine]", "}"}], " ", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0.0001`", ",", "2", ",", "0.01"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.697805940171775*^9, 3.697806038009831*^9}, {
   3.6978060826751823`*^9, 3.697806225253311*^9}, {3.6978062554398203`*^9, 
   3.6978063811203613`*^9}, {3.697806550241722*^9, 3.697806604963419*^9}, {
   3.697806790675921*^9, 3.6978068532295847`*^9}, {3.697806883662199*^9, 
   3.697806885981534*^9}, {3.697806931220612*^9, 3.6978069314783907`*^9}, 
   3.6978069723414497`*^9, {3.697807063217018*^9, 3.697807085532278*^9}, {
   3.6978071546645107`*^9, 3.697807199424242*^9}, {3.697807734421266*^9, 
   3.6978077351905622`*^9}, {3.697807858697768*^9, 3.6978079891407347`*^9}, {
   3.6978089874619293`*^9, 3.6978089931006937`*^9}, {3.697809968087747*^9, 
   3.697810107761488*^9}, {3.6978145372597723`*^9, 3.697814805281782*^9}, {
   3.697834260498229*^9, 3.6978343174428043`*^9}, {3.697834409580844*^9, 
   3.697834413565755*^9}, {3.697834507488091*^9, 3.697834518966948*^9}, {
   3.697834549027335*^9, 3.697834605966242*^9}, {3.697834803258033*^9, 
   3.697834812879314*^9}, {3.697834883301673*^9, 3.6978349163154993`*^9}, {
   3.6978577698415823`*^9, 3.697857818775887*^9}, {3.69792156132836*^9, 
   3.697921575098229*^9}, {3.6979216053586206`*^9, 3.697921692168551*^9}, {
   3.697921967023838*^9, 3.6979220080802813`*^9}, {3.697922176827248*^9, 
   3.697922191872898*^9}, {3.697922259521233*^9, 3.697922360394786*^9}, {
   3.697922428592292*^9, 3.6979224517691927`*^9}, {3.697922495025406*^9, 
   3.697922582663718*^9}, {3.697922715741334*^9, 3.697922768546529*^9}, {
   3.697930072523144*^9, 3.6979301238113823`*^9}, {3.697930263128145*^9, 
   3.697930312741083*^9}, 3.697930344950191*^9, {3.6979310484326553`*^9, 
   3.697931097124528*^9}, {3.697931181674757*^9, 3.697931227834499*^9}, {
   3.6979315600271263`*^9, 3.697931565299777*^9}, {3.6979319143477287`*^9, 
   3.6979319274851418`*^9}, 3.6979327323313026`*^9, 3.697933835987631*^9, {
   3.697934599140792*^9, 3.6979346001085167`*^9}, {3.6979347388471727`*^9, 
   3.697934742467676*^9}, {3.697978733824749*^9, 3.6979787365330353`*^9}, {
   3.6979788595639753`*^9, 3.697978862499408*^9}, {3.697981654314756*^9, 
   3.6979816600800953`*^9}, {3.69798403582135*^9, 3.697984040461706*^9}, {
   3.697984237339241*^9, 3.697984252587846*^9}, {3.698022425782229*^9, 
   3.698022435718608*^9}, {3.698104872632361*^9, 3.698104895803116*^9}, {
   3.698104959904003*^9, 3.698104971349702*^9}, {3.698105562478634*^9, 
   3.6981055988255777`*^9}, {3.6981056326736593`*^9, 3.698105712627976*^9}, {
   3.698105752218102*^9, 3.6981058617137012`*^9}, {3.698105928830543*^9, 
   3.698105932810656*^9}, {3.6981060645725946`*^9, 3.698106254959366*^9}, {
   3.698106310014022*^9, 3.698106321963964*^9}, {3.698106373255916*^9, 
   3.698106434004006*^9}, {3.698106573010895*^9, 3.698106607496525*^9}, {
   3.6981066627329607`*^9, 3.6981066739380407`*^9}, {3.698106772261533*^9, 
   3.698106794891177*^9}, {3.69810697368825*^9, 3.698106985094431*^9}, {
   3.6981070970878572`*^9, 3.6981071425033903`*^9}, {3.698107224430402*^9, 
   3.6981072520376043`*^9}, {3.698107299193953*^9, 3.698107358397224*^9}, {
   3.698107413145089*^9, 3.698107878177854*^9}, {3.698107919719421*^9, 
   3.6981079442294407`*^9}, {3.698108145625175*^9, 3.698108206244691*^9}, {
   3.698108252097372*^9, 3.698108326197373*^9}, {3.698108358396254*^9, 
   3.698108374890171*^9}, {3.698108420575222*^9, 3.6981084337495832`*^9}, {
   3.698110984756516*^9, 3.698111024421123*^9}, {3.6981722097638607`*^9, 
   3.698172214871921*^9}, {3.6983542633920794`*^9, 3.698354271181546*^9}, {
   3.6984954309182177`*^9, 3.6984955337919903`*^9}, {3.6984957725608997`*^9, 
   3.698495794303845*^9}, {3.698495881780555*^9, 3.698495912001195*^9}, {
   3.698505731386112*^9, 3.698505738809675*^9}, {3.698505877976316*^9, 
   3.698505878223044*^9}, {3.698509807115218*^9, 3.6985098115906076`*^9}, 
   3.698510044964499*^9, {3.6985392406485043`*^9, 3.6985392426575212`*^9}},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.0001, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0.0001, 2, 0.01}}, Typeset`size$$ = {
    576., {220., 224.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$6136$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.0001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$6136$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Graphics[{Thick, Gray, 
         Line[{{
            $CellContext`xpos[$CellContext`t$$], 
            $CellContext`ypos[$CellContext`t$$]}, {
            ReplaceAll[$CellContext`Ls Cos[
                ReplaceAll[
                 $CellContext`theta[$CellContext`t$$], $CellContext`sol]] + \
$CellContext`x[$CellContext`t$$], $CellContext`sol], $CellContext`Ls Sin[
              ReplaceAll[
               $CellContext`theta[$CellContext`t$$], $CellContext`sol]]}}], 
         Brown, 
         Rotate[
          
          Rectangle[{$CellContext`xpos[$CellContext`t$$] - \
$CellContext`projbox/
            2, $CellContext`ypos[$CellContext`t$$] - $CellContext`projbox/
            2}, {$CellContext`xpos[$CellContext`t$$] + $CellContext`projbox/
             2, $CellContext`ypos[$CellContext`t$$] + $CellContext`projbox/
             2}], 
          $CellContext`thetat[$CellContext`t$$]], Thick, Gray, 
         Line[{{$CellContext`Ls Cos[
               ReplaceAll[
                $CellContext`theta[$CellContext`t$$], $CellContext`sol]] + 
            ReplaceAll[
              $CellContext`x[$CellContext`t$$], $CellContext`sol], \
$CellContext`Ls Sin[
              ReplaceAll[
               $CellContext`theta[$CellContext`t$$], $CellContext`sol]]}, \
{$CellContext`Ls Cos[
               ReplaceAll[
                $CellContext`theta[$CellContext`t$$], $CellContext`sol]] + 
            ReplaceAll[
              $CellContext`x[$CellContext`t$$], $CellContext`sol] + \
$CellContext`Lcw Sin[
               ReplaceAll[
                $CellContext`phi[$CellContext`t$$], $CellContext`sol]], \
$CellContext`Ls Sin[
               ReplaceAll[
                $CellContext`theta[$CellContext`t$$], $CellContext`sol]] - \
$CellContext`Lcw Cos[
              ReplaceAll[
               $CellContext`phi[$CellContext`t$$], $CellContext`sol]]}}], 
         Darker[Green], 
         Rotate[
          Rectangle[{$CellContext`Ls Cos[
               ReplaceAll[
                $CellContext`theta[$CellContext`t$$], $CellContext`sol]] + 
            ReplaceAll[
              $CellContext`x[$CellContext`t$$], $CellContext`sol] + \
$CellContext`Lcw Sin[
               ReplaceAll[
                $CellContext`phi[$CellContext`t$$], $CellContext`sol]] - \
$CellContext`cwWidth/2, $CellContext`Ls Sin[
               ReplaceAll[
                $CellContext`theta[$CellContext`t$$], $CellContext`sol]] - \
$CellContext`Lcw Cos[
              ReplaceAll[
               $CellContext`phi[$CellContext`t$$], $CellContext`sol]] - \
$CellContext`cwWidth/2.5}, {$CellContext`Ls Cos[
               ReplaceAll[
                $CellContext`theta[$CellContext`t$$], $CellContext`sol]] + 
            ReplaceAll[
              $CellContext`x[$CellContext`t$$], $CellContext`sol] + \
$CellContext`Lcw Sin[
               ReplaceAll[
                $CellContext`phi[$CellContext`t$$], $CellContext`sol]] + \
$CellContext`cwWidth/2, $CellContext`Ls Sin[
               ReplaceAll[
                $CellContext`theta[$CellContext`t$$], $CellContext`sol]] - \
$CellContext`Lcw Cos[
              ReplaceAll[
               $CellContext`phi[$CellContext`t$$], $CellContext`sol]] + \
$CellContext`cwWidth/2.5}], 
          ReplaceAll[
           $CellContext`phi[$CellContext`t$$], $CellContext`sol]], Red, 
         Line[{{
            ReplaceAll[
             $CellContext`x[$CellContext`t$$], $CellContext`sol], 0}, {
            
            ReplaceAll[$CellContext`x[$CellContext`t$$] - $CellContext`width/
             2, $CellContext`sol], (-$CellContext`width)/2}, {
            
            ReplaceAll[$CellContext`x[$CellContext`t$$] + $CellContext`width/
              2, $CellContext`sol], (-$CellContext`width)/2}, {
            ReplaceAll[
             $CellContext`x[$CellContext`t$$], $CellContext`sol], 0}}], Blue, 
         Line[{{
            
            ReplaceAll[$CellContext`x[$CellContext`t$$] - $CellContext`width/
             2, $CellContext`sol], (-$CellContext`width)/2}, {
            
            ReplaceAll[$CellContext`x[$CellContext`t$$] - $CellContext`width/
             2, $CellContext`sol], (-$CellContext`width)/
             2 - $CellContext`height}, {
            
            ReplaceAll[$CellContext`x[$CellContext`t$$] + $CellContext`width/
              2, $CellContext`sol], (-$CellContext`width)/
             2 - $CellContext`height}, {
            
            ReplaceAll[$CellContext`x[$CellContext`t$$] + $CellContext`width/
              2, $CellContext`sol], (-$CellContext`width)/2}}], White, 
         Line[{{-0.75, 
           0.7}, {-0.75, -($CellContext`height + $CellContext`width/
              2 + $CellContext`wheelr)}, {
           0.9, -($CellContext`height + $CellContext`width/
              2 + $CellContext`wheelr)}, {0.9, 0.7}}], Black, 
         Circle[{
           
           ReplaceAll[$CellContext`x[$CellContext`t$$] - $CellContext`width/
            2, $CellContext`sol], (-$CellContext`width)/
            2 - $CellContext`height}, $CellContext`wheelr], Black, 
         Circle[{
           
           ReplaceAll[$CellContext`x[$CellContext`t$$] + $CellContext`width/
             2, $CellContext`sol], (-$CellContext`width)/
            2 - $CellContext`height}, $CellContext`wheelr]}, ImageSize -> 
        Large], "Specifications" :> {{$CellContext`t$$, 0.0001, 2, 0.01}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{621., {265., 271.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6985100463766212`*^9, 3.698539258912642*^9, 
  3.6985394540282097`*^9, 3.698539531063634*^9, 3.698539562455429*^9, 
  3.698545399118305*^9, 3.698584613161675*^9, 3.6985857328193703`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 571},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 115, 1, 64, "Section"],
Cell[698, 25, 76, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[799, 30, 111, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[935, 35, 142, 3, 32, "Input"],
Cell[1080, 40, 231, 3, 32, "Output"]
}, Open  ]],
Cell[1326, 46, 5604, 100, 327, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6967, 151, 120, 1, 35, "Subsubsection"],
Cell[7090, 154, 1405, 32, 54, "Input"],
Cell[8498, 188, 487, 8, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9022, 201, 118, 1, 35, "Subsubsection"],
Cell[9143, 204, 3739, 105, 243, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12919, 314, 108, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[13052, 319, 218, 4, 32, "Input"],
Cell[13273, 325, 5104, 117, 123, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18426, 448, 110, 1, 35, "Subsubsection"],
Cell[18539, 451, 776, 21, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19352, 477, 108, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[19485, 482, 1879, 44, 159, "Input"],
Cell[21367, 528, 44161, 859, 171, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65577, 1393, 135, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[65737, 1398, 503, 13, 54, "Input"],
Cell[66243, 1413, 39710, 661, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105990, 2079, 489, 12, 32, "Input"],
Cell[106482, 2093, 45910, 763, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152429, 2861, 483, 12, 32, "Input"],
Cell[152915, 2875, 49910, 829, 258, "Output"]
}, Open  ]],
Cell[202840, 3707, 330, 6, 49, "Text"],
Cell[203173, 3715, 5529, 167, 285, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208739, 3887, 161, 2, 35, "Subsubsection"],
Cell[208903, 3891, 165, 3, 30, "Text"],
Cell[209071, 3896, 467, 12, 32, "Input"],
Cell[209541, 3910, 358, 10, 32, "Input"],
Cell[209902, 3922, 507, 13, 32, "Input"],
Cell[210412, 3937, 461, 12, 32, "Input"],
Cell[210876, 3951, 680, 16, 32, "Input"],
Cell[211559, 3969, 432, 11, 32, "Input"],
Cell[211994, 3982, 263, 6, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212294, 3993, 111, 1, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[212430, 3998, 1102, 22, 54, "Input"],
Cell[213535, 4022, 10779, 192, 256, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[224363, 4220, 217, 3, 35, "Subsubsection"],
Cell[224583, 4225, 790, 16, 117, "Input"],
Cell[CellGroupData[{
Cell[225398, 4245, 15587, 355, 663, "Input"],
Cell[240988, 4602, 6997, 149, 553, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

